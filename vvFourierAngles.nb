(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    487028,       9564]
NotebookOptionsPosition[    476565,       9379]
NotebookOutlinePosition[    478656,       9433]
CellTagsIndexPosition[    478451,       9424]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"NumberQ", "[", "makePallette", "]"}]}], ",", 
    RowBox[{"NotebookEvaluate", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "~~", 
      "\"\<visualVocabDefs.nb\>\""}], "]"}], ",", 
    RowBox[{"NotebookEvaluate", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "~~", "\"\<vvClear.nb\>\""}], 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5428065919380074`*^9, 3.542806591940366*^9}, 
   3.554467036373836*^9, 
   3.554546299786681*^9},ExpressionUUID->"4ee1ba6d-dab2-4966-b513-\
f4177a753792"],

Cell[CellGroupData[{

Cell["Inside Fourier Transforms", "Section",
 CellChangeTimes->{{3.543799732963008*^9, 3.543799752000264*^9}, {
  3.5530800171244993`*^9, 
  3.55308002235185*^9}},ExpressionUUID->"471bc0c7-a65b-4c44-995c-\
4930a0fe59c3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.554765565570964*^9, 
  3.890845607216997*^9},ExpressionUUID->"be5b7769-ba7b-4c7c-a6a3-\
30ab647f88d2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8908456055505476`*^9, 
  3.8908456055505476`*^9}},ExpressionUUID->"74024372-0e4c-4f46-b785-\
93319fe130ef"],

Cell["\<\
The spectrum gives important information about the makeup of a signal. This \
notebook contains some of the details of how and why it works.\
\>", "Text",
 CellChangeTimes->{{3.544031960374208*^9, 3.544032013735114*^9}, {
  3.544305473006855*^9, 3.544305592231551*^9}, {3.553080114327343*^9, 
  3.553080114334387*^9}, {3.554467438206729*^9, 3.554467448746623*^9}, {
  3.554488839698436*^9, 
  3.554488848846368*^9}},ExpressionUUID->"e0ce9a70-aac3-4dfd-afd3-\
6ad8d68e45ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<FFTMatrix\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<vvFourierAngles.nb\>\"", ",", "\"\<labelFFTMatrix\>\""}], "}"}],
         ",", 
        RowBox[{"BaseStyle", "\[Rule]", "mathColor"}]}], "]"}], ",", 
      "labelFFTMatrix"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<FFTOrth\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<vvFourierAngles.nb\>\"", ",", "\"\<labelFFTOrth\>\""}], 
         "}"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", "mathColor"}]}], "]"}], ",", 
      "labelFFTOrth"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<FFT2Sines\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<vvFourierAngles.nb\>\"", ",", "\"\<labelFFT2Sines\>\""}], "}"}],
         ",", 
        RowBox[{"BaseStyle", "\[Rule]", "mathColor"}]}], "]"}], ",", 
      "labelFFT2Sines"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<FrequencyResponse\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<vvFourierAngles.nb\>\"", ",", "\"\<labelFreqResp\>\""}],
          "}"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", "mathColor"}]}], "]"}], ",", 
      "labelFreqResp"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5530801226594687`*^9, 3.553080161197172*^9}, {
   3.5530801995165863`*^9, 3.553080260941469*^9}, 3.5532866050930243`*^9, {
   3.554482391237122*^9, 3.554482399684469*^9}, {3.554482552004648*^9, 
   3.554482564082136*^9}, {3.5544838811300697`*^9, 
   3.554483916575706*^9}},ExpressionUUID->"cb8dbe85-41c9-48df-acb9-\
221d0713cca7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"FFTMatrix\"\>", True->
        StyleBox["\<\"FFTMatrix\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{
          RGBColor[0.6, 0.4, 0.2]},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"vvFourierAngles.nb", "labelFFTMatrix"},
       ButtonNote->"vvFourierAngles.nb"],
      Annotation[#, {"vvFourierAngles.nb", "labelFFTMatrix"}, 
       "Hyperlink"]& ], "\<\"The DFT matrix consists of rows of \
(complex-valued) sinusoids\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"FFTOrth\"\>", True->
        StyleBox["\<\"FFTOrth\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{
          RGBColor[0.6, 0.4, 0.2]},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"vvFourierAngles.nb", "labelFFTOrth"},
       ButtonNote->"vvFourierAngles.nb"],
      Annotation[#, {"vvFourierAngles.nb", "labelFFTOrth"}, 
       "Hyperlink"]& ], "\<\"The inner product between different rows of the \
DFT matrix is zero\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"FFT2Sines\"\>", True->
        StyleBox["\<\"FFT2Sines\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{
          RGBColor[0.6, 0.4, 0.2]},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"vvFourierAngles.nb", "labelFFT2Sines"},
       ButtonNote->"vvFourierAngles.nb"],
      Annotation[#, {"vvFourierAngles.nb", "labelFFT2Sines"}, 
       "Hyperlink"]& ], "\<\"The Fourier transform (spectrum) of the dual \
sinusoidal signal shows peaks at each of the two frequencies\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"FrequencyResponse\"\>", True->
        StyleBox["\<\"FrequencyResponse\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{
          RGBColor[0.6, 0.4, 0.2]},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"vvFourierAngles.nb", "labelFreqResp"},
       ButtonNote->"vvFourierAngles.nb"],
      Annotation[#, {"vvFourierAngles.nb", "labelFreqResp"}, 
       "Hyperlink"]& ], "\<\"Convolution in the time domain is equivalent to \
multiplication in the frequency domain\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",ExpressionUUID->"0cd934a1-dacc-42e7-\
87dd-5d1801d49a65"]
}, {2}]],

Cell["\<\
The way the (discrete) Fourier transform works is to compare a sinusoid of \
one frequency to the data sequence. Then to compare a second. Then a third, \
continuing all the way up to the highest frequency that can be represented by \
the length of the data. Then all these comparisons are placed into a list \
called the spectrum. In the figure below, the green sequence x represents the \
data that is to be analyzed. The rows of yellow w\[CloseCurlyQuote]s \
represent the different frequency sinusoids, starting with frequency 0 (all 1\
\[CloseCurlyQuote]s) followed by a frequency that fits one sine wave cycle \
into the length of the data, then by a frequency that fits two sine cycles \
into the same length, then three, etc., all the way up to N-1. The \
correlation (or inner product) of these sinusoids and the data sequence are \
stored up as the blue sequence on the right. \
\>", "Text",
 CellChangeTimes->{{3.553979568623324*^9, 3.553979940335327*^9}, {
  3.554478715594891*^9, 3.5544787347725077`*^9}, {3.554478899156304*^9, 
  3.554478902959796*^9}},ExpressionUUID->"a518ace2-7bb0-44f4-8780-\
d79badce18fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Image", "[", 
       RowBox[{
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzsvU+ILct1p1u892jeQN31Bj1xQ1M2aURL7qtyWxa+jeSu+wTC3GvJ1djI
ksB2ycJX3c+6+MCVLGHcUFeC9sCSKYzbNnIjSqIRmL42BwQWSJPiaiIaBMcD
a9ADUxhNjAc+aOZZvVq7YtVeFRWRmZEZmSv3zu8L4pza+W9FRK6dGb/4t3/s
E09+8ZP/x8HBwaf/79t/fvHXP/f/vv76r//OL/0/tx8+/Fuf/v/+02+9+hsv
/9ZnXv1Pr77+4if+z9uNH7099u9v//i/DgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgRXP0oye38YZIJBKJRCLR
OZ5714sAAAA8uX0XnnzoIz9/8z3HIO9kT/uS/69992urtf+5i89uopd9yTs+
iA94+4B3wAfxQXzgs+hzAABYPehz/zqJt33qxfggPuAf8EF8EB9AnwMAAKDP
/esk3vapF+OD+IB/wAfxQXwAfQ4AAIA+96+TeNunXowP4gP+AR/EB/EB9DkA
AAD63L9O4m2fejE+iA/4B3wQH8QH0OcAAADoc/86ibd96sX4ID7gH/BBfBAf
QJ8DAACgz/3rJN72qRfjg/iAf8AH8UF8oFuf3x53VXjd63DOEuLFbTxfSDy9
jSeJeDxX/RMAANKgz/3rJN72qRfjg/iAf8AH8UF8YBJ9TigLV3PVPwEAIA36
3L9O4m2fejE+iA/4B3wQH8QH0OcLCOhzAABn0Of+dRJv+9SL8UF8wD/gg/gg
PoA+X0BAnwMAOIM+96+TeNunXowP4gP+AR/EB/GBMn3+F99/8+b9L7+0KbfX
Pv+pzfmf+PTHbz7y6odd87HjAX0OADvNl793c3Ybr3Y4HqPP/eskQ+1L3eSb
P/jm5u+3fvjW5vMQ+9SL8UF8wD/gg/hgygfk2S5pE82pz3lJpz77a4aUD4id
L735xY3+lc/yt6RlivwP6T8P5zy4jpTRCy+88z7NXeFPv/Unk+RnRwP6HAB2
mlt9e34bb3Y4npToc60nvPje92ze2fJOk3fg2HpC33qpvHPlXSz1A/ms7eVj
30Yl9dIp0jCkXixlrnUQuS+ShqF1JurF5dpIvwtf+Mob95+lDOX/IfZLfaB2
nbnEB6aory/BB7xDzgeneu7GIeeDer+ln1I+i59IWmrnP+WDc9mWkPLBucpe
Q9tzSNImzxtJw9C22K7Q9hyStKntqezX0ucSJB+yveu5Kv619mdPFNDnALDT
rE2fa5C6uNTNa72jS7SR1qGkniJ1pBr1pFJtVDsNY/qtpN44VluXaDO553Lv
JUrdVXxBxhOOsV+qzaZIw9C+S9ENUmcVX5A4lz636a5RZx7SRlOzvj5Un3/y
/JM3bzt82yZ+7MnHBtm+en5188GzD97cPtJvfuToR27OL88HXefrz75+8+6T
d2+u8/bjt28+l5Zn2/7az904dPmg6NIxPt4V2nxwatsS2nxw6rLX0OYDOnZ7
SvttPiD7tF16qlBTn0uQ96OWmRyn7w3Ji/iSRPlb36PyLk8dl0urtovbdlpt
s5d3gy0vva69vmy37Qj6PrN+KNdQOzqGQu2obUm/bSMVP5V8y3n2vrWlzwT0
OQDsNGvV5/p+qfVOLtVGcnzN/osh2qhmGsboc3knx2PztM+nb122VJvpnD+t
k4wNQ7RZ7TQM1edaRxprf6gP1KozD9HnNevrQ3zgy1df3mhhG2VbqW3R+PYa
ovVFs5deR7W5Rvlccn6XD9Z+7sahywdlf61xwKox4vzlfLCm7Vxo88Gpy15D
lz6faly5hi59Hj9v5XN8z2Sbtp3G19BxRm15rKnPJc0S5X1hj7F5UQ0rf7cd
Z4OUkfqD5EmPsfMOxF+1nhC3rVibEmw/v90n2+x58s6z7Q2iy/W7JNeQ9Mvf
Ot5DjpNntOYpl74of+hzANhp1qzP43PkvaBj70rr7CXaSN490peS6scQu0P6
N0q1USoNsk3em0PqkUO1mbb92/qOpEnvgb67u64ztO+0Vl/W0L7TtjSk6v9d
1xqSdvH5Gn1aY/S5rT/Kvdc6qcS+9fmh+jxVdxXf07H/ffM0xAdiXS1RtpWW
YayrDwbq/PgaEkvO76PPbRnpM8feN92Wa7fS53Sq/a6PPre2dNy3vY7ex1zb
pa7lJc/PVP7a9LnuG5LvruvbtE9R9jofRPLf1q7bNsdBvtt2bL/YidOrz6P4
3uq7Qq7f1iec8wH1m9SzTu5l/M7P+ZH2Fbfdoyn0ueZB02DHncX3NnecDXIP
Jd/a567rAkg61M80yn65ji2Tvvpc+9Lt9bSsc9dIjdfXMU659EX5Q58DwE6z
Rn2uz/m4fmXrDfJOKelbLtFGUkeRek5cH9D+1KEap+S8VBq0bUL+L+1bH6rN
xJ6tU2o9wV63T3tFqTZL1TfG5GWINsuloa3+3xaG6nMdJ2i3aR+RpK2vHwwp
t1SdWfxSrqOxb5/fkDEUqfp63J/W9z4M8YEvPf3SIz0s20quIUHGxcfXGdJ/
LmPa7TXkc8n5bT6Ye+5KucXjVHN+JOe3tde0+aA8ayTG56vmjDV6zn5bm1nO
B1O2S/KttrvWCsn54Niyt8+Aru9Z7ANSXjrvXT7LM0/SonZsf2pbGiSN+n5o
G3cU+4DO39JnmfbL2veKzsm37dJt92Iufa59yppXKQMpK73POX2eOy7lF9rm
oW2SuXd/PA++rz6X/3Ptv7lrpN5Jek961k3Q5wCw06xJn8u7SN9B8lnf8fJZ
31P2vVEy7riPNtK1yjUd+v6M9eiU+rwtDba+0lcXD023jrXUvKfmZqbGHbZd
r0Sb6Xy4+B5rfWYOfZ5KQ1f9vy0M0edaH9U1+tR+W/9ULpSUW586s6av7zX7
+kCXba2r2+9IH/tDx1DovHGJ8nfp+RJEi1ttPWb+uYyNPwhj5GvMP2977mq5
aV+e3Za6vrZn5ea+pHxQx+KotlMdZvsYdZ6unpOzL/pa5wOnNELsg222S/Kt
383S/vOaZa/pyI37zvmAtkvoOXZdRrUn6YrHNaRs23LOjXGLfSAe159qG9c6
gLYddJXDXPrcjv+2awxqPlP6vO04G+y7RseJa3uAPV7bVuJ++L76XMpb3y96
bGpcvr2Gjme390DrLrn0RflDnwPATrM2fR5rIX2ux/WaUr3XRxtJHcWucSKf
Yz0ytT7vkwbdPoV9DfGadHG/ub5zW9Z/eRD63i8dI6BjLXX+caxNp9TnbWno
qv+3hRJ9rnU4taFz0O341pK+cwkl5danzqzH9bXf1wf62Nb6Ycn3YKg+lyA6
+BvX3xh0rg0ypn1Iv7kNcv6QsfEScvo899zVctPtcd+qDTpWV58dqXHWOX1u
7cVrh+vx4vfaFtPVj63f06755222++bbHjtEn9coewk6R1mOa3sml7YTaluL
fdZ3PUeGjqFoS4P+r1pS05VqD6qtz+UZZOc66dpodp6FlL2276helmP0Hmsb
i+rh1HFxnnUege2f0LTo3Af7Gxc6D8DOQdLrqR3dZ7+rcp7qe5uWNo0v/qC/
L2ef0bn0RQF9DgA7zZr0eVuYo/+8T5han/cJQ9YYrmnfBn3Xdx1Xos9tPUXz
ascPzKHPU2nQz231/7ZQywfjdXj7rkVQ2we61mGKw5D556kg9UmtF0v+U+Ms
U2GMPt+XMMQHrc+onrDtpnpf4/JNjfUeo80kxP3LOsYlpUdTc1NKfLBvvjUN
qmXa1jQs9cG+abDnaB9m7ppD9LleV8etxO0RNp1d76exPqBtl3Ppc1vOGuN3
hE2b5l91uaYr9tvccfY+yr1We3a/bo+f/ZpW/d/6mq4hp+UVzzHQ3wfR9gZt
79H543pN69vq+6k2t1T6TECfA8BOgz7fBlsPn3L+eVvw1ufaryt/zzH/PBVs
vUTb6rvOGavNbN1I+wFK8jOFNsvNj8+Fmvpc/+7bPiKhtj4vXSuxlj6Pr9N3
TQj0+Xh9LkH76VLH2jVCUuMexmqzrrnNsa2S9duH5lu1i/Z3pvpC7TWH6vOu
srdl1GZjqD6XoP34beMItMxzx5T6QDzGQEJKE9r8t63rOaT/fBdDrM8XFtDn
ALDToM+3wa4LXLp+eS1tpL9FXXpeDW2k/QbaR1MyfqB2/71dI6zPOWO1mfbZ
6FxI287fJ0yhzUrngNfyQTvnQXyx7/zr2vq89H7W0uc6lkbXteo7xh19Xu6D
ufXCc2sC6hxs7T+L95f6oN6zeK5Nbv1yfT7rfOX4mL4+WJrvvtcv8cGSNOh6
2jo3uGT+eVtIrdWeW3NC55xozD2XhvhA3D+u5dN2fM4G+nwRAX0OADsN+rxO
qKGNrEb0GF9u6x2laZhqfHvfUEubDc1LDW3Wp/7fFmrpc10DSucy9vWD2j5Q
Ov++pg9IKL0H6PN6Pjg07NNzaEhYgg/iA/uvz7UvQ8eme6cnEdDnALDToM/r
hLXXSbztUy/GB/EB/4AP4oP4wP7r8x0I6HMA2GnQ53XC2usk3vapF+OD+IB/
wAfxQXwAfb6AgD4HgJ0GfV4nrL1O4m2fejE+iA/4B3wQH8QH0OcLCOhzANhp
0Od1wtrrJN72qRfjg/iAf8AH8UF8AH2+gIA+B4CdBn1eJ6y9TuJtn3oxPogP
+Ad8EB/EB3rp84vv3Wl04jTxYq46NADAFKDP64S110m87VMvxgfxAf+AD+KD
+EC3PgcAAGgDfV4nrL1O4m2fejE+iA/4B3wQH8QH0OcAADAO9HmdsPY6ibd9
6sX4ID7gH/BBfBAfQJ8DAMA49kWfS52ASCQSiUQi0TmizwEAYDD7oM+9yxAA
AAAAAABgLOhzAAAAAAAAAH/Q5wAAAAAAAAD+oM8BAAAAAAAA/EGfAwAAAPjQ
HP3o8W28kHXlwv8Sd7Juc5vuJ7fx2jsdMbdpOgvl+oz1+wBg6aDPAQAAAHy4
1YtXt/HQfBaNe+aZpqE04fd0KlznuEZ6zPWe63Vv42nNa0+N+EYoV41HYbt+
rlpWAOAP+nzzjDvyfhd6t+eGtuWjFds/8eyvWED+ve17l7/7MwDuWIAveNt3
9UVv+yENs78PPfMdfpPtONq2k8+jGvo8aOinS0qTN6FMxE8uzLbT23hp23YA
YD9An98/u69qlOeINLi+O0L7vWed1Nv+uWcbyQLy723fu/zdnwFwxwJ8wdu+
qy962w9pmP196Jnv8Px9nnoGa7qCPjvU8e9m30X4/1yf46pvQ3zUtxqu8ySc
cxrOuwzb7b4z1cmh/eI8xEvbnhv22fH5N8ZOnN4rTVPYb6+peZQx6Ndh+1HY
rtd+kilDm+5LLctg8zJo2/PGsR16LOF+XprPl23HA8Dugj5fb30ksu+tz7zt
e9fJvfPvbd+7/N2fAXDHAnzB2z76fH36/Djo0ZugwQ6j/TdGb57bdIZ9F0br
ynXOwr6rnIYzxx6F+EyPDde7Dvr80uw/DPulrJ4bPX1t9j2x9y+TXs3Llflb
znueOecq/H/Ykp9nke5/bsph5/vPheauLeXG3GvXfvNQrnrfjyq0fcj5RXma
IA1ecwWK7AYfODGfj2fyB7FRXMYT3Ke9B32+3vpIZN9bn3nb966Te+ff2753
+bs/A+COBfiCt330+cr0ebCvmusmaEvbP92lz21fcVYbR/bi65y16OPL+DvR
bPvc7/vH+6RB0xu05rMo/08y5zw3+x7V60Par6Jtm/aHVJp2mdAWctWMnHPe
PBwPEcfOuRVBD0q5P23M+oZj0nSLnN+7HjJRGryeAUV2Q37l+/ek2c5zmGNd
Bbk/RWU80X3ae9Dn/u/lkAb0+br1oXf+ve17l7/7MwDuWIAveNv31onu34U1
6nOTjuOgR+045jn0+f25iX1XCX1+HrY/2Fegz0vSpuML7vvE245P5Gef9PmF
bdcYcZ14zTkbe2n/oPGv++j5nhTp84nSsBP6XAia91nf+1WJYn0uTHCf9h70
+TLey97vjgXoM2/73nVy7/x72/cuf/dnANyxAF/wto8+X5E+V00Ubbto0eBT
6fP7/uzEvstYE4Y0yvbNPPcoP330+ZPwtx0noPPf43OOwv9nTWYtvbDdroEv
+dmr/vNm2/f4qAzC/gdjnmdK0/Pm8XyM46b/+GU59yREaZN6Yj4PTkPY3ne8
97Gx+cz83TcPQznK2O3bPnKcaqsJ2+PvyHFj1v6P9mlbTVt5adrk/lyaz73H
1Mf3KZUe00aUvW7Bfd1p0OfrrY9E9r31mbd97zq5d/697XuXv/szAO5YgC94
20efr0ufS7/Ss+ZhvfXS+mCo1z4J9eir5uG48DH6/Np8vmrybQBHIQ2n4bOu
4XakNpvtXO94/vnm99DDOTp/+rTZzhF/Fj6fap5t2oINq/+fZTSGbLfj7J+a
9O68Pm8ejv+Xe3UZ7dc19HRNvlYN04wc3x6ucRLK/cRsuwjXPu15HbmX5yGK
z12az0PTcBR/hzo4Mzavzd9T14m0Lzq227f8pV3qeWK7rglxHG27SByrz59n
TTSvJkLTJvfnynzu1YaRuU86LuYw2pZbA/I4vsY+gz5fb30ksu+tz7zte9fJ
vfPvbd+7/N2fAXDHAnzB2z76fEX6PNh+2jxc//w82q9rrJ+HOvm50cZXRrc9
CZ9V/16Ea6f07Hmo6543Zu5q7jyredR+In1PQ/oumq3WP2y2/ew6Z/YsuuaV
zXM456lua7Z99RdNZo5ts+1313I8MTYutJyaHe17a8zvqKV0WWPW6g/7kxrH
HF9jfPup8Qe93oO2lMJsFmviRBq0jIY+x72efUV2m+3vGlw16X5obRezGv1R
2TamDcV+51rQNoUiWu7TZfO4fTLrA41zXXVO0OfrrY9E9r31mbd97zq5d/69
7XuXv/szAO5YgC9420efr0yfexD8fDX53VVMW4XVUaLLbqI2DTtmYVJfDunR
NiHtAz2Ln50D6hW99XkuDWb/lPpctPD1weO+Y2mPiNuPUtuG2r0fT9Js29Oe
pMo5+MBZ8/C3FVrLtjHtai0U6fMe9+kkaPQHc2Raroc+352IPq9j31ufedv3
rpN759/bvnf5uz8D4I4F+IK3ffQ5+nxy0Oe7QbOdN3yi/Y7m832/6cz6/Djq
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
7b1YQ5+3rRO3I/pc6wMu7Z3xe8LBvtaJ3foOG8f+mmD/Oq7rzGhby99tzZwF
lP8zr/aZYP+pZ/sAbAl1cLexoaF+7dJWFexfOrdVaXutS1uVaS/0mvs+95z/
p7G/BX2p9QLb93zaDOg/j445bbb95TrP+nn4HOtjbTvVd9RpYt9Riz7X847j
fRl7WX1u9j9tzJz5jnJ92jycJ39uny0D9bnelyOz7ziUgx2HcO1ZpwKASZB6
qjxDJm+/r6HPT88+ff9b6HaduB3S56eNb3+NtvW69NeENLi1DwT7z+auj0X2
Lz3buxsz1tDJ/pVz+4x3+T/xap+Bh8R1cgf7F85tVWfObVWP+jxntv9gXvCM
dk886gGmPeKp0X+2j9iOfX/abMdn99Hn2uagfdmqmU+a7fpph0bzn9iyD8er
lr5oHs67ftI8XD8t1+99FfJx2PScf565zmHJOyqU4/No21WznduveT1ptuu6
WT3+JKT1sNnOwdJ58c9Dnk6bh3P8L035XHjWaQBgEuQ7Lc+o5+HvyRirz/V3
1OT/8Pza9KfvmD4/bJzX8vCsjwX7rtokvMvcxhaHd7HL/IZgfwnl79k+cOZZ
l9G6q5d92KJawtH+qXNb1f3aXY5p8H4eeayNd+iV72bbL3zVPO6jPm+2a5+f
mO0XzcN1yY+abd+y7XN/Eq572Tych31h4oPx7aq942dis11f/bx52C+tNk7i
dDTbdea0T/08HH9oz+txnaPm4Vqqz9ue2Sk935h14Zvtmvn2b1uemu6n4bzL
Zttuop8ftGuH9Gv58D4B2D/k2XpjorwzJqmvjNHnMpZd1oPT31HTdeJkPvou
6XPBU5stxL5bfTjY987/ceO4nssCyt/bvmv5hzS4lgHc4dlOF+wfLSAN3s9D
7+eB11owq34GNM5jJ9oI74izZjvf/cS7HQkAVon0594cTKzTh+rz1O+o6Tpx
sn3X9DkAAADAWlm4Pn9q+6RVr3umCTbje6+IxJXF64PH+lyjjP06O6gwP32I
Ppfx6zLfPP4dtT7rxMl2+R02iZXWej8ZWwYAAAAAa8aMLz9tHNfDSRHGteiY
8kvvMSaw4fwgr1OIxLXGq9s4+vlUqs9Fg8t8c9HXqf0vvfKRjT6X/+N9osft
eHhZS07WlkOfAwAAAAAAwIKR9WFSuvzyNlabG1eiz0Vf6zrtotFt/7nodru/
CWu56/h30eSy79U3vvJgjLwcF/fDo88BAAAAAABgQVwfPNblR7WNDBnfPiTq
+u6xFpdtI/vQ0ecAAAAAAAAwFTJu3Y5jn2wt2bn0uYyHFy2eGg8vffHocwAA
AAAAAFgg0lcuv30++W+wzqXPdV563+0l+jys43lFJBKJRCKR6BzPpq67AQDA
7EifefWx7Cn2RJ+fvPKBd91859sfdYuSB0/7kv8/+6NXVmv/9dfet4le9iXv
+CA+4O0D3hEfxAfxgfdJGZzPUX8DAIDZODyo8LtpfdkXff7RX/ypm3/6x0+5
RcmDp33Jv9QN1mr/D37vA5voZV/yjg/iA94+4B3xQXwQH/gA+hwAAEYxlz7/
td++yOrz1G+xoc93q07ibZ96MT6ID/hHfBAfxAfQ5wAAMI659Pln/vhbm/d2
av12+5tr6PPdrJN426dejA/iA/4RH8QH8QH0OQAAjGMufS7x3/30ezf96PpZ
f/9cfjsdfb7bdRJv+9SL8UF8wD/ig/ggPoA+BwCAccypz0WPi0aX///wrR/e
/NyHX938LvrI66LPF1An8bZPvRgfxAf8Iz6ID+ID3fr89rjj23hCJI6Jc+kE
AJifOfW5RNHlMp5d+tFFp1e4Jvp8AXUSb/vUi/FBfMA/4oP4ID7QS59feZYR
cT/iXDoBAOZnbn0+QUSf/6N/ncTbPvVifBAf8I/4ID6ID6DPifPEuXQCAMwP
+rxOXHudxNs+9WJ8EB/wj/ggPogPoM+J88S5dAIAzA/6vE5ce53E2z71YnwQ
H/CP+CA+iA+U6/O//u6v3LzxOy9tzpX/JWoeZJ+Uqfw/d15ePfuZTUztk/S9
8oF3DSprycvrr71vc+2Uv/7D331ys1/K4WdffMfN3/7Nr7v61NRR8mvvv3zu
c95cOgEA5mft+vzvr3/j5tvf+I83//uvf3XU83VMneR/vfXLmzSMsT+2TiL2
JR0e9mvcgzH1YrEr9iUdQ+2PrRfXSMNQH6xhe6wP1EjDGB+o4YNL0Ebeccxz
sMY98H4O1tDnY9Iw1gfH5n+sD9RIwxLeRaX6XNJsNdmf/dErN3/+1V/Y/C3b
5Zp9NVvN+Fd/+Uub2Havh5S16HI5T/IkeY33yzb9HsnfHnmfM0o7h5aD/C+f
+5w3l04AgPlZqz6X9/B/+dx7bg7/xT+TZ9zm7zHP1yF1EqkH/If3/quNfYlj
7A+tk/z3//b+m6N//c839iUtc9qveQ+G1IulDvarH/s39+U/po1kaL24ZhpK
fbCm7aE+UDMNQ3ygpg+iz4c9B2veA+/n4Bh9XiMNQ32wVv6H+kDNNCzhXVSq
z1P946rPlxyH6vOu8+Qeeo5DmTPKfY6/M/K5rV1E4xSaAACWwVr1+Yde+bHN
u/i1//wuF30u/QNiV9Lxrn/7L130+Rf/6/vu837gUCeqeQ+G1IvFtpS9pOPA
SZ/XTEOpD9a0PdQHaqZhiA/U9EH0+TBtVvMeeD8Hh+rzWmkY4oM18z/UB/bt
XTSk//wnf+LHk+mWbTLmWfW7fpb/dYy4jv/W+y/H6phpiXot7Ze219M+bNku
19M02O16vvblS5R9bTpbtqst7f+XdIbyeWArLj8Z0y750DYKm2fJr2pXm27b
vqHHyz65hr1OW/nIdfV6akPTLNeQ/2P/kv1qS87TfEo65bPeG7metaVRjom/
s/JZtnf52gSSAAAWwlr1uehjHct24Nh/Lv9rH/oY+0P7LnUc34FDnajmPRhS
L9by1zqhhz6vmYZSH6xpe6gP1EzDEB+o6YPo82HPwZr3wPs5OFSf10rDEB+s
mf+hPrBv76Ih889Fk0rZia6Lx3PHOlg+q9ZTHZg6VvWk/C1a1upaPUbGUlut
Lu0Eqmft+XHZ6rz4VFmLHTtvXa4jdjRfpf3ncp7mWbar1tVrSH4k3XKc7LNp
luPs51z5qDZP5U2O0TkIYkvulaZL/tZ82fn62s5gyyS1hoBeu2tbKk4mDADA
nbXqc42e+lyjlz6PnvOz14lq3oMx40o99XnNNAz1QU99XjMNY3wAfV4njnkO
eulzG8c+B2vMPx+ThrE+ODb/Y32gRhqW8C4asn679k1L+YnWtGuipfR5SmO2
7dN5zXpd+V90eOwvVlfG+jWeF53T2XK+3R7r/iHj2+05knb5rN831eCifyWN
dmx43/KRNEs7h17T9t/b9Mi56uNx/7vYV9vapqCfc88F9DkApECfo8/Dc37n
60Toc/Q5+tw3os/R5+jzcb+vJhpPtGyuTzz+3Fd/ShQtKfu1Lzjerz6k99Du
Tx2b09mp7VbjjtXnmsbUunHxtfuWT9uc75w+75onr2PXpT0htQ6ePSa2lxoL
n/iuAMCegj5Hn4fn/M7XidDn6PNd1Oe6LpXOfx1iW8bm6jp7ssaWrLU15Doy
zlefR7IuQOk62uhz9Dn6vEyfS1rj9LaNyY4/99Wftt9ctsk4bF2bzOpc0aip
/nMdQx7f61z/eawvpV+7dv+5XUNP8iD7bT99Sflo/7m1qXo9p8+lDO0YdlvO
Np2pOQsaU+vDSR5YHw5g3aDP0efhOb/zdSL0Ofp81/S52rVxSBlo+WkUrT/k
t+rs70kMeSagz9Hn6PMyfS4azs7NlqjjrG2Z9tXnou30N8lku45Jl+N0/rNo
P9Wist9qabv+mr22jlHX87rmn9sx+jruPJef1D1s0+d6jGpxXQ9O13zT30yX
z/FvrLeVj46Z/05Y207LK6fP9W/9vTi7Fp29l7nfkNdof19NrsPvqwEA+hx9
Hp7zO18nQp+jz3dNn8e6emgaYl09tCzja5Q+l9Dn6HP0efn4dtFvuvaZ/h/f
U6vf9LPqUbuGu66PZtccl32qydWGtgfoOHe1q2WXurboVdW7er3c78B9J6wv
r2u9y/V0fTUdv237mjVq+sWOXbPeloFNn17Ltm9ou4Kdmx5fPy4f2adps+vB
61rsakOPsWPtbZmk8tPVF6550edH3997r6kFAGBZoM/R5+E5v/N1IvQ5+nzX
9Pn//B8vP9LDsq3Utv4ulI1D+s/1tx41yuc5fLDWPfB+DqLP0edj558T68bU
vPm57U917bpqAACWBPocfR6e8ztfJ0Kfo893TZ9L1HnjEuXvIbZFi1ttPWb+
uYyNPwhj5Jl/Pp8P1kgD+nwZ7yL0+XKihz7XOf7SJ55bF65GnEITAMAyQJ+j
z8NzfufrROhz9Pku6nOJooP195/HRMnHkH5zG/V3oIeciz5Hn6PP0edLiTJG
PR6jP0fUee991mAfEycTBgDgDvocfR6e8ztfJ0Kfo893VZ/vS0Sfo8/R5+hz
4jxxMmEAAO6sXZ9rX9HYvqsxdRLpO/PURhLFfulY1lr2a9yDMfVisTu233Fs
vbhGGob6YA3bY32gRhrG+EANH0Sfj3sO1rgH3s/BGvp8TBrG+uDY/I/1gRpp
WMK7CH1OnCPOpRMAYH7Wrs9rxbF1krFxbL101+3XqBePiUvQZmv3QXzAP+KD
+CA+gD4nzhPn0gkAMD/o8zpx7XUSb/vUi/FBfMA/4oP4ID7QS5+f3cZzInFM
nEsnAMD8oM+pk+yDferF+CA+4B/xQXwQH+jW5wAAAG2gz6mT7IN96sX4ID7g
H/FBfBAfQJ8DAMA40OfUSfbBPvVifBAf8I/4ID6ID6DPAQBgHOhz6iT7YJ96
MT6ID/hHfBAfxAfQ5wAAMA70OXWSfbBPvRgfxAf8Iz6ID+ID6HMAABjHvujz
n33xHfd1I48odRJP+5L/119732rtS51Mopd9yTs+iA94+4B3xAfxQXzgp9Dn
AAAwij3R50fyPiQSiUQikUh0jifedTsAANhd9kGfe5chAAAAAAAAwFjQ5wAA
AAAAAAD+oM8BAAAAAAAA/EGfAwAAAAAAAPiDPgcAAAAAAADwB30OAAAAAAAA
4A/6HAAAAAAAAMAf9DkAAAAAAACAP+hzAAAAAAAAAH/Q5wAAAAAAAAD+oM8B
AAAAAAAA/EGfAwAAAAAAAPiDPgcAAAAAAADwB30OAAAAAAAA4A/6HAAAAAAA
AMAf9DkAAAAAAACAP+hzAAAAAAAAAH/Q5wAAAAAAAAD+oM8BAAAAAAAA/EGf
AwAAAAAAAPiDPgcAAAAAAADwB30OAAAAAAAA4A/6HAAAAAAAAMAf9DkAAAAA
AACAP+hzAAAAAAAAAH/Q5wAAAAAAAAD+oM8BAAAAAAAA/EGfAwAAAAAAAPiD
PgcAAAAAAADwB30OAAAAAAAA4A/6HAAAAAAAAMAf9DkAAAAAAACAP+hzAAAA
AAAAAH/Q5wAAAAAAAAD+oM8BAAAAAAAA/EGfAwAAAAAAAPiDPgcAAAAAAADw
B30OAAAAAAAA4A/6HAAAAAAAAMAf9DkAAAAAAACAP+hzAAAAAAAAAH/2QZ83
Rz96eBtPiEQikUgkEp3jkXfdDgAAdpc90ecnL7zwzpsPfeTn3eJtGlztS/7f
//JLq7X/4nvfs4le9iXv+CA+4O0D3hEfxAfxgfdIGZx71+0AAGB32Rd9Lu/F
7zkGqZN42pf8f+27X1ut/c9dfHYTvexL3vFBfMDbB7wDPogP4gOfRZ8DAMAo
0Od1wtrrJN72qRfjg/iAf8AH8UF8AH0OAADjQJ/XCWuvk3jbp16MD+ID/gEf
xAfxAfQ5AACMA31eJ6y9TuJtn3oxPogP+Ad8EB/EB9DnAAAwDvR5nbD2Oom3
ferF+CA+4B/wQXwQH+jW57fHXXmW0QrC1Vx1aACAKUCf1wlrr5N426dejA/i
A/4BH8QH8QH0+QIC+hwAdhr0eZ2w9jqJt33qxfggPuAf8EF8EB9Any8goM8B
YKdBn9cJa6+TeNunXowP4gP+AR/EB/EB9PkCAvocAHYa9HmdsPY6ibd96sX4
ID7gH/BBfBAfKNPnf/H9N+/9RuOX3vziZrtnOe54QJ8DwE6DPq8T1l4n8bZP
vRgfxAf8Az6ID+ID5f3nr33+U5tye+uHb20+S/o/8uqHN3n55g++2cuunkvY
BPQ5AOw06PM6Ye11Em/71IvxQXzAP+CD+CA+UK7PwzmPrvWJT3/85oUX3tmp
vWW/HOuV5wUG9DkA7DRr1OfSHm3HjtV4l6+9TjLEvtyHP/3Wn2yifJZ78oWv
vDHIPvVifBAf8A9tPjjFczcObT4otrUvUvTMFOOHcz44h20JOR+co+w1pHxA
8iw2X3zve+6f+6I7+/YNl4SUD4gdGTP+/pdf2nyWeyRpmSL/NfW5lJts1/ei
fJa/5XjNo2yTfEl+ZLvkNXVcKsixqfH0OuZettu2AXtd61NiI7Yt59rz5LMc
E9sRX9B0xGnV68r1bDpy6TMBfQ4AO83a9Lk8y+VdIO8y1YMyjmxsPaGvNhKb
MpZNoqRFbNdo9y7RRlOkYag20/qHpEnetXPpc0mrvtfl3o+9/0O0We00lOpz
rTPL/VfNUDKeMg6lPlC7zlziA1PU18fo868/+/omjrEv4ctXX775xvU3Rl3j
6vnV5jryf+m5OR+c6rkbh5wPqpbQvki532K/pm0JKR+cy7aElA/OVfYa2p5D
YlfeO1POrW57Dsk9iLVe7VBTn2t+JEqatU1D/pb7qfmU8/W+tx1ng+zX975q
5/hv2a/PSLln8rf6jY6/1+tJ+nPpUX/T74Focu3zl/Tpu9+OFRA/0XTI35qO
XPqigD4HgJ1mbfpcgzzXVZfUeCeXaCN9zw3VoqlQqo1qp2FM32mNdJRoM20L
kPuvbRVj+11LtdkUaRjafy7plvKXOtOYevNQH6hVZx7Sf16zvj5Un7/75N03
t4/iTXz78dsH2RZN/iNHP3J/nY89+dig63zp6Zdu3nb4tvvryOeS87t8sPZz
Nw5dPqh9jFPYltDmg1PbltDmg1OXvYY2H5D8y7NuSvttPiD7dLzWVGEqfS76
1rbryDb1J6uH246zQcpI3r12zrtqe/Vj8RnV3XJN2ydubUrI6XP9W68p34N4
X3wNeQ/Z9lLNU1v6ovyhzwFgp1mrPpc6eaqeEI8D7BtKtZFdC6ZGGKKNaqZh
jD6P3/sSdFxb32uWajPtT4rtDg1DtFntNAzV51rPGWt/qA/UqjMP0ec16+tD
fOD88vxeC2uUbaW2P3j2wUfXGdKPbjW+RPlccn6XD8bPXR3DEY+hlW1dviTP
6fj51eWD8qyx91uuET/v5bNcI9e/rPu1D9Dua/NBa3tovrUvPLe/zQdrlH1b
uWjo0uc2fanrqf3UuymV5jh06fP4/ki5xGUm2+SZmLLT9T2vrc/lHWGfz9p/
bNt74nLNHRcHnd+ueZW85dIR6+C++jzXPtB2jVR+tOx7vufQ5wCw06xVn0s9
JfU+07lQpW38JdpIdVlqjpy8J4dqnNKxxXEatM1a8lKa/6HaTPNs7WmdTdPY
Zxzm0L7TVP1LxwWWXGto32kqDW31/7YwRp/nxtuWjLsfo8/tvdO6qsa+486H
6vP4HB2DLHmRenrfsR1DfOCT5598pKtlW2kZ2j54jTJGvfQ68TUklpzf5YOp
566Ot4635dpJdSxs6rvR5oNyfHy/dfyvtSXb2p5/Oq439Z3J+WDKdmm+Jciz
ss3H23xwTNnr/GF5Jkmfa9v3POcD2hYizzy7Tco/nluc+s7Jc0hsS2ybu57z
AV3rJHXf5JpxG2WbH3W1QdTS56pH9Z1oy76t/zx3XJwPtSHHyDlS9mIvbrNM
be+rz6W84zHo6l9t+jz1btTySKUvyh/6HAB2mjXqc21/1/ehvuetDpB3dUk/
eok20nbtuA6idbg59HkqDVrn1TpUSf6HplvHVNs5bvF1p9DnOrYvTrOutVOa
l6Hzz1O22ur/bWGIPpf8yj2INbCOuS+ZozrEB1J15nhdob73tdQHcvX1eAxu
33Id4gMy5/wg0sND5qG/fvH6g2vIGPXSa0g4OT15cB35XHJ+W1nlnruyXZ63
Vh/l/Eh8o007t/mg3Gt7j9S+PPdijd52jbbvRM4HU7ZL8q37unw854Njy97q
pNS7y4bYB3Quj15X5zPpZ51DbG2k0mCfC/KdzZVD7ANS9nKutrvq/Of4fksa
7DWHtEFo+dTQ56qzrQa3Oje3z87Vjo+LfcKuMaftJvJdsPPMdd23eL553N5j
dbM9VsrernFn219y+lzsyd/ar69rzrWlL8of+hwAdpo16XN5d1jdreuiaV3J
XqO0rt+nDq9zfFUTib14/dGp9XlbGuJ0TKnNdC6kfo7rEFof6NuPP0Sb6Tk2
7+oHc+jzVBq66v9toUSf6zhZrU+pPtG5f0PGApSUW586swQ9ps81+/pAl21t
n9LxwH3nHwwdQyHj2UVPy1jyIWPbNcic84Mwh33oWnOyJpz2xYs2L10jLuWD
bc9dLTdtF9M6eE4j6r2yes+GlA9qe4t+x+M1B+R4uZ7tx835sVxHzpdjU/Mi
Yh9ss9033xJ0HEupPq9V9vb6Xe2GKX1u9byu2W2vGb8Pup4jUqZtY9hjfW7t
pZ4zthz0+z6XPte2AR23pvONpDxS49v0na3tGvrM1nnZ8jl3XMpXxKYco/nW
9nJJj/apy3btP5BryzmxXtc+b1171tYh9Huj+/V6cg0dI6d94+rf2m4s2+y1
cumLAvocAHaaNenz+Hdt7Fy+ufS5tZ8aozmHPu9Kw5Dx/WPmn+eCvr/7pKXv
/ZLr2XZ8O//bjgecUp+3paGr/t8WSvS59hvrvbf9kjoeUnVQ32uW6vOuOrOE
ku9giT7vsq11w5J2qqH6fJ9C7jeics9dCbYPT/VRyo9Ux+jnlOZI+WA8RyOe
v6LH63r+qp3b8qlrTce+Eftgm+2++bblV6rPa5W9HqP6vG29itJxPLYfXa/b
Vv5d8w+GPr/1/ujYMe3H1TK35Va7/3wXQ26O+EIC+hwAdpo16fO2IO/eWJ+X
aJNavz091/j2XLDjyDzsx6FPf42EvtosXlNK6662Hj21Ps+lwYZc/b8t1PJB
u25gybrytX1A8l7ii0Pmn6eCvZfxb/70PW+tYYgPpvoIbV+u3td4XEfqfo/R
ZhJUI1rNnnsXpNoHSnywb751/TLtu9T+y9w1S+d69UmDPadr/vVQfZ5qI1D7
9piuZ8JYH9BymHN8+y4G9DkAwHSgz7dBrqH18NLfodkXfR6PO5zbvgQ7prlr
vSQNY7WZ1Mm1Dix6zI5z7BOm0Gal8+Br+aBdv6kkX7X1udz7kvaJWvo8vo7k
q48Pos/H63MJ8RpiNth5yqm1NMdqM71uyo/ivvCS9eHG5rvv9cfo87Y02H7/
rvFVQ/W5hK71P3TeusScTi/1gdRa7bpeQOp42Zdao0zDGvS5+Ikdm+6dnkRA
nwPAToM+3wZdo1bnc5WcW0Mbabu9zkcuObeGNtLfEtU41djmrqB1Lx1f2Oec
WtpsaF5qaLM+9f+2UEufS91b657afzhVubWF0vtZywfkuyffBR0HX6K30Odl
PqhjlWOtlXv2aP9pPEdBQ6kP6vgc+73TdSByx6p2Sz2j+/pgab7t/rZjSnyw
JA2ad/m/a95NiQ/oGg/xeKLU+1fSpW2oEmvp89phDfp8BwL6HAB2GvR5nVBL
Gw0N3nUSb/s19bnUF0vbZ2posz71/7ZQ0we1faRkfPk++cCQgD7nOYgP4gPo
80UE9DkA7DTo8zph7XUSb/vUi/FBfMA/4IP4ID6APl9AQJ8DwE6DPq8T1l4n
8bZPvRgfxAf8Az6ID+ID6PMFBPQ5AOw06PM6Ye11Em/71IvxQXzAP+CD+CA+
0Eufn93Gc+Jk8WyuOjQAwBSgz+uEtddJvO1TL8YH8QH/gA/ig/hAtz4HAABo
A31eJ6y9TuJtn3oxPogP+Ad8EB/EB9DnAAAwDvR5nbD2Oom3ferF+CA+4B/w
QXwQH0CfAwDAONDndcLa6yTe9qkX44P4gH/AB/FBfAB9DgAA40Cf1wlrr5N4
26dejA/iA/4BH8QH8QH0OQAAjGNf9LnUCYhEIpFIJBKdI/ocAAAGsw/63LsM
AQAAAAAAAMaCPgcAAAAAAADwB30OAAAAAAAA4A/6HAAAAMCP5uhHD5u7tXQO
9bN3moZym/Yj7zSkuE3XsZSxdzoAALpAnwMAAAD4cKsZT2/jRdDn57fxald1
ZEj/jXc6YkL5nt3GpxK90wMA0Ab6HAAAAMCHW714HX0Wnf7EKz1jCGkfrc+l
zaJGesK1DjVN4e9F9O+HdpnzEI/DNm2jOfNOHwD4gT6/H/N0UaM8R6Thytn+
hb4fVmr/zPN9uID8e9v3Ln/3ZwDcsQBf8Lbv6ove9kMaZn8feuY7/CbbWbRt
J/seaujz8B2s5gO12gymIIyVuDKfpf3g0jNNAOAP+vz+2e2tj13fHd7j6RZg
/9zzN2sXkH9v+97l7/4MgDsW4Ave9l190dt+SMPs70PPfIse099Nj+edq7bU
uelhfPaV2fdM+tpDG+vz8LeO436e6ocO17kIz305/jrEY9WH4Xz5/3k4R8fg
6/j7U3O903DseTjP9lXH6b3Rd02wd2mueRbOuQrpke1HYft5ODapXbV9xaTh
3Ni05buIvnMl5O15s1134CL2AQBYH+jz9dZHIvve+szbvned3Dv/3va9y9/9
GQB3LMAXvO2jz9enz1XH3gRdehLtt5r2vHnY3yr7noS/VevpWOmNzs7YlOs8
M5/v52WHfddGG59ENo+C3dOgi6/NvlN7/zLp1baGa9XLwc5N5hybzkffTXOt
Q7NNPl+Evxfbfy6Ee3Y2lzYP9+xJVF7H5u8nXekI1zgzvib3vWROwqMxSsbf
bFrs36dNxzi/CulS5Ps2Z1tOdsxWk5jvYvJ3GO8bS7gP9+Wm/lLTRkQy7zX8
tC8V/aYa6PP11kci+976zNu+d53cO//e9r3L3/0ZAHcswBe87aPPV6bPozRc
Wz0etnfp8xNzflYbR7bi69zr6sS+p/F3onnYx35utremwejzszhtpm78SJ8H
W8ep+niop8fX2rRVpNK0NJrt2IeiOWbhvZ2MPc59ZvxG9NjT1L6Oa5wGe6eh
vEv0TM4vLyJ/epbbN1G6FLEzZ50oe88as35C+Hyq5RDu3fPaiVGbRrdOqc/b
8j7aT/tSyW+qgT5fzHsZfb5ufeidf2/73uXv/gyAOxbgC9720ecr0uex3my2
fcG2HjqHPr8/N7FP3g8XqfNDHKLPz6326kibjrmXcx+Nb09dK8rP0vX5acjb
bP219jkX/rb3rJcWC/fl+cC6Q84v77+HzV27i9Vnp33KaGS6lMXoc0HraE00
ZyTsm0Q7h7KfY53KNn0+2k/7UslvqoE+X299JLLvrc+87XvXyb3z723fu/zd
nwFwxwJ8wds++nxd+nzTlxxta9PgU+nzs+bh+Par6Njr6PzLsP2yedjH2Vef
nzWPxwno/PdHbQfh/6NU/VltWu3WmP75JevzkKfzoIWS6xOGY6pqd33ONds5
CtqWIX/btQUOm5axvuF+HPU8Xvz8PMRr87f1gZNQHznSe2h0aTzGW7YlxxzE
6eo6PnBk0iS+c2k+T8HJQbo8zuIDTTk8CeWrvn3WbOeInCTKSNvCHvmP8b1H
9sL+p4ln01l8b8O25FhzYz+uX3b6Qji/009NPuw4+KOMXd2f9AXrN0Ouq3nO
7SsBfb7e+khk31ufedv3rpN759/bvnf5uz8D4I4F+IK3ffT5uvS59tnYeZVX
kUa6bu50sI6/vDZ1yEf6XOuTTbc+f67ar7nTh0ep80Ia7/VjqBtfhe2qmS+D
/YuQBh2rfhb2n4Y6/I1+v8I1n4dzLlQLhOOeh+vdp82kI6UDLk2adI05O5f0
JnWeJyGdWhabckocc9wk1iQI+65ysYdt1b66dsF1sHUeHadtNkfN4zEUUq5P
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
tdTwgbY6svYj2VjTB+w9UH/Uv8W2/a1ciX3bDcbo8//11i9v4tB7r/Hb3/iP
N//7r3911DX+/vo3NteR/2v6oI6XsOs0xfd+bOzS53Ivdb6n3qu+Y0nH+OAc
tiW26fOpy77LB/RZp884HXNfe15Szgck/9pGrGNmasxtS5U1+nz3YzyGfYlx
Lp0AAPOzFn2u86G0LqDj/Wz9RJ7DWhcvHfNXos+70qJjsUvq+kP0eU6faV9y
bt7XUPttdVRdP8ius1oSS/S5tsHoOXYtF4lDdFbJOX18UeuyJfegrw/K9aSe
qr6u897i9YNK2wr6+ECfOrLqCI19xzWU6HP1ez1ebOr8R/1s5yj2ScNQff4f
3vuvpJ61ie/6t/+y+HyJosmP/vU/v7/Oa/952FyB//k/Xr45/Bf/7P468rnk
/DYflPKxa0Hpd71m/1SbD+pa1XZd5Rrrktn3RM4Hp7Ld1wfnKPsuHxBbtgwk
DfK9ql0GOR+I743VXt/59kcfjeHSbbl6QNyeae2gz3c/2jHsNed/1IzTKwQA
8GIt+lyiXXtU9a99v4pO0eewvLdL+jZK1y3uSktpXb9En3fpM6k36jolud8w
GWK/rY5qbQxZA7qvNpN0aj1My9iep33YU+rzPvdf7kVqflsNH4zTGq9nk1rH
rZYPttWRNcbz/Pr2X5euERjPhZf062fJv2ryvuv1DNHn//2/vf9eC2uUbaVl
/6sf+zePrjOkH91qfInyueT8Ln1uy1Hb67SM47LTdaRT+k3bMOO6c5c+t76m
66Lpelz2PNnWdi3Jh+Q1Xs+6TZ+nbJfmu8vP2vR5jbLX94K+M0p8IH6e6Tpk
sW63+Ui9e7Ts4zXvunwgTm98n+x33qYjlRexm1vTbg36fIhetfPKiXXipOIA
AFxZkz637+NU34GtVwzRWyXP1a60TKnPu/SZrfPEunGM/Vwd1R4T9+OWlGcf
bWb7Q74T5t7H9cKp+8+77r/kX9JZ2r/W1wdVk6TSIlHqvdpGI37RNw19fKCr
jtxWTrV8IJUWKfN4vR67DvIUPiDxv3zuPY90tWwruYZE2wevUcaol14nvobE
kvPbfDD+nefYF6Ss++gjvTcpv2zzwdSzxt7/WO/lrtO2ZlXOB9ts98232m5r
P8z5YI2y17FdXb4+pH1V182On8Wp/Ol2SW+qHbHkXZgqO/subLtOWz/9Puvz
eE5c35hb670tajtc6jfNtQ0t146zhjihNAAAZ9akz/u8P/TvqfV5V5xSn3fp
M43ybuzbj9rHflsdVfMsda64ntYn9tVm8fzqVH18Dn3eFu28dNvHO5cPxusR
9B1fPrRe3HVfa/tAn6i/oyv5t2NNavuAzDk/iPTwkHnoX/yv73twDRmjPiTf
H3rlxx5cRz4P9Z3SqO1l9h6m/EnvS2rc6Rhtpr8xYTVo6lixrb+9HB8zxAf7
5lu3D+k/r5kGzWeujWKID2j/vk17rm3G7k89m8b4QLxuKPo8XU5D7vGY/nOx
l2rP7xpjtuS54zXitOoAADxBn2+j1YVTj2/vilPq876xpP+2pn2pc5XWccdq
M3nv67xnsS+arOR6NfV5XK5901HLB+1Y05J81fZB/T3euXzARvsbB31//2+o
D8h4dtHTMpZ8yNh2jTLn/CDMYR+61pysCad98aLNS9eIG6vP++gjXUNC2w+t
j4zRZvK//ha0jrvOHa+/J913fHuNfPdpPxyjz/tqU207zLXbDdXn8r/9XY+u
+5hbI2asD+i6GFb76d995lKgz+tHHV8Rt1e36fMh9Yhdi/OoBADwAH2+jXZs
ta4b1vfcfdPnUhb6Hqw1/7xvlHdx6bXGajP726fxb55Ncb9K8tV3vH8tH7Rr
w8VzEubyAbU9pw/YqOvFqW/0ubdT+cAuxbH6XP7X9RN1fSbVwvpMtjbEN+O5
OmO0md572zcu/+d8K9YAQ/V5V761vbir/XCMPu9T9vYcSUOu/WRM+cuzV8dH
yGddO9M+B9vWXa/hA3JtO25man1u769dE1TsiS/KPolyb+y6nVo2cozO50/l
Tdfv1zEK+r6Te2XXGdC1SjVN6t9yT7S8Y32ubduqoVP3RfOhPtuVr1T61Tft
78Hm9LneP9u+nUunrosj+db1UDRtuk9/d1b+t2u72u+8zkkr9bsxcS6dAADz
gz5//I5OjZvsijX1uf4WdNsYwjjW1Ebah6Rzu/q8c8bat3WyIWPSamozz/Ht
WgcQ/4vXle+KNX1Qvwcl97S2Pp+7jSaO4ofqj33GkaDP6+hziVq/TvmA1pX1
Htl+3BraTGJubnMc47bEMfq8Ld992w/H6vOusrcxtwbAWH2u/fi5Z5+dl5Qa
Mz3EB+Qa8Xg5bZfJnZNbI69Un8f3TNug9Np2TVOdg6HnWd9PrSEgMZ6jZNt2
9HdabNqtD9jvgx5n9bneK/t9sOfF98WWZy5fqajn2TYF/Zy719ZeWzr1mroW
qbbHatr0fmi7hfxv74H6zdjfRx0S59IJADA/6PM6ce7xXql3US1tZLWZjnuc
0/6QWFubDSmzWj5o+65KztsnH1y7D+xqHOqDqfXCtX0kPla1lNaN7TlDfDC3
VntqfpPtV01pg1IfLMl3Hz8b4oN906Brluu8k1rzzzXN9nmXa5vUuSa6dn5K
Cw7xgdwzN/fus7+9FR9Tqs9tv7JG2z5kdabVxrJf92lMjbWK21rsWoGSD/2N
Fqsv43Eh9jdWbBp0fQ6bhpz/p/R5Kl+paM/Tfm5tz++jz9vSmbIdp1Xn1MTH
299KjddgnCPOpRMAYH7Q53Xi2rWRt320GT6ID/hHfBAfxAfK9Hm8ZrxeQ+9j
Tse2rQEQ34+2MWl6HdGwqsFTabI+pmnQ8d9970sNfS5R0ivHt82Fs9dvS+cY
fS5R2jjk+NQa81PHuXQCAMwP+rxOXHudxNs+9WJ8EB/wj/ggPogPlOnzlHa0
/dc5Havztm2fbWrMgc7Djv3E/q1a19pPrcUWp0F0v9Wuui23bl8tfS5RxnLE
tnP22tI5Rp/b+RVqY05fm0snAMD8oM/rxLXXSbztUy/GB/EB/4gP4oP4QJk+
17nRqo+1P1Z1X07H6thqHbctmjo150B1o14nnsugNmzfb3xt208d61ldV13X
Xsv1IQ/V55KW1DgByUPbOgk6/l/nIOTS2Vef6xgEe/x3whoAcn29b3P62lw6
AQDmB31eJ669TuJtn3oxPogP+Ed8EB/EB4b9vlpqnXpdP19/61SP0fzpPH07
Nj0V4+vE+1Nj2XU+erx2f5yGPuvZxva78pVKQ+qeir2cTTnXpj2XzlSZ2rR9
J6wTaNeH0+PlWNHtbWU7ZZxLJwDA/KDP68S110m87VMvxgfxAf+ID+KD+MBu
/f656ljvdBDL41w6AQDmB31eJ669TuJtn3oxPogP+Ed8EB/EB3ZDn0t/r/6e
+Nz9vsQ6cS6dAADzgz6vE9deJ/G2T70YH8QH/CM+iA/iA7uhz7XfPDc+nLj8
OJdOAID52Rd9Lu3A8l72irr+ilfUdvC12pd1YnSdWo+oa894+sDafRAf8I/4
ID6ID7xjJ/Q5cffjXDoBAOZnT/T5oWh0IpFIJBKJROd41Fbv+if0ObFCnEsn
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
dgyQhj763F5Xx33bY3Rbrp1KdYnonth+lz63fYel+Zagz4rc/i59Pqbs5TjZ
J/q6rT27zQckDVJu+ln7Qe0xsk3spGyo7mv7zrbNcZC0235dzbNoPPv8Uz2a
uwddeZxCn2t/s6ZPytHqXL3vbcfZoO2TWlY6jk7SoX6svi7Hap9GfC/sfU/p
cylzvWfqg3oPctcQO9ZPNE9t6Yvyhz4HgJ1mrfo8146v/Zil/eml2ijT5js4
DNFGNdMwVp/H49qkDir3p692KtVmWierNV96iDarnYah+lzrOWPtD/UBqa/F
GkGuY2PffJRq7di2DWK3pM1iiA9In/mB0cMSZVtpGZ6cnjy6zteffb34Orat
4CC0F5Sc3+aDqnmkTSQuN+1Ds9ty19B51Kn9bT6oa4LFz325Xrwtdw0dZ5Lz
jZwPpmyX5Fttdz0Tcz44tuzFtpZ5VxtCzgf0e6bvHbUpn+M2h1QabDtm6hwN
OR/QMVqq++Lx0rFG75onkds35fh2uQ9a/jl93nZcHKQM5frqA5JnSUfq+2X1
d8pmTp/ruvS5skpdI95u70kufVFAnwPATrNWfR6340uQd4j2mZT2rZfOPxfb
qTVmpf41ROMMmX8ep0Hez/KelryU6rWh2ixVb7V1JEljH400RJvlxnJLPa50
jPfQsc2pNEidSTVzSfvJGH2eSrvOY+xbFkN8QPIX94dpf4uNffNR2kaT6osT
f1N/TPWv5gL6PL92t+pa+Wy1gJabRPtdyPlRn/7x1HPV+rLO59Dnit43+8zL
2dD+45w2jH2wzXZJvnVfl4/HPliz7DW0zPm9SfmAlJU8x/X6OnZNn22qt207
WSoN1qaUQa6NIPYBSa/9Dqf0qhyv6dR0LUGfq35WH5L7p+mzzy77DG87zga7
9obcE7Uj6bD+re2lcZtISf953C6k9zp3jdS6eNqmk0tflD/0OQDsNGvU56l2
fJ0XpcfE4/66Qok20jVZdF06fY+qXphDn6fSoPPtdNxbSd/hkPH1bXVmLY+2
vjIbhoxvT/WdShpSbSddYej49lTfsealdB2jIfpc5/3p3D4NQ9Y3HuK72hdp
5ypaH5DPfdMxxAdi23odO18yLptcGOIDMmc8Ht8+ZA66zBU/MLr67cdvL76G
hI89+diD68jnkvNTPqh+rt9juyaklptuV32U02c63kTXz+gzvj0eHyJ/2/q9
jpO383S7+uDleZW617EPttnum297bKk+r1X2EvTZ1NVmWvoc0rEIth+/6zky
dAxFWxrkf+1v7krDHPpc7omUidWyqrv1nanvb90nx6keTh0X59mOg9fzpfxU
i8sx2k4s/+t7Wt/N1tfkHK1D6PwPtSN5k+PVZpc+1+eujqnX+kpb+qL7sFP6
/B/+7pMHb/zOSwd/8Hsf2Pwvn9HnAOtmTfq8rR0/rteU1vX71EnElr4PtT4S
98NMrc/b0mDfcaW/v1Oa7q46s64pM4U+t2v465gJbaPQ3x6aWp/n0iCfpRyG
rNFWUi/W9ek0n7qusc79G7I2Q0m5xeMDbN3OHleydmNfH+iyrVqtdF7+0DEU
0s8t/d8fPPvgoD5vDaLRZd65aOox68PJnHO5zpB+/CFtRKkxs3ZOrJ3nYMvX
rgWtYYw2s/NNdJv2Ncc+kJubUvIcKsm3tiVJntv6r0t9sG8a4nPa2qyG6HN7
XdtGoPbt87Br/fkxPiBBy1jt6j21aaipz3WMjo7h0HX84mef/K1jAWwblfYv
yN+qw3PH2XTq+nAadb9qcU2PTYOd/x+vD6frqcg+HQOmZabvFNserXZ0rQf1
Xf1O63jCuP+/LX0m7JQ+f+UD7zr4sz96ZfO3/C+f0ecA62ZN+rzr/Ty1Ptf3
qP0cHzO1Pu+TBp27NoX90hCvadR2XJ/7Je0R9v1v+yc0/VPr87Y0aF1K18Ap
SUOpPrfaRj7bMbDax1Eyxr6k3OLf9LPzW20oKYO+PtDHts65iMfdtoWh+nyf
wlh9LkHKXfverEaMxzilxpiM1WZxm2VOn6utuB1tqD5vy7cd167zPXLj68fo
87Y0xOfF45VtGKrPJWgbek6f29/4yLVhlvpAai041bZD8jik/3wXQ25e1ELC
zujzP//qLxzc+suDbfL5r/7yl9DnACsGfX4XtM9MP085vr0tzDW+va0chvw+
7FT6XPuMuo4bMv/cBttuMUf/eZ/0iE+VzDGo5YP2OiW/h1TbB7SPv+/xY31A
g65NqGno+5tz6PNhPig+Fvt5rhz1N5dzc1+GaLO4LVL1cMq2tlflfLPEB0vy
3ff6pT7YNw3aH6p/1xrfHrcTah5z8xvkHa1tFLnnUqkPpH5LTceGp47Xsda5
+gH6fBHhSseLi/6VKHr2O9/+6MFHf/GnDv76u79yP6Zcoupd0cRyzuuvve9e
H//t3/z6/XXkfzlfrqPnyH61JefJdWXbq2c/s/ksf+u1rS2Ncoxc026Tz7Id
fQ6wXtDn22DXhyv9jdZ90edda/RMbV+CbRtJzZtLhbHaTMfL6dy23G/G5sIU
2izzuzHZUMsH7dpCJfmqrc/73nt7fA19rnMObL7Q5/1CqQ/atfrj7blztF83
ta/UB7V/PL6/bb97rX35qf19fXBIvjXvbb5Y4oOlaejKu4bStVJT10zZsGvq
pe6ZhqnaivuGNehzHRvf9juEzuG+/1w0sdW/0jet+lr1ttXm8rfod3ucHCNR
tLeMP//ZF9+x2S6f5W+dLy6aXKJeW4/T68t1Y42t1+7ahj4HWBfo84dB5/lN
/ftqqaBjK0t1iYQadRJpk5B8aCzRpzXrRLl6Y1uopc2G5qWGNtN5ploGpXMM
aulzuzZcWz9RjXLrSkfJ8TV9QMf3a+xzDvq8ng8ODUvQZrV8cEhYgg/iA/uv
z3cg3Otzq8Hb9Lloaemzlm26Xfvd5W/V7nKujkeP+99Ff2u/u2h2O05dz0ef
A0Af0Od1wtrrJN72a9aLh6zPVqNerGsRda1/lAs1fdD2U/U9Z598YEhYgjby
Dmt/DuKD+AD6fBGhWJ+3zfnO6XO7PRV17LqMcdf13/qOb0+NhUefA6wH9Hmd
sPY6ibd96sX4ID7gH/BBfBAfQJ8vIAzuP7f6V/V6Tp/LWHY7hl3no9u/5Vg5
Lvebaan14X7yJ36c9eEAVg76vE5Ye53E2z71YnwQH/AP+CA+iA+gzxcQrkQb
iyYWbWz1uWhf6cuWfbJdf8tM9LfoZPlfNLj8r/PFc/pc/xYb8rddi872j+uc
9Fy0v68m1+H31QAAfV4nrL1O4m2fejE+iA/4B3wQH8QHeunz49t4QpwsHqum
jteHk35p3adrsmuft2hkXTtdtbmuxS7X0fXh7Bru8r+2AaT6vGVbV1+4riWv
c99zfe3oc4D1gD6vE9ZeJ/G2T70YH8QH/AM+iA/iA936vI/2ItaJ8fh2D/tT
XRsA9hf0eZ2w9jqJt33qxfggPuAf8EF8EB9Any8peuhz6XPXNd5y68LViACw
v6DP64S110m87VMvxgfxAf+AD+KD+AD6fClRxqiLRpbx53bdtqmjznvvswb7
mAgA+wv6vE5Ye53E2z71YnwQH/AP+CA+iA+gz4nzRADYX/ZFn7//5Zce/Gbz
3FHqJJ72Jf9f+Mobq7X/iU9/fBO97Eve8UF8wNsHvCM+iA/iAx9HnxNniQCw
v+yJPj++jVdEIpFIJBKJzvGsrd7lreuI+xEBYH/ZE33uuj6nxCb8HqZXtL/3
sUb7+rskXvYl7/ggPuDtA94RH8QH8YG739Fuw7N8iPsTAWB/QZ/XiWuvk3jb
p16MD+ID/hEfxAfxgW59DgAA0Ab6nDrJPtinXowP4gP+ER/EB/EB9DkAAIwD
fU6dZB/sUy/GB/EB/4gP4oP4wDB9fnvO4W2U+syhfq5d35uL27QfeachRXO3
VtGJdzoAALpAn1Mn2Qf71IvxQXzAP+KD+CA+UK7Pb48/vY0XQZ+fhzXmdlJH
hvTfeKcjJpTv2W18KtE7PQAAbaDPqZPsg33qxfggPuAf8UF8EB8YpM+vo89S
r3lSs643FyHto/W5tFnUSE+41qGmKfy9iP790C5zFdoMjsO2kz6/AQAA+82+
6POfffEd93Wj0qjPw6Hn6/t45Pk3Y86X/L/+2vvG2N+01++qfamTSRxhX9r8
z4eeL3kf6YOj8h+u4Wp/jA+MLf+xPlDjGTDWB/Yhjn0OjvWFsc+hsfbHPoeC
/cG+WMMHx34XKvnA4PfhUB+o8QxQHxigz29iPbbD/eej9Xno575aUpqm4jZd
lzavYQz+TrbNAEA99kWfj4zaXjn2OmPijbP9q1AOa7V/HuJa8+9t37v8l/AM
IC7DF7zte/uit32JHu/DqvkuobnTaJJn8bvDaN9J2LeZm97c9bVemX3PbuOT
5m789vPwt47jls+P+qHDdS5CfuX46xCPw77LcL78/zyco2Pwdfz9qbneaTj2
PJxn+6rj9G7yEj4fm/OuQroPw9/XYftR2H4ejr3MlOGxSZ/YPDc2bfkuou9c
MWVyFPJ+7p0mcEO+F/8/e18TYktznndXWTmZTVaBMIQOJlIijf+EFSRnPgQi
6PPPBBtbEtge2+QTxhYMSLGNcWBkQbywZC7BiYMdxMgEg4liLggssDaDtPkI
GK4W1iILMxhtjBe6eOfd5D7n1jPnnZqq6qrq6q4+p5/n8HJOd1fX+1b1e7rf
p/466J/mf3Bm9tnfF3Z7Kob9ehhXZvvJ/akhguNFliy303XBe9vQua3sGPj5
1Drgc7lFfU6woWvb7tB5vtsK9F/3fC6uoPy99feu/+73AOENVuALvfV39cXe
+p0Niz8Pe5bb8Nh7x0vPveOW014Pj/tb700Mfek4OcdK73h2RCfyeWm2H+Zl
u2N3JjY+93SeOr0XLoa9M8cu7PWL2Mu2hjvyZafnPnKOtfPJf9PkdWL2Yfu5
+33eO8ZKwbRFBNseZtB35q73qdln21seHUvkAZsv3fbzwvvm80Cepy6fR20/
5vf1MDLvoYFdBM5vxnczATujcZhfFu9/UVvOJIY37X/4T185mYufR++9S5bb
3UvunR9dip+Ln/d+dqyAn/XW3zsm713+3vp713/3e4DwBivwhd76xc83xs89
G+4sH3f7x/j5uTk/yo09XX4+D7w6cOyF/58YHvex29g5aYPh55e+bcO+XeEJ
P3e6zkL8wPEGP69dW0XIprXB2X9fyn3cczsoGee+GPb9hOfD07aaUW7K/4yz
H9y6ZGxCzC93Y0Hcb3ClV8P+nQZXOXxpol1EkivPhDF+/nCPcmV7af77F5Xl
TMLx3yXWU0zx80XL7fLvPsdE/Hw1z2Xx823zw97l762/d/13vwcIb7ACX+it
X/x8Q/zc52TDvi/4hdm3BD9/ODdw7JacyT/fSQ0/v7accMQ2jrnHuU/6mEN5
eeVZOz+/HLw2mQV0Ptzn3G97zbK5ibO7hh/F/NJyMfoY/fvS/7/MYBexFD8/
dbogKPeN2X4E0+5w6uridtiPReEYmlPfj7hviLS5DG/avWLHrvz/3BBYv9L8
p5/UudOPY5feoXNT1jvz+9I7P6fcj95P6e1LtXmE2vteDPvxFyeuDuyYeu7z
y/PI5tixXIifbzce8fT35me99feOyXuXv7f+3vXf/R4gvMEKfKG3fvHzbfHz
cz/Oi3HajGNT+Dni3heRY9i+886/cftvhsd9r7n8/AknHfbz35+0HbhvxOev
Avzj3Odjg+mf921aE0xdvPB5kDtOjtr0nsT7nOMZdn37S4+L4JpcDAFuPOz7
t7PSP3szpv3WySvz+9KcTy527v0+C/xPsD+2vsIju1LpDc6MTfD3l2Z7LqCO
zp3g+l+Z7Ucw/s92lZthvzaD5aXwJZ8/Pw9cD+6/dfmG5hw8afty+18GrscT
vjrs5+5cW9sdTk1ZX5rf/nXLLffV4PX1Dx639uwKjbs5dfk/N/suXHlPvH3B
tqLBm+NTC/Hz7cYjnv7e/Ky3/t4xee/y99bfu/673wOEN1iBL/TWL36+LX4e
4ji3w+N5t3cuZrwY9munnbpjT/j5sB8PPMbPX7l49NTFn6eh85yNL4f9uOMz
Z8eJiZ1vnP7nzgaOVb90xzmH9d7E2S/JC5ywz+rK7T+3thk7Qjzjxth04n7T
hgtbL2vBYNafCtk47HnuhasPnw/dxiRD94XzI9Y55xlbrnwy7Ns4Tvx8h/2a
gZc56T3E/JLzf+kjz50/XHvpyKNC/cyP7BpLH8FS/edFOr3/FttufD5LPvmo
3SOQ16m5d8AX7/183Pcrd138ddnuMnSce+fEfCLps5nlPh+8NSRDNnnpQz6N
unjpts9cOo6r57119DqljudA/Hy78Yinvzc/662/d0zeu/y99feu/+73AOEN
VuALvfWLn2+InzvdV+Qgjlf4/cOn7tg5xdh8bfjRpUl3YvI8DehkjHtp06TO
M2l9nkj7roZ9/+mJdx77aS+Hp/3c14EyX5lyXvB/GSqLOefc2ME4+tSU53JY
CUd3dXHj7XvEwT0+tCtXQ/2P/H0Iz2G4HB73I966+jwz35fDvm3mKpQ+YkL0
vzY8nnNOPw21yTy6VyfsOgmlH0EuPz979nQdOejz++lD+4p1euV98r9x+89d
HTy0+43Fd8PjthXUnW2vwz3phfefpo67Ah2X/r3DYIyf55abbXhs98ri54O3
lqbL49rmMRjun1FW8XPx81b6e/Oz3vp7x+S9y99bf+/6734PEN5gBb7QW7/4
+cb4eQ+Q9/S2Y4twHPKF4z3kQOfuOfwiwj0e8aMGNpwNj9tJQv3QPv+9dXa+
GB73mb8Y9uumP0kfMSHFz+3YkUftOSP2Be2KpR9BLj9//uzpWvSw3x8THtrn
A+WcfI0Nn3zgzxl8MjgOPFMHx+GkuPDJSN1PXivf2ESOfpnLz3Pydb/5vxU/
Fz9fSn9vftZbf++YvHf5e+vvXf/d7wHCG6zAF3rrFz8XP58d4ueHg6Hxu60L
9Jbw7eL0re1rnf5Q4fFJ9oXbtfr961TsXyM6Lp0OOxZk9vXQPZvYNvHQjx4o
dw0/J/dnP/op8x0et3eJn4uft9Lfm5/11t87Ju9d/t76e9d/93uA8AYr8IXe
+sXPxc9nxfB4DHu3+74wjsGsrT0kxvbPqPvGbCf7f0vTN7BP/DwA/z89BN5l
aI5xLsC54+lZ94Ph6RyXJ2sEmGPPDYdtOg7E0+OXe9e3n0qfyc/9+Tq4f96N
nCN+Ln7eSn9vftZbf++YvHf5e+vvXf/d7wHCG6zAF3rrFz8XPz9aDI/nzz+s
j9Ybzpax+cGLwtn0ctiv+3YzflZzG54PZk536/QNbHuy5nir9IeIYT934glH
D6TlHIBbI6Pcedj3RZ96+0PrpD/Mexi8PvWWcGV57t9PYvpMG+WLkN2BdH57
ROocrpcx6X4ifr6O57L4eXf9vWPy3uXvrb93/Xe/BwhvsAJf6K1f/Fz8/Cgx
7Ndiv3bbV6n+rQXt2q3VtrbrP+zXjqYs2n/u2ZGtuzR9pU2nJfVSml4QeqOG
n//u175z/87nvnT/87/2/JFgP9P8p//+F4+O/daX310dP3dx2Il9Li/ZnjuY
9xEO+3dPni6o/6H9i/yMbVAL6X8YS2P5Yahdbkb9nC/zEJMP3vs/Z9R/PezH
rfWo/8vO9X/euf4f/uvePeB8rjZeIQzPF60vFK1ZM0H/Q1+Pp//hHjGz/lOj
0/fFRfr0+Dzy9D/YtYD+K/M84vNw9vthpNyr6dc9NgwzvMu7Bdz/flX8XBCE
7WJK//lbb3/8fnjzTrr7//qNv39y/N//9Du7Y5/+wldW2X8+7N8j+ty16T53
5VkkNnf6Xg3mnaBue6l46NLofWnsWWQMlYuHoP/G6b921yM5r6Oh/hOn/9bZ
wHE+D+/2mFl/rP5fjJ/dRP/Zluvf2XBnyv7S2XC/BCcU9nA88N7VP33h5cK+
+GrYr598437fL+yLd8YXbwbzbusF9N8M+3dR8z+x5PPw4fnn9F7Rnpn1vvDK
vWgcYOxg/54/ZpRtB6Gxo6fD0/cSn1LMvrPI+efMw56fcc4Tn/TOe9K+a3Q9
4ueB8o7lk1yLejB9zqY+zr36eFKGwfBzv85Nnv4c1Ef7PH2reI+bIAiHiSn8
HH3k7jn2qO8cAr7+3ve8b25uPpWfkx9ZWWyslYlJfVlk7I2JSX39i41zdvGo
r3+xfothz8esLNU+Eav/xebAuXi0Z/3f9Kp/p/86oH/WNW2EMIY9H7ayWD9b
xBcXaStz+q8C+hdpn3D6z0PPw6V4Rq/n4fBmjES3OMDZwPWTzt0zkWM5Lt2x
c/JH99w4GfbzRfkMO3XX62bYz1nmuO0Ls//E7D933xy7YdtG2F783B07c7rO
h/16zWeR8x6umznvYti3uTzSZ+ohmo87fjPs17W7GwJtN8O+3fnS7LPjQW6N
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
b3e97HiOLA7t6cB5d7F2vsGMf5izLbDif1PMzzPzFT8XP38kvflxb/3i5+Ln
4uf9Rfxc/Fz8XPw8UcenLpa/dtvXU2OfmJTA8Zgnc8GXxhBZG3ow82+9/RxT
fjfM1E897Ndjz+pnLU0/wa5Td81e5LSrlKY/RPAeNjzuuz4N8fNh/275eyd3
mTqerNU+eGvrm/2XJn9IcB2Bqaj432T5Qu//o/i5+LnTL34ufi5+PkG/+Ln4
ufi5+Ln4+Wg93xp+vpr+c/e/78rPBUEQiC3zc7Yz2eeya+8pjs1qYhLXBnXu
ft+7b9hyU5pXTUwyvJlLcWHq4ty1qb1YSP/unTKefrZrnZTkVRMXD/t3tjys
a+J+Py/lqjVxsbv+ly3qv8YHXf1fe/pZ/6dz+4Cr/+ct6r/GB1jXg3knhtt/
zesytw8cm9RyM3vf9XzhpiR+n8jNQr54zXtkjtTy82Hff+c/jx7ukTkyxQed
/jNP/0Xp82iCD8Seh0X3w4r7UKjclzXPYfqA+Hmyvh/4+ZxSCvFzQRDWhI3z
c8QD9+75fOeeG/c13KCSn187fdaO+xpuUMmPL5w+lPulKf9S7QOnTt9LV/8o
/6uhog+jkp/z3RG89rfcLtVfyc+b1X+NDybq/2WN/kofCNX/qxr9lT7w0um8
cXbcuTopbp8QP5/EzeiL9ENel6L/4sQxHHe8/zjhdnZb4cQxHPR/Po9elvri
RH7O55B/P8pun5joA5fec5D2FHG5Cn5uy31XW27rA6X83D0LblxMgLo/c/vR
bvDc7X/Buhj2bVcv3PerYT8W87nL44VLy/am3TGj89rky3byK1cHl8YfL41O
2nLj5MQ778LU44l3HuXOlOPK/sdT+RgfseV+4hvGj7g286mrj1PPFuRh39v0
wM8Hb7z78KbtZhcbuu0zk8/ueoX2zxO1C4KwBWycn/Oea6WYm9XGJMM+JrVS
FA/WxiTGhlcBG4rHm03QfxvQX9w+MaHf6iagv7htvzYuHvZ8cFL9T/DBJvVf
6wMujvH1P6/RX8nPLwP6q8YviJ9PnmPxInAtsvuOIQ3mWPj6i9rKJvLzkC8W
tVVO5OdnLZ6HtT4w7NtLfRuK2soq+HmzOIA+MBTwc1fvd7D707/9q3wm3br6
8PnpHe+Pzl/vXBxhx2FxHAbHh1l+fe/87NzkczLs+TnrwvLuVybvc2ML7Hzp
ncd2hZcmzxf2meKOXdvzAtcilM8p0xpfCT6rnK077u3S2vco2fdC73S539fe
MX/7fjDvlTL7d20O7vfuuvH8FjG6IAjbxJb5uXneVceDDWISPyat6judwI99
frRY36nT78eki/WdOv2hmHSxvtPhKSeoqv9aHwzV/1DRPlTrA0O4jaq4/mt9
YAhzgqp+M/Hzyfz8IuALRb44kZ+HfLGorazBOhi+Lxa1lTVYB+Olp7+4rSzk
A9/4+2/sbPv8lz73sI16wrd37o2nv8lcq69952vP/sdf/MFOsP1/vv2VB1uc
Xj8OqB5/XcHPb9xzgNsnzhd3XJI2u2OXw54v7/gjj6FMgzd2fNiPDbo2cj7s
34t07X6Tj/t8mZz+yu73/i9ngfNuTd7+eQ82Bs4L5mOPGVsfldXTsasn1LWz
ne92PjG/+exjn3guP2cfv61T8n/2p+NeNuv7pARBOG6In7957tTGg6mYJPM8
PyatWqNrAj/2Y9LF+k69GKI6HoRM7LeyMemifaet6t/l1aL+q9qHpviAV//V
6zM1GkNR3W8mfh73QfKzj7/z07vf4BKoK/Am7/y7Kb4Y80Ho+eJXvrDrn8Q2
fsOWgP22vbS4rSzkg7m6nX7bXlrcVhnywdy6d/r99rritrLUfegjH3trx5HB
jSEBfn7u6S9uK4v5AHTBNpQf18Dj534cUNVGSB8Yyvj5rbvu/v5rd298uFaW
v5I/4jfKhOvrc9bUM2V4w6tvbRqfH5s8rkPxkeGsMX4eyq+Kn7vtly7fE/c7
eJ2GfbvrBbkzMOzXlHhunr2l/Bz7o2tdu+OvnH3i6IIgVGFr/Nxvxx/27cOT
uEkJN4J+xiV47pqYtJoblHIja4PHjxbrO2Xc6sWki/WdmmtnY9LF+049TlBV
/6U+6J1n6796Ld0aH3B9Prb+q9snSn0Aut3/z46hqGofmuoDxyJjPoj6wb0X
HA31Hzj/+ZT/4pgPwj7qjuif5IspHxzT7dKcTvHFlA+O1b3Tb5+HVWN5Uj6A
NopY24Q5f9LzMOUDaB+wvDxS7qo2WusDQ3n/+aNxS5bzwifYtuP889aNg9/x
RzzHUa4PfugDD3wW5XdpdusIePqu3D3vBL7gOOy9+73TiTpy5Tilbe77EvkG
ju3Og1+5dhDyc/rzBc75pc/+wsMxl+6cunHdBsPPbT44zz0rzly+u7y5P+JH
N6789l3N2GfnnNfw8wt7njt24crKvE5oe4s4XRCE7WFr/Nw+p9mOP+z5adXY
9rGYxArb7hGj4Ld7hpKfVXODEm7k2zDs28ar+y4n9p/zefcq9qzNiYlyuRnL
T10eP6vix6XczNrQov5LfJDCtipb/+9733uD/Wpz+AD0uPJbTjKp3yrXB6gb
5XVxIPVXv2Oulp/fvrp99pnnn9nJV+++Wn39ce6nrj/17PrmepdnbT5/ePuH
u3y++OKLzX2QMXrifHKSqvdrjfkgjuN/l9BveVpxW1XKB8d0Gxs4nqW4fSLl
g2N1b/TfDhPGeKd8AM/bMRuGfRtNFU9O+QCeef41wLbjpg9xAPvX/f59W88p
Hyjk5+S5d8O+b5fr2N8M+7no5Hycm33NZwZ0On5LXsy8eW/n/hvDp/l714/u
7Ob/72LYr5F24e6Rl87GM2Pbo3531svwuI/8+bDvy75weVg77tlmNRh+bsvj
4rRTdx7bLs6wn/fwgB/tdP3Dd3/1GWXYrz15Puzb4q5c3rv6NGkvjd0cX3Ht
jr10x7gW3KXJ/9z/PZcIgrAoMB5m8nvNc7FVfm7b8Yf9+NbqvsMSbgRugLZu
xgnm3l/dd1jDjWiDeSZXz7lrNO+zut+itO+U7fX4dnWwi49q9ddwM7/PYJjQ
PlPqg9555CST2gdqfcD1+0yq/xofoG4Xl5KTVI9fqPEB8OjvOfmeh/sxftdw
a3Bqix88/8GqMoCXW2C7pQ+irm3/KeJq3Iu9ObY7Xwz1c/Ic/GftGKBcH2Qf
sr1mfn+u4w+vYu1UsBf5oI3X1z/Gz+38a7/c3Dfs22uftFXxflXjgzl173gY
2wvPfd1ID34d461jPgAbUG/cZj+td/4Dbwqdj/Kl/uepOQ6wnX3RtszgeMO+
XeAc+2y9+PUwVsahfP32ExcHXPvXfdiPqb4aTh+tif6Q3vRnP0rnrif7nC/N
+afDfv24XXo3lojPIuo8R32CO+O6GR07vfQ1l/f1sJ/b/pCv6zO3xy+GPcd/
2D+Wz7Af035v5Jb2+XXqOPK5x89Zb+TTF6wXW58eR6f+Sx4z20h/ZtKfm3xm
5ebi54LQBVgb8mIJRVvl57Ydn/EAn72QVPxRGpOExLb5mmdidd9hDTcyfYfk
Z1Vju2v123MH884Vxt+4Prl8q5SbMSbz2vur5zfUcDNrw9T6r/FBW3e2/pf2
ATdvEpzkBesF+ViZwweo28XbiKcejeeF3pLxHDU+gD5zH9hXWofnF+dP8vmT
l39SnI9tKwCw3coHyXnQJuLXG/aZ8SyIwYNtVciD86hLfZBrgvn9t8jP7htc
n2UoD64zFvONmA+GdPvl5j7ni0/aqsgvUz4e88HcunflZ5/ridXNOge/jbWd
pHyAfJfPHerEtm1zGMy8YP989nX75+T4AMf1s33Altn1zz7EAaybGj+v4ec8
J5Qfyso2BVwH1j/KQV9gu4W9XqF0vqAOkT99gLFIpD/6UZ34Ou1xe4zr0sfq
KpSHv98du3S+aWOnaJv23Nx4DSIIwuLA/Jj71/Li2Zv+9NkQ4+e/+7Xv3L/z
uS/dv/X2xx/kZ37lt3f7meY//fe/uP/3P/3O7hi+f+vL7x4MP7ft+K59eTen
i30mY3PkSp7XvuD5A932WTe4/hrEXzUcp2b+ubXBxcQnri8z+jxtpZ/CuNXx
s3Pu43HYmMORariZHcvNdnr8RhxXOsa7dmwzbRjMWjeImVAWXIOSdqKJ/PzG
j4dhF8qVWxc1PoDyufaZh/rHfwD7rOSWo7SNhn1xLu67of+RR4X6V1v6wBb4
OeqZvBbb5AL0FbbBmP/C81hbVU7/eGjtbuvL0M/5Dfa6mTm+V7G2KvYfx7ih
74Mp3X65aYvjSE/GEpG3lPDz0rp35T/x26qspOb8hnwAdYX7OPPn2DXe28i3
vTEUT9bGszpRB7E2At8HYK/9D4f4qqt3tAvc0q418HPyZ/oQrh/ts+MILJ9N
pfP/F/QRXBM3hmDHz61/s73UbxPJ5eeof79diNc6loeLCR49e4b9e885vh3/
0wva55evN3cWPxeEowTGt987wTsiruZSNNZ/fnH52YexRKHj4OXvfc/77j//
lW8fTP95qB0f8Zh9hvjj/sakhBshX8ZZ0M8xheQLS/Bz3wbo53w7zsst6Tus
GV9v41Y8a23MzLgg1Vfmxzel49vZd+quH/zoDDb4bSc5Uju+3fTfXrHMLEuq
j2qqD1LMvL+HMZEQf33jOXyAdWA4ybnvA9jOtaPGB3jdOF6R+TCe5xiHuXwA
c8b98e01c9AxV9zie8++tzgPyCevPvkoH2xP9UH6Of/Hdi1z1hv3uzG0l6Gx
RLwvIT3Xz8gZ3862Lm7jt+UZHCcP3W6uy5nfVmVtgD/iWRG61r4PpnT75bY8
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
IzXVB6jLvuswpT+1LsVUH4Dw3Y/cF1proDU/xzfu94O3Zngrfs7xaRDc4zn+
gX33dv0bO6aOa3NA7Hg6n5+zjuwcMrsfOkPtrbjWnLNgt6mTa8bEysV1CpDO
zlmK8XO2A1n7sY/6bNsT10th28k33dwwlgV58J2h8Bfmm1v2qTIl9q/pe0y1
B5T2MebalsPDc+ybYs+akFO/tXwyVudj/LxGRynmKHfKN0J5iJ/34+d2rbLS
dXVb8nPaUdKP3JIbcQ0gPt9y6mKqflvOmndwt+RmPfvPbRxeWhetfJBxHGOR
3HGHrfn50m00VnANGJ/H+unm8oFDlhb8HGL5EdcDYxzujz+2dd6CmzF+ZzzN
8eyxdd9a8fNUuTmOZaz9cCo/H6t7e05sXtQUfg5h/zU5Krb99eBSXKeFD7Ae
UtdyDn7OfO147Vb8HByRdYhrSb6JbX8uOX/77V82neW39vrwvWRc+49cPfUe
RZ/rY5vjF+EHqfZRnsc6oL2p/nOrj+NmeIzzmmyeHNtnYzPeg/CbOlmvnCeX
U/YpMiX2z+37zOFkc/DznDzGOFUrew4NsWszdk5J3ZTqWKLu57Ip9h/IPacW
4udtpCU/r5HW/deMBXPznarfrklWOrYd0pqblb7zqRU3Y98BY5uSdopj8sEa
aekDNSJ+Xu+DofXI+D4yP61dG85fb7DWB/32F9wDQtfSn3Pht1+V+mBJuXP8
rMYHc23g2pk8p+X8c7/+uf5eKC3HFLFf0m8/rPGBb7r5bPZ+m1qnD/7BPlFf
/1R+Tr5IDtiCn5M3+mWw9U1OijLzmL8+rF27xHJc8Ge2Z9ixBuzXZvtOrK03
xM993h0rmz2P/dy2f2FMH8tubU/p5hiBmO1s98gt+xSZTABGUMpvl+bDNZxy
S/ycv+dot6jRMTfmKnduvq3LK37eRrbOjXrrFzeTD8oH+kutD4be54XfqbUx
QvF3jQ/G3qUWaidkPxjbz/zjpT5YWm7aW/p+tRY2sOxjY/9LfYDjE0Lrkfhp
+c52Ssv5561kKj9nOTle247Btu3m/lp+qXrn8dQ7+6AP9WnbXQZvrL1fz7SN
/eWhdLQ7laYVP4egnQDpOQZsTB/7w1P15uvL4ee5ZZ8ikwnACEo5x9KcTPw8
DL+MOWMQcvuFl9RRihKbco7H0qn/XPy8RHrHJL31i5vJB+UD/UU+KB+UD0zn
5xDwYtRl7tqUOf3nfj+95fjkqXZ8iD+fmrpYz8wP7Qh+OuRj12VneWLXrBU/
pz2WJ6f00S6bFvu4BkItP88t+xSZTAAyUMqrluBhvq650h8iYnUfKneIN5de
4xodc6DEppBdrfJNnVMK8fM2svWYpLd+xcXyQflAf5EPygflA+X8HH2+oTET
qXfd+9d9rN659hzHofvzE9iHbu2wbQQ4x76fNMRx/XSwi79jc0b8vPztVNm4
Lpu/n2s3xvwAcxPoJ/+/vTPGaRgIomjuQgUSipBoEEgpERUVlKSiQXTAAaCE
AlFwivRIVIhDcAJOQJeSTMSYxXKCrV3PrLXvS7/AAc+u/YXnx7Ozup5A5q49
4sI9HNr483rNgdb2tJl7DKOS/w7I0Qfn/L0BACmAP0/D0nMS7/jkxWgQDfgT
DaJBNNDNn2t9f9NaduF/ddHaE0F7Maxb56yxVp2zqaeArv8Ix9d0TNceaB81
/T0Z07r51c9V/1n7A9bvqa63aPpMx7Oql42u69fvIsI44d/UY4cxdb/DcKzh
9W0z91ha+QQAgD3w52lYek7iHZ+8GA2iAX+iQTSIBrq/P8+Bcs267KkK/Wnl
EwAA9sCfp2HpOYl3fPJiNIgG/IkG0SAaGJY/l1pvqQXX/czgcGjlEwAA9lj4
2yju7O4v13Kc3TxWx57ev0Z7k6PR5cMs+vxtiD/3z0m845MXo0E04E80iAbR
wLD8udal91F/DfullU8AANgj1huLLxd/Lj5djx1Pr5a08Obqz6W/R7jnjjXD
niAelPmHe36WFl/6sAi94svc0SAa8NaAN9EgGkQDB4Py53C4tPIJAAB7xHrj
+5fPqh/i9fPr6PTi1tSb//jz8YJvEEIIIYTOnK7Lu+b4c5iAVj4BAGCPFP74
8OS8eocude1S327pz2Ox4bznAvHzie8xhpzm7x0/hzEAP3jfB7RYbnzLuHP8
OUzA3oUKAHBDCn8s7831uXY3+zD15vhz4qccg2fsUuOHY/COjz/3RQ73IZf4
pf4/wJ9D2I69CxUA4IYU/lg8uT7Xwj5xQ/PnXig1H2oaQ4nxuf7EB7/wvhfE
L/N5ZOzPxwtOIIxh70IFALgh1htLLfvW5vafGndrf/4NPY0e8Q==
           "], {{0, 600}, {1000, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{1000, 600},
         PlotRange->{{0, 1000}, {0, 600}}], ",", " ", 
        RowBox[{"ImageSize", " ", "->", " ", "800"}]}], "]"}], " ", ",", " ", 
      "\n", "  ", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<The Fourier transform can be pictured as a collection of inner \
products between the data (green) and a collection of sinusoids (yellow). The \
output is a new sequence, called the spectrum (blue)..\>\"", ",", " ", 
        "captionStyle"}], "]"}]}], "}"}], ",", " ", 
    RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"1", 
    RowBox[{"dimCorrelation", ".", "ai"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.553818311068077*^9, 3.553818483346237*^9}, {
  3.553819818197666*^9, 3.553819824244377*^9}, {3.554479298127309*^9, 
  3.5544793183357677`*^9}, {3.554481486033128*^9, 
  3.554481494459292*^9}},ExpressionUUID->"ca1ef362-16e1-41b4-9924-\
bc5983ce50b5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzsvU+ILct1p1u892jeQN31Bj1xQ1M2aURL7qtyWxa+jeSu+wTC3GvJ1djI
ksB2ycJX3c+6+MCVLGHcUFeC9sCSKYzbNnIjSqIRmL42BwQWSJPiaiIaBMcD
a9ADUxhNjAc+aOZZvVq7YtVeFRWRmZEZmSv3zu8L4pza+W9FRK6dGb/4t3/s
E09+8ZP/x8HBwaf/79t/fvHXP/f/vv76r//OL/0/tx8+/Fuf/v/+02+9+hsv
/9ZnXv1Pr77+4if+z9uNH7099u9v//i/DgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgRXP0oye38YZIJBKJRCLR
OZ5714sAAAA8uX0XnnzoIz9/8z3HIO9kT/uS/69992urtf+5i89uopd9yTs+
iA94+4B3wAfxQXzgs+hzAABYPehz/zqJt33qxfggPuAf8EF8EB9AnwMAAKDP
/esk3vapF+OD+IB/wAfxQXwAfQ4AAIA+96+TeNunXowP4gP+AR/EB/EB9DkA
AAD63L9O4m2fejE+iA/4B3wQH8QH0OcAAADoc/86ibd96sX4ID7gH/BBfBAf
QJ8DAACgz/3rJN72qRfjg/iAf8AH8UF8oFuf3x53VXjd63DOEuLFbTxfSDy9
jSeJeDxX/RMAANKgz/3rJN72qRfjg/iAf8AH8UF8YBJ9TigLV3PVPwEAIA36
3L9O4m2fejE+iA/4B3wQH8QH0OcLCOhzAABn0Of+dRJv+9SL8UF8wD/gg/gg
PoA+X0BAnwMAOIM+96+TeNunXowP4gP+AR/EB/GBMn3+F99/8+b9L7+0KbfX
Pv+pzfmf+PTHbz7y6odd87HjAX0OADvNl793c3Ybr3Y4HqPP/eskQ+1L3eSb
P/jm5u+3fvjW5vMQ+9SL8UF8wD/gg/hgygfk2S5pE82pz3lJpz77a4aUD4id
L735xY3+lc/yt6RlivwP6T8P5zy4jpTRCy+88z7NXeFPv/Unk+RnRwP6HAB2
mlt9e34bb3Y4npToc60nvPje92ze2fJOk3fg2HpC33qpvHPlXSz1A/ms7eVj
30Yl9dIp0jCkXixlrnUQuS+ShqF1JurF5dpIvwtf+Mob95+lDOX/IfZLfaB2
nbnEB6aory/BB7xDzgeneu7GIeeDer+ln1I+i59IWmrnP+WDc9mWkPLBucpe
Q9tzSNImzxtJw9C22K7Q9hyStKntqezX0ucSJB+yveu5Kv619mdPFNDnALDT
rE2fa5C6uNTNa72jS7SR1qGkniJ1pBr1pFJtVDsNY/qtpN44VluXaDO553Lv
JUrdVXxBxhOOsV+qzaZIw9C+S9ENUmcVX5A4lz636a5RZx7SRlOzvj5Un3/y
/JM3bzt82yZ+7MnHBtm+en5188GzD97cPtJvfuToR27OL88HXefrz75+8+6T
d2+u8/bjt28+l5Zn2/7az904dPmg6NIxPt4V2nxwatsS2nxw6rLX0OYDOnZ7
SvttPiD7tF16qlBTn0uQ96OWmRyn7w3Ji/iSRPlb36PyLk8dl0urtovbdlpt
s5d3gy0vva69vmy37Qj6PrN+KNdQOzqGQu2obUm/bSMVP5V8y3n2vrWlzwT0
OQDsNGvV5/p+qfVOLtVGcnzN/osh2qhmGsboc3knx2PztM+nb122VJvpnD+t
k4wNQ7RZ7TQM1edaRxprf6gP1KozD9HnNevrQ3zgy1df3mhhG2VbqW3R+PYa
ovVFs5deR7W5Rvlccn6XD9Z+7sahywdlf61xwKox4vzlfLCm7Vxo88Gpy15D
lz6faly5hi59Hj9v5XN8z2Sbtp3G19BxRm15rKnPJc0S5X1hj7F5UQ0rf7cd
Z4OUkfqD5EmPsfMOxF+1nhC3rVibEmw/v90n2+x58s6z7Q2iy/W7JNeQ9Mvf
Ot5DjpNntOYpl74of+hzANhp1qzP43PkvaBj70rr7CXaSN490peS6scQu0P6
N0q1USoNsk3em0PqkUO1mbb92/qOpEnvgb67u64ztO+0Vl/W0L7TtjSk6v9d
1xqSdvH5Gn1aY/S5rT/Kvdc6qcS+9fmh+jxVdxXf07H/ffM0xAdiXS1RtpWW
YayrDwbq/PgaEkvO76PPbRnpM8feN92Wa7fS53Sq/a6PPre2dNy3vY7ex1zb
pa7lJc/PVP7a9LnuG5LvruvbtE9R9jofRPLf1q7bNsdBvtt2bL/YidOrz6P4
3uq7Qq7f1iec8wH1m9SzTu5l/M7P+ZH2Fbfdoyn0ueZB02DHncX3NnecDXIP
Jd/a567rAkg61M80yn65ji2Tvvpc+9Lt9bSsc9dIjdfXMU659EX5Q58DwE6z
Rn2uz/m4fmXrDfJOKelbLtFGUkeRek5cH9D+1KEap+S8VBq0bUL+L+1bH6rN
xJ6tU2o9wV63T3tFqTZL1TfG5GWINsuloa3+3xaG6nMdJ2i3aR+RpK2vHwwp
t1SdWfxSrqOxb5/fkDEUqfp63J/W9z4M8YEvPf3SIz0s20quIUHGxcfXGdJ/
LmPa7TXkc8n5bT6Ye+5KucXjVHN+JOe3tde0+aA8ayTG56vmjDV6zn5bm1nO
B1O2S/KttrvWCsn54Niyt8+Aru9Z7ANSXjrvXT7LM0/SonZsf2pbGiSN+n5o
G3cU+4DO39JnmfbL2veKzsm37dJt92Iufa59yppXKQMpK73POX2eOy7lF9rm
oW2SuXd/PA++rz6X/3Ptv7lrpN5Jek961k3Q5wCw06xJn8u7SN9B8lnf8fJZ
31P2vVEy7riPNtK1yjUd+v6M9eiU+rwtDba+0lcXD023jrXUvKfmZqbGHbZd
r0Sb6Xy4+B5rfWYOfZ5KQ1f9vy0M0edaH9U1+tR+W/9ULpSUW586s6av7zX7
+kCXba2r2+9IH/tDx1DovHGJ8nfp+RJEi1ttPWb+uYyNPwhj5GvMP2977mq5
aV+e3Za6vrZn5ea+pHxQx+KotlMdZvsYdZ6unpOzL/pa5wOnNELsg222S/Kt
383S/vOaZa/pyI37zvmAtkvoOXZdRrUn6YrHNaRs23LOjXGLfSAe159qG9c6
gLYddJXDXPrcjv+2awxqPlP6vO04G+y7RseJa3uAPV7bVuJ++L76XMpb3y96
bGpcvr2Gjme390DrLrn0RflDnwPATrM2fR5rIX2ux/WaUr3XRxtJHcWucSKf
Yz0ytT7vkwbdPoV9DfGadHG/ub5zW9Z/eRD63i8dI6BjLXX+caxNp9TnbWno
qv+3hRJ9rnU4taFz0O341pK+cwkl5danzqzH9bXf1wf62Nb6Ycn3YKg+lyA6
+BvX3xh0rg0ypn1Iv7kNcv6QsfEScvo899zVctPtcd+qDTpWV58dqXHWOX1u
7cVrh+vx4vfaFtPVj63f06755222++bbHjtEn9coewk6R1mOa3sml7YTaluL
fdZ3PUeGjqFoS4P+r1pS05VqD6qtz+UZZOc66dpodp6FlL2276helmP0Hmsb
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
bdcYcZ14zTkbe2n/oPGv++j5nhTp84nSsBP6XAia91nf+1WJYn0uTHCf9h70
+TLey97vjgXoM2/73nVy7/x72/cuf/dnANyxAF/wto8+X5E+V00Ubbto0eBT
6fP7/uzEvstYE4Y0yvbNPPcoP330+ZPwtx0noPPf43OOwv9nTWYtvbDdroEv
+dmr/vNm2/f4qAzC/gdjnmdK0/Pm8XyM46b/+GU59yREaZN6Yj4PTkPY3ne8
97Gx+cz83TcPQznK2O3bPnKcaqsJ2+PvyHFj1v6P9mlbTVt5adrk/lyaz73H
1Mf3KZUe00aUvW7Bfd1p0OfrrY9E9r31mbd97zq5d/697XuXv/szAO5YgC94
20efr0ufS7/Ss+ZhvfXS+mCo1z4J9eir5uG48DH6/Np8vmrybQBHIQ2n4bOu
4XakNpvtXO94/vnm99DDOTp/+rTZzhF/Fj6fap5t2oINq/+fZTSGbLfj7J+a
9O68Pm8ejv+Xe3UZ7dc19HRNvlYN04wc3x6ucRLK/cRsuwjXPu15HbmX5yGK
z12az0PTcBR/hzo4Mzavzd9T14m0Lzq227f8pV3qeWK7rglxHG27SByrz59n
TTSvJkLTJvfnynzu1YaRuU86LuYw2pZbA/I4vsY+gz5fb30ksu+tz7zte9fJ
vfPvbd+7/N2fAXDHAnzB2z76fEX6PNh+2jxc//w82q9rrJ+HOvm50cZXRrc9
CZ9V/16Ea6f07Hmo6543Zu5q7jyredR+In1PQ/oumq3WP2y2/ew6Z/YsuuaV
zXM456lua7Z99RdNZo5ts+1313I8MTYutJyaHe17a8zvqKV0WWPW6g/7kxrH
HF9jfPup8Qe93oO2lMJsFmviRBq0jIY+x72efUV2m+3vGlw16X5obRezGv1R
2TamDcV+51rQNoUiWu7TZfO4fTLrA41zXXVO0OfrrY9E9r31mbd97zq5d/69
7XuXv/szAO5YgC9420efr0yfexD8fDX53VVMW4XVUaLLbqI2DTtmYVJfDunR
NiHtAz2Ln50D6hW99XkuDWb/lPpctPD1weO+Y2mPiNuPUtuG2r0fT9Js29Oe
pMo5+MBZ8/C3FVrLtjHtai0U6fMe9+kkaPQHc2Raroc+352IPq9j31ufedv3
rpN759/bvnf5uz8D4I4F+IK3ffQ5+nxy0Oe7QbOdN3yi/Y7m832/6cz6/Djq
79R++7H6XI7tO146mQbzeehzvNfY8sxxopnj8RmpbWPsPtKvcd7tMc12DbnW
tQmazPj3BHJ/et/THvdJ0yka/dJuy1wPfb47EX1ex763PvO2710n986/t33v
8nd/BsAdC/AFb/voc/T5pDQPx7Cvoq677zQP1xI4aTK/Ez9xGs4S+ryX3p4g
La7PcW/s91q1r9HCOs7czkFpnQ8xdTqb7ZoWZ7l0hm3o892J6PM69r31mbd9
7zq5d/697XuXv/szAO5YgC9420efo88BigjPrVPz9+zv86Cxrsxnz+cY+vzh
58tceTR3Y+R1PMasOj3S3qrR6T8/QJ8LS3gvo8/d7XvXyb3z723fu/zdnwFw
xwJ8wds++hx9DlCM9j06v8tlPLOux++yFl+zXRPwwqv/3pPgA/H6jodNYm3F
4DNXJs6mz0O7wIPfGmgSvw0X7Xva7PA6jyWsWZ8323k7D97Lc32fo+/OTWr7
jPbv9dkC7B/O8d2L7N/XyZ3sr7L8m8RaqzPat2uIujwD4I4FfBeT6/6G7ZP7
whJ8ccHvw15rSY+1yzMAAACWwhB9/vvf/MHNq2985ead73jhprlbQ/Lml3/z
85vtesxn/vhbN//up9+72ffvT16++d2vfneJ+lx/W+Qk6JOjJvqdjykJti5C
3eymMb9DMpP9S21ja7a/ySLlcd19dhX72m5nfyNCfxNijjr5SbB1onXyUAbX
M9XJ9TdfPMv/mfF/Lf/nM5W/ruV5mij/Sevkwf5hs/1dYVsGmzlQU9uHLZEv
qi+cNe2/x1rT/lHCF++fDzPY19+rtb54PKcvBvv6HdTnkrwfZpnHqrai9+FF
M3Gfdibfm3fzlHbXiPEpbf/avG8WkK77+fjeaQEAEMb0n//ab1/c6/PU/pde
+chGm//hWz9cav/5eUj/8xA1P3P1F5wZ+/b/Pr/FUMP+cZR/tT/L+Bajj+J7
MNu6JqFuFtufZYxjqKvcJOyvvfxLfzN1jP3LYPPalsVc9mGLKX97L2arLwct
HPviLG1lwf5lwv4sbWXB/pPM+2DytrJg/zTzPpy0fcK7HrA2GtMHEuogLutS
xQQ/YH4DACyCMfpc+sv1XSb95Xbfa198cw5tPnp8u3kXa5y1/TSqD8xaHwz2
nyXKYLZ5HaZOauMs9cFg/0nC/mx9p6GusrTyn23u2gLK/yRhn34zB5q7/qv4
XszSVhnsnyXszzkX7zhhf862ssOE/dnaykIariP7k7eVZeoB6LSJaGYco1gC
+hwAlsQYfS7x5z786uZ9Jv/rNhnLLmPfZ9Dmo/S50NyNtXKpDwb7cZ101vdW
ok46629yJOqkc9cH4zrpbP1VwX5c/nO3D8XlP3f7kGv5hzTEmoB+MwcSOsnD
F+P20rl9MW4vna2tMtiP2+tmnefRbPuyZ20rS9QD5s73UagLnId7oGsRiE8+
MdtPEtvPmu08Nf18oXWJZjtn49LWb8z2i2a77vdZOE7XYXpqfTDs12udRdvt
eQ/qETZNwcfP7XkF1zkO17lszO8wJWxJG8ATU7ZPm+06A2fmGrY87vV5sx3v
fhE+n4RrHpv9WnYX0f06t+cCAAxhrD6XfnN9p0l/+hfe/P5m3rn8P4M2r6HP
dUzd7PXBYD+uk86qDRJ1Uo/f5LD6aPZ5v1GddNb2iWDflv+s7UPBvtUEs481
XED52z58+k8caR6OJ5m9j20Bvmjb62Ztqwz2T4x9j7Yyl/dhVA+YdX5Ls117
QDXeRheHv59FmvC5viODBry2Gjccf9VsdfSp0cLaFnuiOtds12NOzDGH4ftw
bew9Mem+Mnb1vFOTH03nubm+7ntgz1yz7Tqa/0PjJ8lnRDjPplXzetY81OD3
PtYcPew/T3y+rx+FvNv7dWX+vt/e1wcAAGLG6nOJug6crBEnf0+4Flx1fS6Y
97JLe6fRRy7awNRJZ2+fCPbPzT2Y/TcTorqZR/uElr/LvOfmoT5dY/lbTbCI
uZBrpXmoT2cfx9A81KcebWV2PInLGOBm2146e/tEsK9tNHOPpdJ20lnrAU3U
19psf5/qXkuafedGL58n9l9Zvwn38lI1crPV7schvw9+MyShl/XZeGq322PD
MfF5V8Ge+vNhvC9jL3mdrn2JMn1iymmTX1u2Ud60DHrp83C9a1Oml5E+v2xm
+t0HANhfauhzu06czDufUZvX0udaH5i9Phbs6xh3r/qY6jOX9l7znp+9vyjY
v68TO9k/W0j5e7XPuJZ/SINqklnHE8NDGrNmpWMa3Nqqgn1tr529rSrY17He
Lm1Vzba9dm6drPWAuce2J3VmRn/fa9Se+jxbr2m2v49wbfTrAw1srnGeej4b
zZrT56nrDdXn8fiBZ7nviNHe92MDIhsX5r1bqs/Pc3WVkEb1I8a3A+wXUieY
7b1YQ5+3rRO3I/pc6wMu7Z3xe8LBvtaJ3foOG8f+mmD/Oq7rzGhby99tzZwF
lP8zr/aZYP+pZ/sAbAl1cLexoaF+7dJWFexfOrdVaXutS1uVaS/0mvs+95z/
p7G/BX2p9QLb93zaDOg/j445bbb95TrP+nn4HOtjbTvVd9RpYt9Riz7X847j
fRl7WX1u9j9tzJz5jnJ92jycJ39uny0D9bnelyOz7ziUgx2HcO1ZpwKASZB6
qjxDJm+/r6HPT88+ff9b6HaduB3S56eNb3+NtvW69NeENLi1DwT7z+auj0X2
Lz3buxsz1tDJ/pVz+4x3+T/xap+Bh8R1cgf7F85tVWfObVWP+jxntv9gXvCM
dk886gGmPeKp0X+2j9iOfX/abMdn99Hn2uagfdmqmU+a7fpph0bzn9iyD8er
lr5oHs67ftI8XD8t1+99FfJx2PScf565zmHJOyqU4/No21WznduveT1ptuu6
WT3+JKT1sNnOwdJ58c9Dnk6bh3P8L035XHjWaQBgEuQ7Lc+o5+HvyRirz/V3
1OT/8Pza9KfvmD4/bJzX8vCsjwX7rtokvMvcxhaHd7HL/IZgfwnl79k+cOZZ
l9G6q5d92KJawtH+qXNb1f3aXY5p8H4eeayNd+iV72bbL3zVPO6jPm+2a5+f
mO0XzcN1yY+abd+y7XN/Eq572Tych31h4oPx7aq942dis11f/bx52C+tNk7i
dDTbdea0T/08HH9oz+txnaPm4Vqqz9ue2Sk935h14Zvtmvn2b1uemu6n4bzL
Zttuop8ftGuH9Gv58D4B2D/k2XpjorwzJqmvjNHnMpZd1oPT31HTdeJkPvou
6XPBU5stxL5bfTjY987/ceO4nssCyt/bvmv5hzS4lgHc4dlOF+wfLSAN3s9D
7+eB11owq34GNM5jJ9oI74izZjvf/cS7HQkAVon0594cTKzTh+rz1O+o6Tpx
sn3X9DkAAADAWlm4Pn9q+6RVr3umCTbje6+IxJXF64PH+lyjjP06O6gwP32I
Ppfx6zLfPP4dtT7rxMl2+R02iZXWej8ZWwYAAAAAa8aMLz9tHNfDSRHGteiY
8kvvMSaw4fwgr1OIxLXGq9s4+vlUqs9Fg8t8c9HXqf0vvfKRjT6X/+N9osft
eHhZS07WlkOfAwAAAAAAwIKR9WFSuvzyNlabG1eiz0Vf6zrtotFt/7nodru/
CWu56/h30eSy79U3vvJgjLwcF/fDo88BAAAAAABgQVwfPNblR7WNDBnfPiTq
+u6xFpdtI/vQ0ecAAAAAAAAwFTJu3Y5jn2wt2bn0uYyHFy2eGg8vffHocwAA
AAAAAFgg0lcuv30++W+wzqXPdV563+0l+jys43lFJBKJRCKR6BzPpq67AQDA
7EifefWx7Cn2RJ+fvPKBd91859sfdYuSB0/7kv8/+6NXVmv/9dfet4le9iXv
+CA+4O0D3hEfxAfxgfdJGZzPUX8DAIDZODyo8LtpfdkXff7RX/ypm3/6x0+5
RcmDp33Jv9QN1mr/D37vA5voZV/yjg/iA94+4B3xQXwQH/gA+hwAAEYxlz7/
td++yOrz1G+xoc93q07ibZ96MT6ID/hHfBAfxAfQ5wAAMI659Pln/vhbm/d2
av12+5tr6PPdrJN426dejA/iA/4RH8QH8QH0OQAAjGMufS7x3/30ezf96PpZ
f/9cfjsdfb7bdRJv+9SL8UF8wD/ig/ggPoA+BwCAccypz0WPi0aX///wrR/e
/NyHX938LvrI66LPF1An8bZPvRgfxAf8Iz6ID+ID3fr89rjj23hCJI6Jc+kE
AJifOfW5RNHlMp5d+tFFp1e4Jvp8AXUSb/vUi/FBfMA/4oP4ID7QS59feZYR
cT/iXDoBAOZnbn0+QUSf/6N/ncTbPvVifBAf8I/4ID6ID6DPifPEuXQCAMwP
+rxOXHudxNs+9WJ8EB/wj/ggPogPoM+J88S5dAIAzA/6vE5ce53E2z71YnwQ
H/CP+CA+iA+U6/O//u6v3LzxOy9tzpX/JWoeZJ+Uqfw/d15ePfuZTUztk/S9
8oF3DSprycvrr71vc+2Uv/7D331ys1/K4WdffMfN3/7Nr7v61NRR8mvvv3zu
c95cOgEA5mft+vzvr3/j5tvf+I83//uvf3XU83VMneR/vfXLmzSMsT+2TiL2
JR0e9mvcgzH1YrEr9iUdQ+2PrRfXSMNQH6xhe6wP1EjDGB+o4YNL0Ebeccxz
sMY98H4O1tDnY9Iw1gfH5n+sD9RIwxLeRaX6XNJsNdmf/dErN3/+1V/Y/C3b
5Zp9NVvN+Fd/+Uub2Havh5S16HI5T/IkeY33yzb9HsnfHnmfM0o7h5aD/C+f
+5w3l04AgPlZqz6X9/B/+dx7bg7/xT+TZ9zm7zHP1yF1EqkH/If3/quNfYlj
7A+tk/z3//b+m6N//c839iUtc9qveQ+G1IulDvarH/s39+U/po1kaL24ZhpK
fbCm7aE+UDMNQ3ygpg+iz4c9B2veA+/n4Bh9XiMNQ32wVv6H+kDNNCzhXVSq
z1P946rPlxyH6vOu8+Qeeo5DmTPKfY6/M/K5rV1E4xSaAACWwVr1+Yde+bHN
u/i1//wuF30u/QNiV9Lxrn/7L130+Rf/6/vu837gUCeqeQ+G1IvFtpS9pOPA
SZ/XTEOpD9a0PdQHaqZhiA/U9EH0+TBtVvMeeD8Hh+rzWmkY4oM18z/UB/bt
XTSk//wnf+LHk+mWbTLmWfW7fpb/dYy4jv/W+y/H6phpiXot7Ze219M+bNku
19M02O16vvblS5R9bTpbtqst7f+XdIbyeWArLj8Z0y750DYKm2fJr2pXm27b
vqHHyz65hr1OW/nIdfV6akPTLNeQ/2P/kv1qS87TfEo65bPeG7metaVRjom/
s/JZtnf52gSSAAAWwlr1uehjHct24Nh/Lv9rH/oY+0P7LnUc34FDnajmPRhS
L9by1zqhhz6vmYZSH6xpe6gP1EzDEB+o6YPo82HPwZr3wPs5OFSf10rDEB+s
mf+hPrBv76Ih889Fk0rZia6Lx3PHOlg+q9ZTHZg6VvWk/C1a1upaPUbGUlut
Lu0Eqmft+XHZ6rz4VFmLHTtvXa4jdjRfpf3ncp7mWbar1tVrSH4k3XKc7LNp
luPs51z5qDZP5U2O0TkIYkvulaZL/tZ82fn62s5gyyS1hoBeu2tbKk4mDADA
nbXqc42e+lyjlz6PnvOz14lq3oMx40o99XnNNAz1QU99XjMNY3wAfV4njnkO
eulzG8c+B2vMPx+ThrE+ODb/Y32gRhqW8C4asn679k1L+YnWtGuipfR5SmO2
7dN5zXpd+V90eOwvVlfG+jWeF53T2XK+3R7r/iHj2+05knb5rN831eCifyWN
dmx43/KRNEs7h17T9t/b9Mi56uNx/7vYV9vapqCfc88F9DkApECfo8/Dc37n
60Toc/Q5+tw3os/R5+jzcb+vJhpPtGyuTzz+3Fd/ShQtKfu1Lzjerz6k99Du
Tx2b09mp7VbjjtXnmsbUunHxtfuWT9uc75w+75onr2PXpT0htQ6ePSa2lxoL
n/iuAMCegj5Hn4fn/M7XidDn6PNd1Oe6LpXOfx1iW8bm6jp7ssaWrLU15Doy
zlefR7IuQOk62uhz9Dn6vEyfS1rj9LaNyY4/99Wftt9ctsk4bF2bzOpc0aip
/nMdQx7f61z/eawvpV+7dv+5XUNP8iD7bT99Sflo/7m1qXo9p8+lDO0YdlvO
Np2pOQsaU+vDSR5YHw5g3aDP0efhOb/zdSL0Ofp81/S52rVxSBlo+WkUrT/k
t+rs70kMeSagz9Hn6PMyfS4azs7NlqjjrG2Z9tXnou30N8lku45Jl+N0/rNo
P9Wist9qabv+mr22jlHX87rmn9sx+jruPJef1D1s0+d6jGpxXQ9O13zT30yX
z/FvrLeVj46Z/05Y207LK6fP9W/9vTi7Fp29l7nfkNdof19NrsPvqwEA+hx9
Hp7zO18nQp+jz3dNn8e6emgaYl09tCzja5Q+l9Dn6HP0efn4dtFvuvaZ/h/f
U6vf9LPqUbuGu66PZtccl32qydWGtgfoOHe1q2WXurboVdW7er3c78B9J6wv
r2u9y/V0fTUdv237mjVq+sWOXbPeloFNn17Ltm9ou4Kdmx5fPy4f2adps+vB
61rsakOPsWPtbZmk8tPVF6550edH3997r6kFAGBZoM/R5+E5v/N1IvQ5+nzX
9Pn//B8vP9LDsq3Utv4ulI1D+s/1tx41yuc5fLDWPfB+DqLP0edj558T68bU
vPm57U917bpqAACWBPocfR6e8ztfJ0Kfo893TZ9L1HnjEuXvIbZFi1ttPWb+
uYyNPwhj5Jl/Pp8P1kgD+nwZ7yL0+XKihz7XOf7SJ55bF65GnEITAMAyQJ+j
z8NzfufrROhz9Pku6nOJooP195/HRMnHkH5zG/V3oIeciz5Hn6PP0edLiTJG
PR6jP0fUee991mAfEycTBgDgDvocfR6e8ztfJ0Kfo893VZ/vS0Sfo8/R5+hz
4jxxMmEAAO6sXZ9rX9HYvqsxdRLpO/PURhLFfulY1lr2a9yDMfVisTu233Fs
vbhGGob6YA3bY32gRhrG+EANH0Sfj3sO1rgH3s/BGvp8TBrG+uDY/I/1gRpp
WMK7CH1OnCPOpRMAYH7Wrs9rxbF1krFxbL101+3XqBePiUvQZmv3QXzAP+KD
+CA+gD4nzhPn0gkAMD/o8zpx7XUSb/vUi/FBfMA/4oP4ID7QS5+f3cZzInFM
nEsnAMD8oM+pk+yDferF+CA+4B/xQXwQH+jW5wAAAG2gz6mT7IN96sX4ID7g
H/FBfBAfQJ8DAMA40OfUSfbBPvVifBAf8I/4ID6ID6DPAQBgHOhz6iT7YJ96
MT6ID/hHfBAfxAfQ5wAAMA70OXWSfbBPvRgfxAf8Iz6ID+ID6HMAABjHvujz
n33xHfd1I48odRJP+5L/119732rtS51Mopd9yTs+iA94+4B3xAfxQXzgp9Dn
AAAwij3R50fyPiQSiUQikUh0jifedTsAANhd9kGfe5chAAAAAAAAwFjQ5wAA
AAAAAAD+oM8BAAAAAAAA/EGfAwAAAAAAAPiDPgcAAAAAAADwB30OAAAAAAAA
4A/6HAAAAAAAAMAf9DkAAAAAAACAP+hzAAAAAAAAAH/Q5wAAAAAAAAD+oM8B
AAAAAAAA/EGfAwAAAAAAAPiDPgcAAAAAAADwB30OAAAAAAAA4A/6HAAAAAAA
AMAf9DkAAAAAAACAP+hzAAAAAAAAAH/Q5wAAAAAAAAD+oM8BAAAAAAAA/EGf
AwAAAAAAAPiDPgcAAAAAAADwB30OAAAAAAAA4A/6HAAAAAAAAMAf9DkAAAAA
AACAP+hzAAAAAAAAAH/Q5wAAAAAAAAD+oM8BAAAAAAAA/EGfAwAAAAAAAPiD
PgcAAAAAAADwB30OAAAAAAAA4A/6HAAAAAAAAMAf9DkAAAAAAACAP+hzAAAA
AAAAAH/Q5wAAAAAAAAD+oM8BAAAAAAAA/EGfAwAAAAAAAPiDPgcAAAAAAADw
B30OAAAAAAAA4A/6HAAAAAAAAMAf9DkAAAAAAACAP+hzAAAAAAAAAH/2QZ83
Rz96eBtPiEQikUgkEp3jkXfdDgAAdpc90ecnL7zwzpsPfeTn3eJtGlztS/7f
//JLq7X/4nvfs4le9iXv+CA+4O0D3hEfxAfxgfdIGZx71+0AAGB32Rd9Lu/F
7zkGqZN42pf8f+27X1ut/c9dfHYTvexL3vFBfMDbB7wDPogP4gOfRZ8DAMAo
0Od1wtrrJN72qRfjg/iAf8AH8UF8AH0OAADjQJ/XCWuvk3jbp16MD+ID/gEf
xAfxAfQ5AACMA31eJ6y9TuJtn3oxPogP+Ad8EB/EB9DnAAAwDvR5nbD2Oom3
ferF+CA+4B/wQXwQH+jW57fHXXmW0QrC1Vx1aACAKUCf1wlrr5N426dejA/i
A/4BH8QH8QH0+QIC+hwAdhr0eZ2w9jqJt33qxfggPuAf8EF8EB9Any8goM8B
YKdBn9cJa6+TeNunXowP4gP+AR/EB/EB9PkCAvocAHYa9HmdsPY6ibd96sX4
ID7gH/BBfBAfKNPnf/H9N+/9RuOX3vziZrtnOe54QJ8DwE6DPq8T1l4n8bZP
vRgfxAf8Az6ID+ID5f3nr33+U5tye+uHb20+S/o/8uqHN3n55g++2cuunkvY
BPQ5AOw06PM6Ye11Em/71IvxQXzAP+CD+CA+UK7PwzmPrvWJT3/85oUX3tmp
vWW/HOuV5wUG9DkA7DRr1OfSHm3HjtV4l6+9TjLEvtyHP/3Wn2yifJZ78oWv
vDHIPvVifBAf8A9tPjjFczcObT4otrUvUvTMFOOHcz44h20JOR+co+w1pHxA
8iw2X3zve+6f+6I7+/YNl4SUD4gdGTP+/pdf2nyWeyRpmSL/NfW5lJts1/ei
fJa/5XjNo2yTfEl+ZLvkNXVcKsixqfH0OuZettu2AXtd61NiI7Yt59rz5LMc
E9sRX9B0xGnV68r1bDpy6TMBfQ4AO83a9Lk8y+VdIO8y1YMyjmxsPaGvNhKb
MpZNoqRFbNdo9y7RRlOkYag20/qHpEnetXPpc0mrvtfl3o+9/0O0We00lOpz
rTPL/VfNUDKeMg6lPlC7zlziA1PU18fo868/+/omjrEv4ctXX775xvU3Rl3j
6vnV5jryf+m5OR+c6rkbh5wPqpbQvki532K/pm0JKR+cy7aElA/OVfYa2p5D
YlfeO1POrW57Dsk9iLVe7VBTn2t+JEqatU1D/pb7qfmU8/W+tx1ng+zX975q
5/hv2a/PSLln8rf6jY6/1+tJ+nPpUX/T74Focu3zl/Tpu9+OFRA/0XTI35qO
XPqigD4HgJ1mbfpcgzzXVZfUeCeXaCN9zw3VoqlQqo1qp2FM32mNdJRoM20L
kPuvbRVj+11LtdkUaRjafy7plvKXOtOYevNQH6hVZx7Sf16zvj5Un7/75N03
t4/iTXz78dsH2RZN/iNHP3J/nY89+dig63zp6Zdu3nb4tvvryOeS87t8sPZz
Nw5dPqh9jFPYltDmg1PbltDmg1OXvYY2H5D8y7NuSvttPiD7dLzWVGEqfS76
1rbryDb1J6uH246zQcpI3r12zrtqe/Vj8RnV3XJN2ydubUrI6XP9W68p34N4
X3wNeQ/Z9lLNU1v6ovyhzwFgp1mrPpc6eaqeEI8D7BtKtZFdC6ZGGKKNaqZh
jD6P3/sSdFxb32uWajPtT4rtDg1DtFntNAzV51rPGWt/qA/UqjMP0ec16+tD
fOD88vxeC2uUbaW2P3j2wUfXGdKPbjW+RPlccn6XD8bPXR3DEY+hlW1dviTP
6fj51eWD8qyx91uuET/v5bNcI9e/rPu1D9Dua/NBa3tovrUvPLe/zQdrlH1b
uWjo0uc2fanrqf3UuymV5jh06fP4/ki5xGUm2+SZmLLT9T2vrc/lHWGfz9p/
bNt74nLNHRcHnd+ueZW85dIR6+C++jzXPtB2jVR+tOx7vufQ5wCw06xVn0s9
JfU+07lQpW38JdpIdVlqjpy8J4dqnNKxxXEatM1a8lKa/6HaTPNs7WmdTdPY
Zxzm0L7TVP1LxwWWXGto32kqDW31/7YwRp/nxtuWjLsfo8/tvdO6qsa+486H
6vP4HB2DLHmRenrfsR1DfOCT5598pKtlW2kZ2j54jTJGvfQ68TUklpzf5YOp
566Ot4635dpJdSxs6rvR5oNyfHy/dfyvtSXb2p5/Oq439Z3J+WDKdmm+Jciz
ss3H23xwTNnr/GF5Jkmfa9v3POcD2hYizzy7Tco/nluc+s7Jc0hsS2ybu57z
AV3rJHXf5JpxG2WbH3W1QdTS56pH9Z1oy76t/zx3XJwPtSHHyDlS9mIvbrNM
be+rz6W84zHo6l9t+jz1btTySKUvyh/6HAB2mjXqc21/1/ehvuetDpB3dUk/
eok20nbtuA6idbg59HkqDVrn1TpUSf6HplvHVNs5bvF1p9DnOrYvTrOutVOa
l6Hzz1O22ur/bWGIPpf8yj2INbCOuS+ZozrEB1J15nhdob73tdQHcvX1eAxu
33Id4gMy5/wg0sND5qG/fvH6g2vIGPXSa0g4OT15cB35XHJ+W1nlnruyXZ63
Vh/l/Eh8o007t/mg3Gt7j9S+PPdijd52jbbvRM4HU7ZL8q37unw854Njy97q
pNS7y4bYB3Quj15X5zPpZ51DbG2k0mCfC/KdzZVD7ANS9nKutrvq/Of4fksa
7DWHtEFo+dTQ56qzrQa3Oje3z87Vjo+LfcKuMaftJvJdsPPMdd23eL553N5j
dbM9VsrernFn219y+lzsyd/ar69rzrWlL8of+hwAdpo16XN5d1jdreuiaV3J
XqO0rt+nDq9zfFUTib14/dGp9XlbGuJ0TKnNdC6kfo7rEFof6NuPP0Sb6Tk2
7+oHc+jzVBq66v9toUSf6zhZrU+pPtG5f0PGApSUW586swQ9ps81+/pAl21t
n9LxwH3nHwwdQyHj2UVPy1jyIWPbNcic84Mwh33oWnOyJpz2xYs2L10jLuWD
bc9dLTdtF9M6eE4j6r2yes+GlA9qe4t+x+M1B+R4uZ7tx835sVxHzpdjU/Mi
Yh9ss9033xJ0HEupPq9V9vb6Xe2GKX1u9byu2W2vGb8Pup4jUqZtY9hjfW7t
pZ4zthz0+z6XPte2AR23pvONpDxS49v0na3tGvrM1nnZ8jl3XMpXxKYco/nW
9nJJj/apy3btP5BryzmxXtc+b1171tYh9Huj+/V6cg0dI6d94+rf2m4s2+y1
cumLAvocAHaaNenz+Hdt7Fy+ufS5tZ8aozmHPu9Kw5Dx/WPmn+eCvr/7pKXv
/ZLr2XZ8O//bjgecUp+3paGr/t8WSvS59hvrvbf9kjoeUnVQ32uW6vOuOrOE
ku9giT7vsq11w5J2qqH6fJ9C7jeics9dCbYPT/VRyo9Ux+jnlOZI+WA8RyOe
v6LH63r+qp3b8qlrTce+Eftgm+2++bblV6rPa5W9HqP6vG29itJxPLYfXa/b
Vv5d8w+GPr/1/ujYMe3H1TK35Va7/3wXQ26O+EIC+hwAdpo16fO2IO/eWJ+X
aJNavz091/j2XLDjyDzsx6FPf42EvtosXlNK6662Hj21Ps+lwYZc/b8t1PJB
u25gybrytX1A8l7ii0Pmn6eCvZfxb/70PW+tYYgPpvoIbV+u3td4XEfqfo/R
ZhJUI1rNnnsXpNoHSnywb751/TLtu9T+y9w1S+d69UmDPadr/vVQfZ5qI1D7
9piuZ8JYH9BymHN8+y4G9DkAwHSgz7dBrqH18NLfodkXfR6PO5zbvgQ7prlr
vSQNY7WZ1Mm1Dix6zI5z7BOm0Gal8+Br+aBdv6kkX7X1udz7kvaJWvo8vo7k
q48Pos/H63MJ8RpiNth5yqm1NMdqM71uyo/ivvCS9eHG5rvv9cfo87Y02H7/
rvFVQ/W5hK71P3TeusScTi/1gdRa7bpeQOp42Zdao0zDGvS5+Ikdm+6dnkRA
nwPAToM+3wZdo1bnc5WcW0Mbabu9zkcuObeGNtLfEtU41djmrqB1Lx1f2Oec
WtpsaF5qaLM+9f+2UEufS91b657afzhVubWF0vtZywfkuyffBR0HX6K30Odl
PqhjlWOtlXv2aP9pPEdBQ6kP6vgc+73TdSByx6p2Sz2j+/pgab7t/rZjSnyw
JA2ad/m/a95NiQ/oGg/xeKLU+1fSpW2oEmvp89phDfp8BwL6HAB2GvR5nVBL
Gw0N3nUSb/s19bnUF0vbZ2posz71/7ZQ0we1faRkfPk++cCQgD7nOYgP4gPo
80UE9DkA7DTo8zph7XUSb/vUi/FBfMA/4IP4ID6APl9AQJ8DwE6DPq8T1l4n
8bZPvRgfxAf8Az6ID+ID6PMFBPQ5AOw06PM6Ye11Em/71IvxQXzAP+CD+CA+
0Eufn93Gc+Jk8WyuOjQAwBSgz+uEtddJvO1TL8YH8QH/gA/ig/hAtz4HAABo
A31eJ6y9TuJtn3oxPogP+Ad8EB/EB9DnAAAwDvR5nbD2Oom3ferF+CA+4B/w
QXwQH0CfAwDAONDndcLa6yTe9qkX44P4gH/AB/FBfAB9DgAA40Cf1wlrr5N4
26dejA/iA/4BH8QH8QH0OQAAjGNf9LnUCYhEIpFIJBKdI/ocAAAGsw/63LsM
AQAAAAAAAMaCPgcAAAAAAADwB30OAAAAAAAA4A/6HAAAAMCP5uhHD5u7tXQO
9bN3moZym/Yj7zSkuE3XsZSxdzoAALpAnwMAAAD4cKsZT2/jRdDn57fxald1
ZEj/jXc6YkL5nt3GpxK90wMA0Ab6HAAAAMCHW714HX0Wnf7EKz1jCGkfrc+l
zaJGesK1DjVN4e9F9O+HdpnzEI/DNm2jOfNOHwD4gT6/H/N0UaM8R6Thytn+
hb4fVmr/zPN9uID8e9v3Ln/3ZwDcsQBf8Lbv6ove9kMaZn8feuY7/CbbWbRt
J/seaujz8B2s5gO12gymIIyVuDKfpf3g0jNNAOAP+vz+2e2tj13fHd7j6RZg
/9zzN2sXkH9v+97l7/4MgDsW4Ave9l190dt+SMPs70PPfIse099Nj+edq7bU
uelhfPaV2fdM+tpDG+vz8LeO436e6ocO17kIz305/jrEY9WH4Xz5/3k4R8fg
6/j7U3O903DseTjP9lXH6b3Rd02wd2mueRbOuQrpke1HYft5ODapXbV9xaTh
3Ni05buIvnMl5O15s1134CL2AQBYH+jz9dZHIvve+szbvned3Dv/3va9y9/9
GQB3LMAXvO2jz9enz1XH3gRdehLtt5r2vHnY3yr7noS/VevpWOmNzs7YlOs8
M5/v52WHfddGG59ENo+C3dOgi6/NvlN7/zLp1baGa9XLwc5N5hybzkffTXOt
Q7NNPl+Evxfbfy6Ee3Y2lzYP9+xJVF7H5u8nXekI1zgzvib3vWROwqMxSsbf
bFrs36dNxzi/CulS5Ps2Z1tOdsxWk5jvYvJ3GO8bS7gP9+Wm/lLTRkQy7zX8
tC8V/aYa6PP11kci+976zNu+d53cO//e9r3L3/0ZAHcswBe87aPPV6bPozRc
Wz0etnfp8xNzflYbR7bi69zr6sS+p/F3onnYx35utremwejzszhtpm78SJ8H
W8ep+niop8fX2rRVpNK0NJrt2IeiOWbhvZ2MPc59ZvxG9NjT1L6Oa5wGe6eh
vEv0TM4vLyJ/epbbN1G6FLEzZ50oe88as35C+Hyq5RDu3fPaiVGbRrdOqc/b
8j7aT/tSyW+qgT5fzHsZfb5ufeidf2/73uXv/gyAOxbgC9720ecr0uex3my2
fcG2HjqHPr8/N7FP3g8XqfNDHKLPz6326kibjrmXcx+Nb09dK8rP0vX5acjb
bP219jkX/rb3rJcWC/fl+cC6Q84v77+HzV27i9Vnp33KaGS6lMXoc0HraE00
ZyTsm0Q7h7KfY53KNn0+2k/7UslvqoE+X299JLLvrc+87XvXyb3z723fu/zd
nwFwxwJ8wds++nxd+nzTlxxta9PgU+nzs+bh+Par6Njr6PzLsP2yedjH2Vef
nzWPxwno/PdHbQfh/6NU/VltWu3WmP75JevzkKfzoIWS6xOGY6pqd33ONds5
CtqWIX/btQUOm5axvuF+HPU8Xvz8PMRr87f1gZNQHznSe2h0aTzGW7YlxxzE
6eo6PnBk0iS+c2k+T8HJQbo8zuIDTTk8CeWrvn3WbOeInCTKSNvCHvmP8b1H
9sL+p4ln01l8b8O25FhzYz+uX3b6Qji/009NPuw4+KOMXd2f9AXrN0Ouq3nO
7SsBfb7e+khk31ufedv3rpN759/bvnf5uz8D4I4F+IK3ffT5uvS59tnYeZVX
kUa6bu50sI6/vDZ1yEf6XOuTTbc+f67ar7nTh0ep80Ia7/VjqBtfhe2qmS+D
/YuQBh2rfhb2n4Y6/I1+v8I1n4dzLlQLhOOeh+vdp82kI6UDLk2adI05O5f0
JnWeJyGdWhabckocc9wk1iQI+65ysYdt1b66dsF1sHUeHadtNkfN4zEUUq5P
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
tdTwgbY6svYj2VjTB+w9UH/Uv8W2/a1ciX3bDcbo8//11i9v4tB7r/Hb3/iP
N//7r3911DX+/vo3NteR/2v6oI6XsOs0xfd+bOzS53Ivdb6n3qu+Y0nH+OAc
tiW26fOpy77LB/RZp884HXNfe15Szgck/9pGrGNmasxtS5U1+nz3YzyGfYlx
Lp0AAPOzFn2u86G0LqDj/Wz9RJ7DWhcvHfNXos+70qJjsUvq+kP0eU6faV9y
bt7XUPttdVRdP8ius1oSS/S5tsHoOXYtF4lDdFbJOX18UeuyJfegrw/K9aSe
qr6u897i9YNK2wr6+ECfOrLqCI19xzWU6HP1ez1ebOr8R/1s5yj2ScNQff4f
3vuvpJ61ie/6t/+y+HyJosmP/vU/v7/Oa/952FyB//k/Xr45/Bf/7P468rnk
/DYflPKxa0Hpd71m/1SbD+pa1XZd5Rrrktn3RM4Hp7Ld1wfnKPsuHxBbtgwk
DfK9ql0GOR+I743VXt/59kcfjeHSbbl6QNyeae2gz3c/2jHsNed/1IzTKwQA
8GIt+lyiXXtU9a99v4pO0eewvLdL+jZK1y3uSktpXb9En3fpM6k36jolud8w
GWK/rY5qbQxZA7qvNpN0aj1My9iep33YU+rzPvdf7kVqflsNH4zTGq9nk1rH
rZYPttWRNcbz/Pr2X5euERjPhZf062fJv2ryvuv1DNHn//2/vf9eC2uUbaVl
/6sf+zePrjOkH91qfInyueT8Ln1uy1Hb67SM47LTdaRT+k3bMOO6c5c+t76m
66Lpelz2PNnWdi3Jh+Q1Xs+6TZ+nbJfmu8vP2vR5jbLX94K+M0p8IH6e6Tpk
sW63+Ui9e7Ts4zXvunwgTm98n+x33qYjlRexm1vTbg36fIhetfPKiXXipOIA
AFxZkz637+NU34GtVwzRWyXP1a60TKnPu/SZrfPEunGM/Vwd1R4T9+OWlGcf
bWb7Q74T5t7H9cKp+8+77r/kX9JZ2r/W1wdVk6TSIlHqvdpGI37RNw19fKCr
jtxWTrV8IJUWKfN4vR67DvIUPiDxv3zuPY90tWwruYZE2wevUcaol14nvobE
kvPbfDD+nefYF6Ss++gjvTcpv2zzwdSzxt7/WO/lrtO2ZlXOB9ts98232m5r
P8z5YI2y17FdXb4+pH1V182On8Wp/Ol2SW+qHbHkXZgqO/subLtOWz/9Puvz
eE5c35hb670tajtc6jfNtQ0t146zhjihNAAAZ9akz/u8P/TvqfV5V5xSn3fp
M43ybuzbj9rHflsdVfMsda64ntYn9tVm8fzqVH18Dn3eFu28dNvHO5cPxusR
9B1fPrRe3HVfa/tAn6i/oyv5t2NNavuAzDk/iPTwkHnoX/yv73twDRmjPiTf
H3rlxx5cRz4P9Z3SqO1l9h6m/EnvS2rc6Rhtpr8xYTVo6lixrb+9HB8zxAf7
5lu3D+k/r5kGzWeujWKID2j/vk17rm3G7k89m8b4QLxuKPo8XU5D7vGY/nOx
l2rP7xpjtuS54zXitOoAADxBn2+j1YVTj2/vilPq876xpP+2pn2pc5XWccdq
M3nv67xnsS+arOR6NfV5XK5901HLB+1Y05J81fZB/T3euXzARvsbB31//2+o
D8h4dtHTMpZ8yNh2jTLn/CDMYR+61pysCad98aLNS9eIG6vP++gjXUNC2w+t
j4zRZvK//ha0jrvOHa+/J913fHuNfPdpPxyjz/tqU207zLXbDdXn8r/9XY+u
+5hbI2asD+i6GFb76d995lKgz+tHHV8Rt1e36fMh9Yhdi/OoBADwAH2+jXZs
ta4b1vfcfdPnUhb6Hqw1/7xvlHdx6bXGajP726fxb55Ncb9K8tV3vH8tH7Rr
w8VzEubyAbU9pw/YqOvFqW/0ubdT+cAuxbH6XP7X9RN1fSbVwvpMtjbEN+O5
OmO0md572zcu/+d8K9YAQ/V5V761vbir/XCMPu9T9vYcSUOu/WRM+cuzV8dH
yGddO9M+B9vWXa/hA3JtO25man1u769dE1TsiS/KPolyb+y6nVo2cozO50/l
Tdfv1zEK+r6Te2XXGdC1SjVN6t9yT7S8Y32ubduqoVP3RfOhPtuVr1T61Tft
78Hm9LneP9u+nUunrosj+db1UDRtuk9/d1b+t2u72u+8zkkr9bsxcS6dAADz
gz5//I5OjZvsijX1uf4WdNsYwjjW1Ebah6Rzu/q8c8bat3WyIWPSamozz/Ht
WgcQ/4vXle+KNX1Qvwcl97S2Pp+7jSaO4ofqj33GkaDP6+hziVq/TvmA1pX1
Htl+3BraTGJubnMc47bEMfq8Ld992w/H6vOusrcxtwbAWH2u/fi5Z5+dl5Qa
Mz3EB+Qa8Xg5bZfJnZNbI69Un8f3TNug9Np2TVOdg6HnWd9PrSEgMZ6jZNt2
9HdabNqtD9jvgx5n9bneK/t9sOfF98WWZy5fqajn2TYF/Zy719ZeWzr1mroW
qbbHatr0fmi7hfxv74H6zdjfRx0S59IJADA/6PM6ce7xXql3US1tZLWZjnuc
0/6QWFubDSmzWj5o+65KztsnH1y7D+xqHOqDqfXCtX0kPla1lNaN7TlDfDC3
VntqfpPtV01pg1IfLMl3Hz8b4oN906Brluu8k1rzzzXN9nmXa5vUuSa6dn5K
Cw7xgdwzN/fus7+9FR9Tqs9tv7JG2z5kdabVxrJf92lMjbWK21rsWoGSD/2N
Fqsv43Eh9jdWbBp0fQ6bhpz/p/R5Kl+paM/Tfm5tz++jz9vSmbIdp1Xn1MTH
299KjddgnCPOpRMAYH7Q53Xi2rWRt320GT6ID/hHfBAfxAfK9Hm8ZrxeQ+9j
Tse2rQEQ34+2MWl6HdGwqsFTabI+pmnQ8d9970sNfS5R0ivHt82Fs9dvS+cY
fS5R2jjk+NQa81PHuXQCAMwP+rxOXHudxNs+9WJ8EB/wj/ggPogPlOnzlHa0
/dc5Havztm2fbWrMgc7Djv3E/q1a19pPrcUWp0F0v9Wuui23bl8tfS5RxnLE
tnP22tI5Rp/b+RVqY05fm0snAMD8oM/rxLXXSbztUy/GB/EB/4gP4oP4QJk+
17nRqo+1P1Z1X07H6thqHbctmjo150B1o14nnsugNmzfb3xt208d61ldV13X
Xsv1IQ/V55KW1DgByUPbOgk6/l/nIOTS2Vef6xgEe/x3whoAcn29b3P62lw6
AQDmB31eJ669TuJtn3oxPogP+Ed8EB/EB4b9vlpqnXpdP19/61SP0fzpPH07
Nj0V4+vE+1Nj2XU+erx2f5yGPuvZxva78pVKQ+qeir2cTTnXpj2XzlSZ2rR9
J6wTaNeH0+PlWNHtbWU7ZZxLJwDA/KDP68S110m87VMvxgfxAf+ID+KD+MBu
/f656ljvdBDL41w6AQDmB31eJ669TuJtn3oxPogP+Ed8EB/EB3ZDn0t/r/6e
+Nz9vsQ6cS6dAADzgz6vE9deJ/G2T70YH8QH/CM+iA/iA7uhz7XfPDc+nLj8
OJdOAID52Rd9Lu3A8l72irr+ilfUdvC12pd1YnSdWo+oa894+sDafRAf8I/4
ID6ID7xjJ/Q5cffjXDoBAOZnT/T5oWh0IpFIJBKJROd41Fbv+if0ObFCnEsn
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
dgyQhj763F5Xx33bY3Rbrp1KdYnonth+lz63fYel+Zagz4rc/i59Pqbs5TjZ
J/q6rT27zQckDVJu+ln7Qe0xsk3spGyo7mv7zrbNcZC0235dzbNoPPv8Uz2a
uwddeZxCn2t/s6ZPytHqXL3vbcfZoO2TWlY6jk7SoX6svi7Hap9GfC/sfU/p
cylzvWfqg3oPctcQO9ZPNE9t6Yvyhz4HgJ1mrfo8146v/Zil/eml2ijT5js4
DNFGNdMwVp/H49qkDir3p692KtVmWierNV96iDarnYah+lzrOWPtD/UBqa/F
GkGuY2PffJRq7di2DWK3pM1iiA9In/mB0cMSZVtpGZ6cnjy6zteffb34Orat
4CC0F5Sc3+aDqnmkTSQuN+1Ds9ty19B51Kn9bT6oa4LFz325Xrwtdw0dZ5Lz
jZwPpmyX5Fttdz0Tcz44tuzFtpZ5VxtCzgf0e6bvHbUpn+M2h1QabDtm6hwN
OR/QMVqq++Lx0rFG75onkds35fh2uQ9a/jl93nZcHKQM5frqA5JnSUfq+2X1
d8pmTp/ruvS5skpdI95u70kufVFAnwPATrNWfR6340uQd4j2mZT2rZfOPxfb
qTVmpf41ROMMmX8ep0Hez/KelryU6rWh2ixVb7V1JEljH400RJvlxnJLPa50
jPfQsc2pNEidSTVzSfvJGH2eSrvOY+xbFkN8QPIX94dpf4uNffNR2kaT6osT
f1N/TPWv5gL6PL92t+pa+Wy1gJabRPtdyPlRn/7x1HPV+rLO59Dnit43+8zL
2dD+45w2jH2wzXZJvnVfl4/HPliz7DW0zPm9SfmAlJU8x/X6OnZNn22qt207
WSoN1qaUQa6NIPYBSa/9Dqf0qhyv6dR0LUGfq35WH5L7p+mzzy77DG87zga7
9obcE7Uj6bD+re2lcZtISf953C6k9zp3jdS6eNqmk0tflD/0OQDsNGvU56l2
fJ0XpcfE4/66Qok20jVZdF06fY+qXphDn6fSoPPtdNxbSd/hkPH1bXVmLY+2
vjIbhoxvT/WdShpSbSddYej49lTfsealdB2jIfpc5/3p3D4NQ9Y3HuK72hdp
5ypaH5DPfdMxxAdi23odO18yLptcGOIDMmc8Ht8+ZA66zBU/MLr67cdvL76G
hI89+diD68jnkvNTPqh+rt9juyaklptuV32U02c63kTXz+gzvj0eHyJ/2/q9
jpO383S7+uDleZW617EPttnum297bKk+r1X2EvTZ1NVmWvoc0rEIth+/6zky
dAxFWxrkf+1v7krDHPpc7omUidWyqrv1nanvb90nx6keTh0X59mOg9fzpfxU
i8sx2k4s/+t7Wt/N1tfkHK1D6PwPtSN5k+PVZpc+1+eujqnX+kpb+qL7sFP6
/B/+7pMHb/zOSwd/8Hsf2Pwvn9HnAOtmTfq8rR0/rteU1vX71EnElr4PtT4S
98NMrc/b0mDfcaW/v1Oa7q46s64pM4U+t2v465gJbaPQ3x6aWp/n0iCfpRyG
rNFWUi/W9ek0n7qusc79G7I2Q0m5xeMDbN3OHleydmNfH+iyrVqtdF7+0DEU
0s8t/d8fPPvgoD5vDaLRZd65aOox68PJnHO5zpB+/CFtRKkxs3ZOrJ3nYMvX
rgWtYYw2s/NNdJv2Ncc+kJubUvIcKsm3tiVJntv6r0t9sG8a4nPa2qyG6HN7
XdtGoPbt87Br/fkxPiBBy1jt6j21aaipz3WMjo7h0HX84mef/K1jAWwblfYv
yN+qw3PH2XTq+nAadb9qcU2PTYOd/x+vD6frqcg+HQOmZabvFNserXZ0rQf1
Xf1O63jCuP+/LX0m7JQ+f+UD7zr4sz96ZfO3/C+f0ecA62ZN+rzr/Ty1Ptf3
qP0cHzO1Pu+TBp27NoX90hCvadR2XJ/7Je0R9v1v+yc0/VPr87Y0aF1K18Ap
SUOpPrfaRj7bMbDax1Eyxr6k3OLf9LPzW20oKYO+PtDHts65iMfdtoWh+nyf
wlh9LkHKXfverEaMxzilxpiM1WZxm2VOn6utuB1tqD5vy7cd167zPXLj68fo
87Y0xOfF45VtGKrPJWgbek6f29/4yLVhlvpAai041bZD8jik/3wXQ25e1ELC
zujzP//qLxzc+suDbfL5r/7yl9DnACsGfX4XtM9MP085vr0tzDW+va0chvw+
7FT6XPuMuo4bMv/cBttuMUf/eZ/0iE+VzDGo5YP2OiW/h1TbB7SPv+/xY31A
g65NqGno+5tz6PNhPig+Fvt5rhz1N5dzc1+GaLO4LVL1cMq2tlflfLPEB0vy
3ff6pT7YNw3aH6p/1xrfHrcTah5z8xvkHa1tFLnnUqkPpH5LTceGp47Xsda5
+gH6fBHhSseLi/6VKHr2O9/+6MFHf/GnDv76u79yP6Zcoupd0cRyzuuvve9e
H//t3/z6/XXkfzlfrqPnyH61JefJdWXbq2c/s/ksf+u1rS2Ncoxc026Tz7Id
fQ6wXtDn22DXhyv9jdZ90edda/RMbV+CbRtJzZtLhbHaTMfL6dy23G/G5sIU
2izzuzHZUMsH7dpCJfmqrc/73nt7fA19rnMObL7Q5/1CqQ/atfrj7blztF83
ta/UB7V/PL6/bb97rX35qf19fXBIvjXvbb5Y4oOlaejKu4bStVJT10zZsGvq
pe6ZhqnaivuGNehzHRvf9juEzuG+/1w0sdW/0jet+lr1ttXm8rfod3ucHCNR
tLeMP//ZF9+x2S6f5W+dLy6aXKJeW4/T68t1Y42t1+7ahj4HWBfo84dB5/lN
/ftqqaBjK0t1iYQadRJpk5B8aCzRpzXrRLl6Y1uopc2G5qWGNtN5ploGpXMM
aulzuzZcWz9RjXLrSkfJ8TV9QMf3a+xzDvq8ng8ODUvQZrV8cEhYgg/iA/uv
z3cg3Otzq8Hb9Lloaemzlm26Xfvd5W/V7nKujkeP+99Ff2u/u2h2O05dz0ef
A0Af0Od1wtrrJN72a9aLh6zPVqNerGsRda1/lAs1fdD2U/U9Z598YEhYgjby
Dmt/DuKD+AD6fBGhWJ+3zfnO6XO7PRV17LqMcdf13/qOb0+NhUefA6wH9Hmd
sPY6ibd96sX4ID7gH/BBfBAfQJ8vIAzuP7f6V/V6Tp/LWHY7hl3no9u/5Vg5
Lvebaan14X7yJ36c9eEAVg76vE5Ye53E2z71YnwQH/AP+CA+iA+gzxcQrkQb
iyYWbWz1uWhf6cuWfbJdf8tM9LfoZPlfNLj8r/PFc/pc/xYb8rddi872j+uc
9Fy0v68m1+H31QAAfV4nrL1O4m2fejE+iA/4B3wQH8QHeunz49t4QpwsHqum
jteHk35p3adrsmuft2hkXTtdtbmuxS7X0fXh7Bru8r+2AaT6vGVbV1+4riWv
c99zfe3oc4D1gD6vE9ZeJ/G2T70YH8QH/AM+iA/iA936vI/2ItaJ8fh2D/tT
XRsA9hf0eZ2w9jqJt33qxfggPuAf8EF8EB9Any8peuhz6XPXNd5y68LViACw
v6DP64S110m87VMvxgfxAf+AD+KD+AD6fClRxqiLRpbx53bdtqmjznvvswb7
mAgA+wv6vE5Ye53E2z71YnwQH/AP+CA+iA+gz4nzRADYX/ZFn7//5Zce/Gbz
3FHqJJ72Jf9f+Mobq7X/iU9/fBO97Eve8UF8wNsHvCM+iA/iAx9HnxNniQCw
v+yJPj++jVdEIpFIJBKJzvGsrd7lreuI+xEBYH/ZE33uuj6nxCb8HqZXtL/3
sUb7+rskXvYl7/ggPuDtA94RH8QH8YG739Fuw7N8iPsTAWB/QZ/XiWuvk3jb
p16MD+ID/hEfxAfxgW59DgAA0Ab6nDrJPtinXowP4gP+ER/EB/EB9DkAAIwD
fU6dZB/sUy/GB/EB/4gP4oP4wDB9fnvO4W2U+syhfq5d35uL27QfeachRXO3
VtGJdzoAALpAn1Mn2Qf71IvxQXzAP+KD+CA+UK7Pb48/vY0XQZ+fhzXmdlJH
hvTfeKcjJpTv2W18KtE7PQAAbaDPqZPsg33qxfggPuAf8UF8EB8YpM+vo89S
r3lSs643FyHto/W5tFnUSE+41qGmKfy9iP790C5zFdoMjsO2kz6/AQAA+82+
6POfffEd93Wj0qjPw6Hn6/t45Pk3Y86X/L/+2vvG2N+01++qfamTSRxhX9r8
z4eeL3kf6YOj8h+u4Wp/jA+MLf+xPlDjGTDWB/Yhjn0OjvWFsc+hsfbHPoeC
/cG+WMMHx34XKvnA4PfhUB+o8QxQHxigz29iPbbD/eej9Xno575aUpqm4jZd
lzavYQz+TrbNAEA99kWfj4zaXjn2OmPijbP9q1AOa7V/HuJa8+9t37v8l/AM
IC7DF7zte/uit32JHu/DqvkuobnTaJJn8bvDaN9J2LeZm97c9bVemX3PbuOT
5m789vPwt47jls+P+qHDdS5CfuX46xCPw77LcL78/zyco2Pwdfz9qbneaTj2
PJxn+6rj9G7yEj4fm/OuQroPw9/XYftR2H4ejr3MlOGxSZ/YPDc2bfkuou9c
MWVyFPJ+7p0mcEO+F/8/e18TYktznndXWTmZTVaBMIQOJlIijf+EFSRnPgQi
6PPPBBtbEtge2+QTxhYMSLGNcWBkQbywZC7BiYMdxMgEg4liLggssDaDtPkI
GK4W1iILMxhtjBe6eOfd5D7n1jPnnZqq6qrq6q4+p5/n8HJOd1fX+1b1e7rf
p/466J/mf3Bm9tnfF3Z7Kob9ehhXZvvJ/akhguNFliy303XBe9vQua3sGPj5
1Drgc7lFfU6woWvb7tB5vtsK9F/3fC6uoPy99feu/+73AOENVuALvfV39cXe
+p0Niz8Pe5bb8Nh7x0vPveOW014Pj/tb700Mfek4OcdK73h2RCfyeWm2H+Zl
u2N3JjY+93SeOr0XLoa9M8cu7PWL2Mu2hjvyZafnPnKOtfPJf9PkdWL2Yfu5
+33eO8ZKwbRFBNseZtB35q73qdln21seHUvkAZsv3fbzwvvm80Cepy6fR20/
5vf1MDLvoYFdBM5vxnczATujcZhfFu9/UVvOJIY37X/4T185mYufR++9S5bb
3UvunR9dip+Ln/d+dqyAn/XW3zsm713+3vp713/3e4DwBivwhd76xc83xs89
G+4sH3f7x/j5uTk/yo09XX4+D7w6cOyF/58YHvex29g5aYPh55e+bcO+XeEJ
P3e6zkL8wPEGP69dW0XIprXB2X9fyn3cczsoGee+GPb9hOfD07aaUW7K/4yz
H9y6ZGxCzC93Y0Hcb3ClV8P+nQZXOXxpol1EkivPhDF+/nCPcmV7af77F5Xl
TMLx3yXWU0zx80XL7fLvPsdE/Hw1z2Xx823zw97l762/d/13vwcIb7ACX+it
X/x8Q/zc52TDvi/4hdm3BD9/ODdw7JacyT/fSQ0/v7accMQ2jrnHuU/6mEN5
eeVZOz+/HLw2mQV0Ptzn3G97zbK5ibO7hh/F/NJyMfoY/fvS/7/MYBexFD8/
dbogKPeN2X4E0+5w6uridtiPReEYmlPfj7hviLS5DG/avWLHrvz/3BBYv9L8
p5/UudOPY5feoXNT1jvz+9I7P6fcj95P6e1LtXmE2vteDPvxFyeuDuyYeu7z
y/PI5tixXIifbzce8fT35me99feOyXuXv7f+3vXf/R4gvMEKfKG3fvHzbfHz
cz/Oi3HajGNT+Dni3heRY9i+886/cftvhsd9r7n8/AknHfbz35+0HbhvxOev
Avzj3Odjg+mf921aE0xdvPB5kDtOjtr0nsT7nOMZdn37S4+L4JpcDAFuPOz7
t7PSP3szpv3WySvz+9KcTy527v0+C/xPsD+2vsIju1LpDc6MTfD3l2Z7LqCO
zp3g+l+Z7Ucw/s92lZthvzaD5aXwJZ8/Pw9cD+6/dfmG5hw8afty+18GrscT
vjrs5+5cW9sdTk1ZX5rf/nXLLffV4PX1Dx639uwKjbs5dfk/N/suXHlPvH3B
tqLBm+NTC/Hz7cYjnv7e/Ky3/t4xee/y99bfu/673wOEN1iBL/TWL36+LX4e
4ji3w+N5t3cuZrwY9munnbpjT/j5sB8PPMbPX7l49NTFn6eh85yNL4f9uOMz
Z8eJiZ1vnP7nzgaOVb90xzmH9d7E2S/JC5ywz+rK7T+3thk7Qjzjxth04n7T
hgtbL2vBYNafCtk47HnuhasPnw/dxiRD94XzI9Y55xlbrnwy7Ns4Tvx8h/2a
gZc56T3E/JLzf+kjz50/XHvpyKNC/cyP7BpLH8FS/edFOr3/FttufD5LPvmo
3SOQ16m5d8AX7/183Pcrd138ddnuMnSce+fEfCLps5nlPh+8NSRDNnnpQz6N
unjpts9cOo6r57119DqljudA/Hy78Yinvzc/662/d0zeu/y99feu/+73AOEN
VuALvfWLn2+InzvdV+Qgjlf4/cOn7tg5xdh8bfjRpUl3YvI8DehkjHtp06TO
M2l9nkj7roZ9/+mJdx77aS+Hp/3c14EyX5lyXvB/GSqLOefc2ME4+tSU53JY
CUd3dXHj7XvEwT0+tCtXQ/2P/H0Iz2G4HB73I966+jwz35fDvm3mKpQ+YkL0
vzY8nnNOPw21yTy6VyfsOgmlH0EuPz979nQdOejz++lD+4p1euV98r9x+89d
HTy0+43Fd8PjthXUnW2vwz3phfefpo67Ah2X/r3DYIyf55abbXhs98ri54O3
lqbL49rmMRjun1FW8XPx81b6e/Oz3vp7x+S9y99bf+/6734PEN5gBb7QW7/4
+cb4eQ+Q9/S2Y4twHPKF4z3kQOfuOfwiwj0e8aMGNpwNj9tJQv3QPv+9dXa+
GB73mb8Y9uumP0kfMSHFz+3YkUftOSP2Be2KpR9BLj9//uzpWvSw3x8THtrn
A+WcfI0Nn3zgzxl8MjgOPFMHx+GkuPDJSN1PXivf2ESOfpnLz3Pydb/5vxU/
Fz9fSn9vftZbf++YvHf5e+vvXf/d7wHCG6zAF3rrFz8XP58d4ueHg6Hxu60L
9Jbw7eL0re1rnf5Q4fFJ9oXbtfr961TsXyM6Lp0OOxZk9vXQPZvYNvHQjx4o
dw0/J/dnP/op8x0et3eJn4uft9Lfm5/11t87Ju9d/t76e9d/93uA8AYr8IXe
+sXPxc9nxfB4DHu3+74wjsGsrT0kxvbPqPvGbCf7f0vTN7BP/DwA/z89BN5l
aI5xLsC54+lZ94Ph6RyXJ2sEmGPPDYdtOg7E0+OXe9e3n0qfyc/9+Tq4f96N
nCN+Ln7eSn9vftZbf++YvHf5e+vvXf/d7wHCG6zAF3rrFz8XPz9aDI/nzz+s
j9Ybzpax+cGLwtn0ctiv+3YzflZzG54PZk536/QNbHuy5nir9IeIYT934glH
D6TlHIBbI6Pcedj3RZ96+0PrpD/Mexi8PvWWcGV57t9PYvpMG+WLkN2BdH57
ROocrpcx6X4ifr6O57L4eXf9vWPy3uXvrb93/Xe/BwhvsAJf6K1f/Fz8/Cgx
7Ndiv3bbV6n+rQXt2q3VtrbrP+zXjqYs2n/u2ZGtuzR9pU2nJfVSml4QeqOG
n//u175z/87nvnT/87/2/JFgP9P8p//+F4+O/daX310dP3dx2Il9Li/ZnjuY
9xEO+3dPni6o/6H9i/yMbVAL6X8YS2P5Yahdbkb9nC/zEJMP3vs/Z9R/PezH
rfWo/8vO9X/euf4f/uvePeB8rjZeIQzPF60vFK1ZM0H/Q1+Pp//hHjGz/lOj
0/fFRfr0+Dzy9D/YtYD+K/M84vNw9vthpNyr6dc9NgwzvMu7Bdz/flX8XBCE
7WJK//lbb3/8fnjzTrr7//qNv39y/N//9Du7Y5/+wldW2X8+7N8j+ty16T53
5VkkNnf6Xg3mnaBue6l46NLofWnsWWQMlYuHoP/G6b921yM5r6Oh/hOn/9bZ
wHE+D+/2mFl/rP5fjJ/dRP/Zluvf2XBnyv7S2XC/BCcU9nA88N7VP33h5cK+
+GrYr598437fL+yLd8YXbwbzbusF9N8M+3dR8z+x5PPw4fnn9F7Rnpn1vvDK
vWgcYOxg/54/ZpRtB6Gxo6fD0/cSn1LMvrPI+efMw56fcc4Tn/TOe9K+a3Q9
4ueB8o7lk1yLejB9zqY+zr36eFKGwfBzv85Nnv4c1Ef7PH2reI+bIAiHiSn8
HH3k7jn2qO8cAr7+3ve8b25uPpWfkx9ZWWyslYlJfVlk7I2JSX39i41zdvGo
r3+xfothz8esLNU+Eav/xebAuXi0Z/3f9Kp/p/86oH/WNW2EMIY9H7ayWD9b
xBcXaStz+q8C+hdpn3D6z0PPw6V4Rq/n4fBmjES3OMDZwPWTzt0zkWM5Lt2x
c/JH99w4GfbzRfkMO3XX62bYz1nmuO0Ls//E7D933xy7YdtG2F783B07c7rO
h/16zWeR8x6umznvYti3uTzSZ+ohmo87fjPs17W7GwJtN8O+3fnS7LPjQW6N
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
b3e97HiOLA7t6cB5d7F2vsGMf5izLbDif1PMzzPzFT8XP38kvflxb/3i5+Ln
4uf9Rfxc/Fz8XPw8UcenLpa/dtvXU2OfmJTA8Zgnc8GXxhBZG3ow82+9/RxT
fjfM1E897Ndjz+pnLU0/wa5Td81e5LSrlKY/RPAeNjzuuz4N8fNh/275eyd3
mTqerNU+eGvrm/2XJn9IcB2Bqaj432T5Qu//o/i5+LnTL34ufi5+PkG/+Ln4
ufi5+Ln4+Wg93xp+vpr+c/e/78rPBUEQiC3zc7Yz2eeya+8pjs1qYhLXBnXu
ft+7b9hyU5pXTUwyvJlLcWHq4ty1qb1YSP/unTKefrZrnZTkVRMXD/t3tjys
a+J+Py/lqjVxsbv+ly3qv8YHXf1fe/pZ/6dz+4Cr/+ct6r/GB1jXg3knhtt/
zesytw8cm9RyM3vf9XzhpiR+n8jNQr54zXtkjtTy82Hff+c/jx7ukTkyxQed
/jNP/0Xp82iCD8Seh0X3w4r7UKjclzXPYfqA+Hmyvh/4+ZxSCvFzQRDWhI3z
c8QD9+75fOeeG/c13KCSn187fdaO+xpuUMmPL5w+lPulKf9S7QOnTt9LV/8o
/6uhog+jkp/z3RG89rfcLtVfyc+b1X+NDybq/2WN/kofCNX/qxr9lT7w0um8
cXbcuTopbp8QP5/EzeiL9ENel6L/4sQxHHe8/zjhdnZb4cQxHPR/Po9elvri
RH7O55B/P8pun5joA5fec5D2FHG5Cn5uy31XW27rA6X83D0LblxMgLo/c/vR
bvDc7X/Buhj2bVcv3PerYT8W87nL44VLy/am3TGj89rky3byK1cHl8YfL41O
2nLj5MQ778LU44l3HuXOlOPK/sdT+RgfseV+4hvGj7g286mrj1PPFuRh39v0
wM8Hb7z78KbtZhcbuu0zk8/ueoX2zxO1C4KwBWycn/Oea6WYm9XGJMM+JrVS
FA/WxiTGhlcBG4rHm03QfxvQX9w+MaHf6iagv7htvzYuHvZ8cFL9T/DBJvVf
6wMujvH1P6/RX8nPLwP6q8YviJ9PnmPxInAtsvuOIQ3mWPj6i9rKJvLzkC8W
tVVO5OdnLZ6HtT4w7NtLfRuK2soq+HmzOIA+MBTwc1fvd7D707/9q3wm3br6
8PnpHe+Pzl/vXBxhx2FxHAbHh1l+fe/87NzkczLs+TnrwvLuVybvc2ML7Hzp
ncd2hZcmzxf2meKOXdvzAtcilM8p0xpfCT6rnK077u3S2vco2fdC73S539fe
MX/7fjDvlTL7d20O7vfuuvH8FjG6IAjbxJb5uXneVceDDWISPyat6judwI99
frRY36nT78eki/WdOv2hmHSxvtPhKSeoqv9aHwzV/1DRPlTrA0O4jaq4/mt9
YAhzgqp+M/Hzyfz8IuALRb44kZ+HfLGorazBOhi+Lxa1lTVYB+Olp7+4rSzk
A9/4+2/sbPv8lz73sI16wrd37o2nv8lcq69952vP/sdf/MFOsP1/vv2VB1uc
Xj8OqB5/XcHPb9xzgNsnzhd3XJI2u2OXw54v7/gjj6FMgzd2fNiPDbo2cj7s
34t07X6Tj/t8mZz+yu73/i9ngfNuTd7+eQ82Bs4L5mOPGVsfldXTsasn1LWz
ne92PjG/+exjn3guP2cfv61T8n/2p+NeNuv7pARBOG6In7957tTGg6mYJPM8
PyatWqNrAj/2Y9LF+k69GKI6HoRM7LeyMemifaet6t/l1aL+q9qHpviAV//V
6zM1GkNR3W8mfh73QfKzj7/z07vf4BKoK/Am7/y7Kb4Y80Ho+eJXvrDrn8Q2
fsOWgP22vbS4rSzkg7m6nX7bXlrcVhnywdy6d/r99rritrLUfegjH3trx5HB
jSEBfn7u6S9uK4v5AHTBNpQf18Dj534cUNVGSB8Yyvj5rbvu/v5rd298uFaW
v5I/4jfKhOvrc9bUM2V4w6tvbRqfH5s8rkPxkeGsMX4eyq+Kn7vtly7fE/c7
eJ2GfbvrBbkzMOzXlHhunr2l/Bz7o2tdu+OvnH3i6IIgVGFr/Nxvxx/27cOT
uEkJN4J+xiV47pqYtJoblHIja4PHjxbrO2Xc6sWki/WdmmtnY9LF+049TlBV
/6U+6J1n6796Ld0aH3B9Prb+q9snSn0Aut3/z46hqGofmuoDxyJjPoj6wb0X
HA31Hzj/+ZT/4pgPwj7qjuif5IspHxzT7dKcTvHFlA+O1b3Tb5+HVWN5Uj6A
NopY24Q5f9LzMOUDaB+wvDxS7qo2WusDQ3n/+aNxS5bzwifYtuP889aNg9/x
RzzHUa4PfugDD3wW5XdpdusIePqu3D3vBL7gOOy9+73TiTpy5Tilbe77EvkG
ju3Og1+5dhDyc/rzBc75pc/+wsMxl+6cunHdBsPPbT44zz0rzly+u7y5P+JH
N6789l3N2GfnnNfw8wt7njt24crKvE5oe4s4XRCE7WFr/Nw+p9mOP+z5adXY
9rGYxArb7hGj4Ld7hpKfVXODEm7k2zDs28ar+y4n9p/zefcq9qzNiYlyuRnL
T10eP6vix6XczNrQov5LfJDCtipb/+9733uD/Wpz+AD0uPJbTjKp3yrXB6gb
5XVxIPVXv2Oulp/fvrp99pnnn9nJV+++Wn39ce6nrj/17PrmepdnbT5/ePuH
u3y++OKLzX2QMXrifHKSqvdrjfkgjuN/l9BveVpxW1XKB8d0Gxs4nqW4fSLl
g2N1b/TfDhPGeKd8AM/bMRuGfRtNFU9O+QCeef41wLbjpg9xAPvX/f59W88p
Hyjk5+S5d8O+b5fr2N8M+7no5Hycm33NZwZ0On5LXsy8eW/n/hvDp/l714/u
7Ob/72LYr5F24e6Rl87GM2Pbo3531svwuI/8+bDvy75weVg77tlmNRh+bsvj
4rRTdx7bLs6wn/fwgB/tdP3Dd3/1GWXYrz15Puzb4q5c3rv6NGkvjd0cX3Ht
jr10x7gW3KXJ/9z/PZcIgrAoMB5m8nvNc7FVfm7b8Yf9+NbqvsMSbgRugLZu
xgnm3l/dd1jDjWiDeSZXz7lrNO+zut+itO+U7fX4dnWwi49q9ddwM7/PYJjQ
PlPqg9555CST2gdqfcD1+0yq/xofoG4Xl5KTVI9fqPEB8OjvOfmeh/sxftdw
a3Bqix88/8GqMoCXW2C7pQ+irm3/KeJq3Iu9ObY7Xwz1c/Ic/GftGKBcH2Qf
sr1mfn+u4w+vYu1UsBf5oI3X1z/Gz+38a7/c3Dfs22uftFXxflXjgzl173gY
2wvPfd1ID34d461jPgAbUG/cZj+td/4Dbwqdj/Kl/uepOQ6wnX3RtszgeMO+
XeAc+2y9+PUwVsahfP32ExcHXPvXfdiPqb4aTh+tif6Q3vRnP0rnrif7nC/N
+afDfv24XXo3lojPIuo8R32CO+O6GR07vfQ1l/f1sJ/b/pCv6zO3xy+GPcd/
2D+Wz7Af035v5Jb2+XXqOPK5x89Zb+TTF6wXW58eR6f+Sx4z20h/ZtKfm3xm
5ebi54LQBVgb8mIJRVvl57Ydn/EAn72QVPxRGpOExLb5mmdidd9hDTcyfYfk
Z1Vju2v123MH884Vxt+4Prl8q5SbMSbz2vur5zfUcDNrw9T6r/FBW3e2/pf2
ATdvEpzkBesF+ViZwweo28XbiKcejeeF3pLxHDU+gD5zH9hXWofnF+dP8vmT
l39SnI9tKwCw3coHyXnQJuLXG/aZ8SyIwYNtVciD86hLfZBrgvn9t8jP7htc
n2UoD64zFvONmA+GdPvl5j7ni0/aqsgvUz4e88HcunflZ5/ridXNOge/jbWd
pHyAfJfPHerEtm1zGMy8YP989nX75+T4AMf1s33Altn1zz7EAaybGj+v4ec8
J5Qfyso2BVwH1j/KQV9gu4W9XqF0vqAOkT99gLFIpD/6UZ34Ou1xe4zr0sfq
KpSHv98du3S+aWOnaJv23Nx4DSIIwuLA/Jj71/Li2Zv+9NkQ4+e/+7Xv3L/z
uS/dv/X2xx/kZ37lt3f7meY//fe/uP/3P/3O7hi+f+vL7x4MP7ft+K59eTen
i30mY3PkSp7XvuD5A932WTe4/hrEXzUcp2b+ubXBxcQnri8z+jxtpZ/CuNXx
s3Pu43HYmMORariZHcvNdnr8RhxXOsa7dmwzbRjMWjeImVAWXIOSdqKJ/PzG
j4dhF8qVWxc1PoDyufaZh/rHfwD7rOSWo7SNhn1xLu67of+RR4X6V1v6wBb4
OeqZvBbb5AL0FbbBmP/C81hbVU7/eGjtbuvL0M/5Dfa6mTm+V7G2KvYfx7ih
74Mp3X65aYvjSE/GEpG3lPDz0rp35T/x26qspOb8hnwAdYX7OPPn2DXe28i3
vTEUT9bGszpRB7E2At8HYK/9D4f4qqt3tAvc0q418HPyZ/oQrh/ts+MILJ9N
pfP/F/QRXBM3hmDHz61/s73UbxPJ5eeof79diNc6loeLCR49e4b9e885vh3/
0wva55evN3cWPxeEowTGt987wTsiruZSNNZ/fnH52YexRKHj4OXvfc/77j//
lW8fTP95qB0f8Zh9hvjj/sakhBshX8ZZ0M8xheQLS/Bz3wbo53w7zsst6Tus
GV9v41Y8a23MzLgg1Vfmxzel49vZd+quH/zoDDb4bSc5Uju+3fTfXrHMLEuq
j2qqD1LMvL+HMZEQf33jOXyAdWA4ybnvA9jOtaPGB3jdOF6R+TCe5xiHuXwA
c8b98e01c9AxV9zie8++tzgPyCevPvkoH2xP9UH6Of/Hdi1z1hv3uzG0l6Gx
RLwvIT3Xz8gZ3862Lm7jt+UZHCcP3W6uy5nfVmVtgD/iWRG61r4PpnT75bY8
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
IzXVB6jLvuswpT+1LsVUH4Dw3Y/cF1proDU/xzfu94O3Zngrfs7xaRDc4zn+
gX33dv0bO6aOa3NA7Hg6n5+zjuwcMrsfOkPtrbjWnLNgt6mTa8bEysV1CpDO
zlmK8XO2A1n7sY/6bNsT10th28k33dwwlgV58J2h8Bfmm1v2qTIl9q/pe0y1
B5T2MebalsPDc+ybYs+akFO/tXwyVudj/LxGRynmKHfKN0J5iJ/34+d2rbLS
dXVb8nPaUdKP3JIbcQ0gPt9y6mKqflvOmndwt+RmPfvPbRxeWhetfJBxHGOR
3HGHrfn50m00VnANGJ/H+unm8oFDlhb8HGL5EdcDYxzujz+2dd6CmzF+ZzzN
8eyxdd9a8fNUuTmOZaz9cCo/H6t7e05sXtQUfg5h/zU5Krb99eBSXKeFD7Ae
UtdyDn7OfO147Vb8HByRdYhrSb6JbX8uOX/77V82neW39vrwvWRc+49cPfUe
RZ/rY5vjF+EHqfZRnsc6oL2p/nOrj+NmeIzzmmyeHNtnYzPeg/CbOlmvnCeX
U/YpMiX2z+37zOFkc/DznDzGOFUrew4NsWszdk5J3ZTqWKLu57Ip9h/IPacW
4udtpCU/r5HW/deMBXPznarfrklWOrYd0pqblb7zqRU3Y98BY5uSdopj8sEa
aekDNSJ+Xu+DofXI+D4yP61dG85fb7DWB/32F9wDQtfSn3Pht1+V+mBJuXP8
rMYHc23g2pk8p+X8c7/+uf5eKC3HFLFf0m8/rPGBb7r5bPZ+m1qnD/7BPlFf
/1R+Tr5IDtiCn5M3+mWw9U1OijLzmL8+rF27xHJc8Ge2Z9ixBuzXZvtOrK03
xM993h0rmz2P/dy2f2FMH8tubU/p5hiBmO1s98gt+xSZTABGUMpvl+bDNZxy
S/ycv+dot6jRMTfmKnduvq3LK37eRrbOjXrrFzeTD8oH+kutD4be54XfqbUx
QvF3jQ/G3qUWaidkPxjbz/zjpT5YWm7aW/p+tRY2sOxjY/9LfYDjE0Lrkfhp
+c52Ssv5561kKj9nOTle247Btu3m/lp+qXrn8dQ7+6AP9WnbXQZvrL1fz7SN
/eWhdLQ7laYVP4egnQDpOQZsTB/7w1P15uvL4ee5ZZ8ikwnACEo5x9KcTPw8
DL+MOWMQcvuFl9RRihKbco7H0qn/XPy8RHrHJL31i5vJB+UD/UU+KB+UD0zn
5xDwYtRl7tqUOf3nfj+95fjkqXZ8iD+fmrpYz8wP7Qh+OuRj12VneWLXrBU/
pz2WJ6f00S6bFvu4BkItP88t+xSZTAAyUMqrluBhvq650h8iYnUfKneIN5de
4xodc6DEppBdrfJNnVMK8fM2svWYpLd+xcXyQflAf5EPygflA+X8HH2+oTET
qXfd+9d9rN659hzHofvzE9iHbu2wbQQ4x76fNMRx/XSwi79jc0b8vPztVNm4
Lpu/n2s3xvwAcxPoJ/+/vTPGaRgIomjuQgUSipBoEEgpERUVlKSiQXTAAaCE
AlFwivRIVIhDcAJOQJeSTMSYxXKCrV3PrLXvS7/AAc+u/YXnx7Ozup5A5q49
4sI9HNr483rNgdb2tJl7DKOS/w7I0Qfn/L0BACmAP0/D0nMS7/jkxWgQDfgT
DaJBNNDNn2t9f9NaduF/ddHaE0F7Maxb56yxVp2zqaeArv8Ix9d0TNceaB81
/T0Z07r51c9V/1n7A9bvqa63aPpMx7Oql42u69fvIsI44d/UY4cxdb/DcKzh
9W0z91ha+QQAgD3w52lYek7iHZ+8GA2iAX+iQTSIBrq/P8+Bcs267KkK/Wnl
EwAA9sCfp2HpOYl3fPJiNIgG/IkG0SAaGJY/l1pvqQXX/czgcGjlEwAA9lj4
2yju7O4v13Kc3TxWx57ev0Z7k6PR5cMs+vxtiD/3z0m845MXo0E04E80iAbR
wLD8udal91F/DfullU8AANgj1huLLxd/Lj5djx1Pr5a08Obqz6W/R7jnjjXD
niAelPmHe36WFl/6sAi94svc0SAa8NaAN9EgGkQDB4Py53C4tPIJAAB7xHrj
+5fPqh/i9fPr6PTi1tSb//jz8YJvEEIIIYTOnK7Lu+b4c5iAVj4BAGCPFP74
8OS8eocude1S327pz2Ox4bznAvHzie8xhpzm7x0/hzEAP3jfB7RYbnzLuHP8
OUzA3oUKAHBDCn8s7831uXY3+zD15vhz4qccg2fsUuOHY/COjz/3RQ73IZf4
pf4/wJ9D2I69CxUA4IYU/lg8uT7Xwj5xQ/PnXig1H2oaQ4nxuf7EB7/wvhfE
L/N5ZOzPxwtOIIxh70IFALgh1htLLfvW5vafGndrf/4NPY0e8Q==
        "], {{0, 600}, {1000, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
        Automatic],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->800,
      ImageSizeRaw->{1000, 600},
      PlotRange->{{0, 1000}, {0, 600}}]},
    {
     StyleBox["\<\"The Fourier transform can be pictured as a collection of \
inner products between the data (green) and a collection of sinusoids \
(yellow). The output is a new sequence, called the spectrum (blue)..\"\>",
      StripOnInput->False,
      FontFamily->"Ariel",
      FontSize->13]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",ExpressionUUID->"40d82e55-059b-4040-88ec-1f472afa4362"]
}, {2}]],

Cell["\<\
The figure above shows that the (discrete) Fourier Transform operates on a \
sequence x[k] of length N and returns another sequence X[n] of length N.  \
Translating the above figure into symbols, the DFT is defined by\
\>", "Text",
 CellChangeTimes->{{3.544031960374208*^9, 3.544032013735114*^9}, {
   3.544305473006855*^9, 3.544305592231551*^9}, 3.553080114327343*^9, {
   3.5530802911498623`*^9, 3.553080291968869*^9}, {3.554478772230753*^9, 
   3.554478844926585*^9}, {3.554481512095392*^9, 
   3.554481597950618*^9}},ExpressionUUID->"daeb0588-f307-468f-8c4a-\
75dad5919b95"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{
       RowBox[{"x", "[", "k", "]"}], 
       SuperscriptBox["e", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "i", "nk", "\[Pi]"}], "N"]}]], "for", " ", "n"}]}], 
     "=", "0"}]}], ",", "1", ",", "...", ",", 
   RowBox[{"N", "-", "1"}]}], TraditionalForm]], "Equation",
 Evaluatable->False,
 CellChangeTimes->{{3.544032020380047*^9, 3.5440322849514227`*^9}, {
   3.5440323220054092`*^9, 3.544032356781*^9}, {3.544032414478725*^9, 
   3.544032417206325*^9}, {3.54486714042635*^9, 3.544867164124387*^9}, {
   3.544870448133458*^9, 3.54487046270317*^9}, 3.544871336859584*^9},
 CellTags->"DFT",ExpressionUUID->"0eed9cd2-c709-4e7e-8e60-d554c18bfccd"],

Cell[TextData[{
 "which is the same as the ",
 ButtonBox["inner product",
  BaseStyle->"Hyperlink",
  ButtonData->{"vvAngles.nb", None}],
 " <x, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "nk"}], "N"]], 
   TraditionalForm]],ExpressionUUID->"99cf0bf3-da57-4977-92f6-38cafef21644"],
 "> between the vector x and the (complex-valued) sinusoid ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "nk"}], "N"]], 
   TraditionalForm]],ExpressionUUID->"eaa1e6ef-2f85-49f8-81e3-d6db408bddb4"],
 ". For each value ",
 StyleBox["n",
  FontSlant->"Italic"],
 ", the DFT multiplies each term of the data x by the complex exponential and \
then sums. There are several things worth observing about this. First, \
consider the sinusoidal element(s). Each of the vectors is of size ",
 StyleBox["N",
  FontSlant->"Italic"],
 ", each is of (normalized) frequency ",
 StyleBox["n/N",
  FontSlant->"Italic"],
 " and contains ",
 StyleBox["N",
  FontSlant->"Italic"],
 " elements indexed from ",
 StyleBox["k ",
  FontSlant->"Italic"],
 "= 0 , 1, ... , ",
 StyleBox["N",
  FontSlant->"Italic"],
 "-1. These vectors are called sinusoids because of Euler\[CloseCurlyQuote]s \
formula, which rewrites the complex exponential form into trigonometric \
form:"
}], "Text",
 CellChangeTimes->{{3.544032362182611*^9, 3.544032488720232*^9}, {
   3.544032527211761*^9, 3.544032544369725*^9}, {3.544032871741943*^9, 
   3.54403291241393*^9}, 3.544032960185704*^9, {3.5440330020506783`*^9, 
   3.544033039159021*^9}, {3.544034458753983*^9, 3.544034469704122*^9}, {
   3.544034519692774*^9, 3.5440346876223497`*^9}, {3.5440350117068157`*^9, 
   3.5440350690052843`*^9}, {3.544102594741168*^9, 3.5441026031417723`*^9}, {
   3.544193861954281*^9, 3.544193861961376*^9}, {3.54419389707511*^9, 
   3.544193900547447*^9}, {3.544870490289516*^9, 3.544870498914323*^9}, {
   3.544870546898991*^9, 3.544870564490776*^9}, {3.5448705956982603`*^9, 
   3.5448705960658293`*^9}, {3.5544888937301483`*^9, 
   3.554488894144733*^9}},ExpressionUUID->"4565ff37-77da-4dd3-83e2-\
8a6b07c28443"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ExpToTrig", "[", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Theta]"}], "]"}], "]"}], ",", 
    RowBox[{"Spacer", "[", "100", "]"}], ",", 
    RowBox[{"ExpToTrig", "[", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "Pi", " ", "I", " ", "n", " ", 
       RowBox[{"k", "/", "N"}]}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.544035074700251*^9, {3.544035294341428*^9, 3.544035295997321*^9}, 
   3.544035405147143*^9, {3.544035453292054*^9, 
   3.544035508216032*^9}},ExpressionUUID->"bcaa48b1-6ed5-4053-ba46-\
d46d23b4bb73"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
   InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {100, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[100]], 
   RowBox[{
     RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", "k", " ", "n", " ", "\[Pi]"}], "N"], "]"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"2", " ", "k", " ", "n", " ", "\[Pi]"}], "N"], "]"}]}]}]},
  "RowDefault"]], "Output",ExpressionUUID->"1cafe8e9-d4e0-4d55-81dc-\
e28089364e16"]
}, {2}]],

Cell[TextData[{
 "For example, with ",
 StyleBox["N",
  FontSlant->"Italic"],
 "=8, the lowest frequency term corresponds to ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=0, which is the \[OpenCurlyDoubleQuote]DC\[CloseCurlyDoubleQuote] or zero \
frequency term"
}], "Text",
 CellChangeTimes->{{3.544032362182611*^9, 3.544032488720232*^9}, {
   3.544032527211761*^9, 3.544032544369725*^9}, {3.544032871741943*^9, 
   3.54403291241393*^9}, 3.544032960185704*^9, {3.5440330020506783`*^9, 
   3.544033039159021*^9}, {3.544034458753983*^9, 3.544034469704122*^9}, {
   3.544034519692774*^9, 3.5440346876223497`*^9}, 3.5440350117068157`*^9, {
   3.544035597635788*^9, 3.544035600860488*^9}, 
   3.551290671289928*^9},ExpressionUUID->"fc31950f-d2e1-4d36-854e-\
ecaf1642f1fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"W", "[", 
    RowBox[{"Nterms_", ",", "n_", ",", "k_"}], "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "Pi", " ", "I", " ", "n", " ", 
     RowBox[{"k", "/", "Nterms"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"W", "[", 
  RowBox[{"8", ",", "0", ",", 
   RowBox[{
    RowBox[{"Range", "[", "8", "]"}], "-", "1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.544034689157956*^9, 3.544034710112569*^9}, {
   3.544034801837743*^9, 3.5440348026212473`*^9}, 3.5441026722318707`*^9, {
   3.544102833584323*^9, 3.544102834453402*^9}, {3.544827049670989*^9, 
   3.5448270508064547`*^9}},ExpressionUUID->"26db4969-92dc-418c-b92b-\
4401645a1be4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
   "}"}]], "Output",ExpressionUUID->"4f5a1aa5-389a-4304-bd20-623908e26b01"]
}, {2}]],

Cell[TextData[{
 "More interesting is the ",
 StyleBox["n",
  FontSlant->"Italic"],
 "=1 vector:"
}], "Text",
 CellChangeTimes->{{3.544034747843285*^9, 3.544034772577867*^9}, {
   3.5440348150854797`*^9, 3.544034815858296*^9}, 
   3.544035605684586*^9},ExpressionUUID->"3c01dda7-1f83-487a-83a9-\
259371679317"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w1", "=", 
  RowBox[{"W", "[", 
   RowBox[{"8", ",", "1", ",", 
    RowBox[{
     RowBox[{"Range", "[", "8", "]"}], "-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.544034776764512*^9, 3.5440347973106337`*^9}, {
  3.544102837293426*^9, 3.544102837541078*^9}, {3.5441028700299463`*^9, 
  3.5441028709177027`*^9}, {3.544827054029093*^9, 
  3.544827054260748*^9}},ExpressionUUID->"56831def-c2db-4feb-ad64-\
9b72e33d8759"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]], ",", 
   RowBox[{"-", "\[ImaginaryI]"}], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]], ",", 
   RowBox[{"-", "1"}], ",", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "4"]], ",", 
   "\[ImaginaryI]", ",", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}], "}"}]], "Output",Expres\
sionUUID->"6a4e7773-9e2a-4ee6-aaa1-598aeecc6543"]
}, {2}]],

Cell["\<\
Translating this from complex form into real-imaginary form gives\
\>", "Text",
 CellChangeTimes->{{3.544035626667224*^9, 3.544035635157078*^9}, {
  3.544102680238912*^9, 
  3.544102699173916*^9}},ExpressionUUID->"0755d7b0-1168-45da-b140-\
1408f2ff18db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "w1", "]"}]], "Input",
 CellChangeTimes->{{3.544035639305173*^9, 3.544035645495392*^9}, {
  3.544102847499868*^9, 
  3.544102877397952*^9}},ExpressionUUID->"2da7733c-283e-433e-9e2a-\
f1ae47493874"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox[
    RowBox[{"1", "-", "\[ImaginaryI]"}], 
    SqrtBox["2"]], ",", 
   RowBox[{"-", "\[ImaginaryI]"}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "\[ImaginaryI]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "-", "\[ImaginaryI]"}], 
     SqrtBox["2"]]}], ",", "\[ImaginaryI]", ",", 
   FractionBox[
    RowBox[{"1", "+", "\[ImaginaryI]"}], 
    SqrtBox["2"]]}], "}"}]], "Output",ExpressionUUID->"4a5808ec-30fe-4fac-\
a8a7-f79bf8ddf310"]
}, {2}]],

Cell["\<\
which can be plotted as two separate plots, one for the real part and one for \
the imaginary part.\
\>", "Text",
 CellChangeTimes->{{3.544035731065303*^9, 3.544035740750226*^9}, {
  3.54410269526974*^9, 
  3.544102720817161*^9}},ExpressionUUID->"6089d3b1-76e7-444f-99e0-\
1ff8468a2b28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Re", "[", "w1", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Real Part\>\""}], ",", 
      RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], " ", ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Im", "[", "w1", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Imaginary Part\>\""}], ",", 
      RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.544034853312361*^9, 3.5440349379453983`*^9}, {
  3.5440357465130997`*^9, 3.5440357785616713`*^9}, {3.544035818291265*^9, 
  3.54403586777348*^9}, {3.544102751498514*^9, 3.5441027736834307`*^9}, {
  3.54410285405413*^9, 3.5441028828723288`*^9}, {3.544102916496346*^9, 
  3.544102938928088*^9}},ExpressionUUID->"fcc0ba3d-774a-427a-847a-\
15103021ce70"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 1.}, {2., 0.7071067811865476}, {3., 0.}, {
        4., -0.7071067811865476}, {5., -1.}, {6., -0.7071067811865476}, {7., 
        0.}, {8., 0.7071067811865476}, {1., 0.}, {8., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{7, 3, 4, 5, 6}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[{{7, 10, 8}}], 
             PolygonBox[{{1, 9, 3, 2}}]}]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}}], {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Real Part\"", TraditionalForm],
      PlotRange->{{0., 8.}, {-1., 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{1., 0.}, {2., -0.7071067811865476}, {3., -1.}, {
        4., -0.7071067811865476}, {5., 0.}, {6., 0.7071067811865476}, {7., 
        1.}, {8., 0.7071067811865476}, {8., 0.}}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[{{5, 1, 2, 3, 4}}]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[
            PolygonBox[{{5, 9, 8, 7, 6}}]]}, {}, {}}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.019444444444444445`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}}], {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Imaginary Part\"", TraditionalForm],
      PlotRange->{{0., 8.}, {-1., 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",ExpressionUUID->"d1269ed4-0c6f-4689-\
b726-af910311de00"]
}, {2}]],

Cell[TextData[{
 "These are nothing more than plots of the Cos[ ] and (minus) the Sin[ ] \
functions sampled ",
 StyleBox["N",
  FontSlant->"Italic"],
 "=8 times per period. This can be done for any ",
 StyleBox["N",
  FontSlant->"Italic"],
 ". Each row of the following matrix is one of these vectors."
}], "Text",
 CellChangeTimes->{{3.5440358781013527`*^9, 3.5440359110267143`*^9}, {
   3.544035948431325*^9, 3.544035971612818*^9}, {3.544036215504019*^9, 
   3.544036231397756*^9}, 3.5440362720245857`*^9, {3.544102724711499*^9, 
   3.544102744695805*^9}, {3.554488933343968*^9, 
   3.5544889455445642`*^9}},ExpressionUUID->"63d2b6b6-adf2-4cdb-95f6-\
6b5fb177bbf8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelFFTMatrix", "=", 
   "\"\<The DFT matrix consists of rows of (complex-valued) sinusoids\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoFFTMatrix", "=", 
   "\"\<The slider changes the order (size) of the DFT matrix. This matrix \
has a lot of structure:\\n\\nIt always has a row of ones across the top and a \
row of ones down the first column.\\n\\nIt is symmetric.\\n\\nEach column \
(and each row) is a complex-valued sinusoid with frequencies that subdivide \
the total length.\\n\\nEach column (and each row) are orthogonal to all the \
others.\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"W", "[", 
       RowBox[{"Nterms", ",", "n", ",", "k"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", 
        RowBox[{"Nterms", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"Nterms", "-", "1"}]}], "}"}]}], "]"}], "//", "TableForm"}], 
   ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Nterms", ",", "8", ",", "\"\<number of terms\>\""}], "}"}],
          ",", "1", ",", "32", ",", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoFFTMatrix", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelFFTMatrix", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", "Nterms", "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.544034050280404*^9, 3.544034097055582*^9}, {
   3.544034139681158*^9, 3.5440342535081778`*^9}, {3.54403433760891*^9, 
   3.5440344303718977`*^9}, {3.544034611554078*^9, 3.544034615713163*^9}, {
   3.544035988332052*^9, 3.544036081795892*^9}, {3.544036123517063*^9, 
   3.544036125691074*^9}, {3.544096980826098*^9, 3.54409702401372*^9}, 
   3.544102801872809*^9, {3.544827058351111*^9, 3.544827058553039*^9}, 
   3.548626117462966*^9, {3.550337144241026*^9, 3.550337147558869*^9}, {
   3.551290126345289*^9, 3.551290233878263*^9}, {3.552865293307716*^9, 
   3.552865350997519*^9}, {3.5529028946273527`*^9, 3.552902929405252*^9}, {
   3.552902967148212*^9, 3.55290300135809*^9}, {3.552903104323475*^9, 
   3.552903137971808*^9}, {3.552903168596099*^9, 3.552903190965899*^9}},
 CellTags->
  "labelFFTMatrix",ExpressionUUID->"91474fbc-1f7b-4c6f-b431-31e3a1deea97"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Nterms$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Nterms$$], 8, "number of terms"}, 1, 32, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "The slider changes the order (size) of the DFT matrix. This \
matrix has a lot of structure:\n\nIt always has a row of ones across the top \
and a row of ones down the first column.\n\nIt is symmetric.\n\nEach column \
(and each row) is a complex-valued sinusoid with frequencies that subdivide \
the total length.\n\nEach column (and each row) are orthogonal to all the \
others.", WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
          None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    494., {103.16754141980782`, 110.33245858019218`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`Nterms$1093242$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`Nterms$$ = 8}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Nterms$$, $CellContext`Nterms$1093242$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> TableForm[
        Table[
         $CellContext`W[$CellContext`Nterms$$, $CellContext`n, \
$CellContext`k], {$CellContext`k, 0, $CellContext`Nterms$$ - 
          1}, {$CellContext`n, 0, $CellContext`Nterms$$ - 1}]], 
      "Specifications" :> {{{$CellContext`Nterms$$, 8, "number of terms"}, 1, 
         32, 1, Appearance -> "Labeled", ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "The slider changes the order (size) of the DFT matrix. This \
matrix has a lot of structure:\n\nIt always has a row of ones across the top \
and a row of ones down the first column.\n\nIt is symmetric.\n\nEach column \
(and each row) is a complex-valued sinusoid with frequencies that subdivide \
the total length.\n\nEach column (and each row) are orthogonal to all the \
others.", WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
           None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The DFT matrix consists of rows of (complex-valued) sinusoids",
           Medium], TrackedSymbols -> {$CellContext`Nterms$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{552., {169.91754141980783`, 177.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`W[
         Pattern[$CellContext`Nterms, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := 
       Exp[((((-2) Pi) 
           I) $CellContext`n) ($CellContext`k/$CellContext`Nterms)]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelFFTMatrix",ExpressionUUID->"6351549e-15f5-45f4-8296-48ad101d6b98"]
}, {2}]],

Cell[TextData[{
 "Moreover, each row is orthogonal to every other row. Here is a direct \
verification of this for any ",
 StyleBox["N",
  FontSlant->"Italic"],
 " up to 80 (though of course it is true for all ",
 StyleBox["N",
  FontSlant->"Italic"],
 "). Whenever ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is different from ",
 StyleBox["m",
  FontSlant->"Italic"],
 ",  the inner product between the two rows is zero. When ",
 StyleBox["n=m",
  FontSlant->"Italic"],
 ", the inner product is equal to ",
 StyleBox["N",
  FontSlant->"Italic"],
 " (in the demonstration, both are divided by ",
 StyleBox["N",
  FontSlant->"Italic"],
 ", so the resulting sum is 1)."
}], "Text",
 CellChangeTimes->{{3.544036274629363*^9, 3.5440362939510403`*^9}, {
   3.544040104549654*^9, 3.54404028551488*^9}, 3.544199547482698*^9, {
   3.554488948714991*^9, 
   3.554488961865683*^9}},ExpressionUUID->"9a112591-09b6-452a-8c4c-\
3a789cc363c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelFFTOrth", "=", 
   "\"\<The inner product between different rows of the DFT matrix is \
zero\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoFFTOrth", "=", 
   "\"\<The length slider sets the length of the complex sinusoids.\\n\\nThe \
two frequency sliders choose two different frequencies, and the real parts of \
these signals are plotted.\\n\\nThe inner product between the two \
(complex-valued) signals is calculated directly and then simplified (using \
Mathematica's symbolic manipulations and the FullSimplify[] \
function).\\n\\nThe answer to this inner product is either 1 (when the two \
frequencies are the same) or 0 (when the two frequencies are \
different).\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GraphicsRow", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{"W", "[", 
              RowBox[{"Nterms", ",", "n", ",", 
               RowBox[{
                RowBox[{"Range", "[", "Nterms", "]"}], "-", "1"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"\"\<Real Part Frequency n = \>\"", "~~", 
              RowBox[{"ToString", "[", "n", "]"}]}]}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{"W", "[", 
              RowBox[{"Nterms", ",", "m", ",", 
               RowBox[{
                RowBox[{"Range", "[", "Nterms", "]"}], "-", "1"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"\"\<Real Part Frequency m = \>\"", "~~", 
              RowBox[{"ToString", "[", "m", "]"}]}]}]}], "]"}]}], "}"}], ",", 
        
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      RowBox[{"Framed", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"Nterms", ",", "n", ",", 
             RowBox[{
              RowBox[{"Range", "[", "Nterms", "]"}], "-", "1"}]}], "]"}], ".", 
           RowBox[{"Conjugate", "[", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"Nterms", ",", "m", ",", 
               RowBox[{
                RowBox[{"Range", "[", "Nterms", "]"}], "-", "1"}]}], "]"}], 
             "/", "Nterms"}], "]"}]}], ",", "\"\<  =  \>\"", ",", 
          RowBox[{"FullSimplify", "[", 
           RowBox[{
            RowBox[{"Inner", "[", 
             RowBox[{"Times", ",", 
              RowBox[{"W", "[", 
               RowBox[{"Nterms", ",", "n", ",", 
                RowBox[{
                 RowBox[{"Range", "[", "Nterms", "]"}], "-", "1"}]}], "]"}], 
              ",", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"W", "[", 
                RowBox[{"Nterms", ",", "m", ",", 
                 RowBox[{
                  RowBox[{"Range", "[", "Nterms", "]"}], "-", "1"}]}], "]"}], 
               "]"}], ",", "Plus"}], "]"}], "/", "Nterms"}], "]"}]}], "}"}], 
        "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Nterms", ",", "20", ",", "\"\<length of signal\>\""}], 
          "}"}], ",", "1", ",", "80", ",", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoFFTOrth", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"\"\<frequency \>\"", "~~", 
        RowBox[{"ToString", "[", "n", "]"}]}]}], "}"}], ",", "0", ",", 
     RowBox[{"Nterms", "-", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "2", ",", 
       RowBox[{"\"\<frequency \>\"", "~~", 
        RowBox[{"ToString", "[", "m", "]"}]}]}], "}"}], ",", "0", ",", 
     RowBox[{"Nterms", "-", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelFFTOrth", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Nterms", ",", "n", ",", "m"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.544036302770455*^9, 3.544036412124083*^9}, {
   3.544036921535604*^9, 3.5440369715744877`*^9}, {3.544037029028576*^9, 
   3.5440371100708838`*^9}, {3.544037174185947*^9, 3.544037175257462*^9}, {
   3.544037268170559*^9, 3.544037268282188*^9}, {3.5440373575088797`*^9, 
   3.544037379428425*^9}, {3.544037452842412*^9, 3.5440376025296297`*^9}, {
   3.544039953616777*^9, 3.5440400632893143`*^9}, {3.544040107874424*^9, 
   3.544040109104542*^9}, {3.544040289951527*^9, 3.544040295564364*^9}, {
   3.5440403954722557`*^9, 3.544040561167489*^9}, {3.544040595714238*^9, 
   3.544040849193427*^9}, {3.5440412697351427`*^9, 3.5440412766279793`*^9}, {
   3.544041389416432*^9, 3.544041390879278*^9}, {3.544041624116831*^9, 
   3.544041625075671*^9}, {3.5440416887153883`*^9, 3.544041702145081*^9}, {
   3.544097032309877*^9, 3.544097086046451*^9}, {3.544827064277873*^9, 
   3.544827132540119*^9}, 3.548626121600362*^9, {3.550337159278455*^9, 
   3.550337177711844*^9}, {3.5512902677912827`*^9, 3.551290291865941*^9}, {
   3.5512903877579517`*^9, 3.5512904235238533`*^9}, {3.552865367339231*^9, 
   3.552865442770691*^9}, {3.552903224718836*^9, 3.552903314084497*^9}, {
   3.552903354344574*^9, 3.552903529929455*^9}},
 CellTags->
  "labelFFTOrth",ExpressionUUID->"e23ee369-d398-4e89-8aeb-e81a38ba908f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 2, $CellContext`n$$ = 
    1, $CellContext`Nterms$$ = 20, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Nterms$$], 20, "length of signal"}, 1, 80, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "The length slider sets the length of the complex sinusoids.\n\n\
The two frequency sliders choose two different frequencies, and the real \
parts of these signals are plotted.\n\nThe inner product between the two \
(complex-valued) signals is calculated directly and then simplified (using \
Mathematica's symbolic manipulations and the FullSimplify[] function).\n\nThe \
answer to this inner product is either 1 (when the two frequencies are the \
same) or 0 (when the two frequencies are different).", WindowTitle -> "Notes",
             WindowFloating -> True]], Appearance -> None, BaseStyle -> {}, 
          DefaultBaseStyle -> {}]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`n$$], 1, "frequency n"}, 0, 
      Dynamic[$CellContext`Nterms$$ - 1], 1}, {{
       Hold[$CellContext`m$$], 2, "frequency m"}, 0, 
      Dynamic[$CellContext`Nterms$$ - 1], 1}}, Typeset`size$$ = {
    719., {144.16754141980783`, 151.33245858019217`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`Nterms$1093270$$ = 0, $CellContext`n$1093271$$ = 
    0, $CellContext`m$1093272$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`m$$ = 2, $CellContext`n$$ = 
        1, $CellContext`Nterms$$ = 20}, "ControllerVariables" :> {
        Hold[$CellContext`Nterms$$, $CellContext`Nterms$1093270$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$1093271$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$1093272$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         GraphicsRow[{
           ListLinePlot[
            Re[
             $CellContext`W[$CellContext`Nterms$$, $CellContext`n$$, 
              Range[$CellContext`Nterms$$] - 1]], Filling -> Axis, PlotLabel -> 
            StringExpression["Real Part Frequency n = ", 
              ToString[$CellContext`n$$]]], 
           ListLinePlot[
            Re[
             $CellContext`W[$CellContext`Nterms$$, $CellContext`m$$, 
              Range[$CellContext`Nterms$$] - 1]], Filling -> Axis, PlotLabel -> 
            StringExpression["Real Part Frequency m = ", 
              ToString[$CellContext`m$$]]]}, ImageSize -> 500], 
         Framed[
          Row[{
            Dot[
             $CellContext`W[$CellContext`Nterms$$, $CellContext`n$$, 
              Range[$CellContext`Nterms$$] - 1], 
             
             Conjugate[$CellContext`W[$CellContext`Nterms$$, $CellContext`m$$,
                 Range[$CellContext`Nterms$$] - 1]/$CellContext`Nterms$$]], 
            "  =  ", 
            FullSimplify[Inner[Times, 
               $CellContext`W[$CellContext`Nterms$$, $CellContext`n$$, 
                Range[$CellContext`Nterms$$] - 1], 
               Conjugate[
                $CellContext`W[$CellContext`Nterms$$, $CellContext`m$$, 
                 Range[$CellContext`Nterms$$] - 1]], 
               Plus]/$CellContext`Nterms$$]}]]}], 
      "Specifications" :> {{{$CellContext`Nterms$$, 20, "length of signal"}, 
         1, 80, 1, Appearance -> "Labeled", ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "The length slider sets the length of the complex sinusoids.\n\n\
The two frequency sliders choose two different frequencies, and the real \
parts of these signals are plotted.\n\nThe inner product between the two \
(complex-valued) signals is calculated directly and then simplified (using \
Mathematica's symbolic manipulations and the FullSimplify[] function).\n\nThe \
answer to this inner product is either 1 (when the two frequencies are the \
same) or 0 (when the two frequencies are different).", WindowTitle -> "Notes",
              WindowFloating -> True]], Appearance -> None, BaseStyle -> {}, 
           DefaultBaseStyle -> {}]}], {{$CellContext`n$$, 1, "frequency n"}, 
         0, 
         Dynamic[$CellContext`Nterms$$ - 1], 1, Appearance -> 
         "Labeled"}, {{$CellContext`m$$, 2, "frequency m"}, 0, 
         Dynamic[$CellContext`Nterms$$ - 1], 1, Appearance -> "Labeled"}}, 
      "Options" :> {
       FrameLabel -> 
        Style["The inner product between different rows of the DFT matrix is \
zero", Medium], 
        TrackedSymbols -> {$CellContext`Nterms$$, $CellContext`n$$, \
$CellContext`m$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{786., {238.91754141980783`, 246.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`W[
         Pattern[$CellContext`Nterms, 
          Blank[]], 
         Pattern[$CellContext`n, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := 
       Exp[((((-2) Pi) 
           I) $CellContext`n) ($CellContext`k/$CellContext`Nterms)]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelFFTOrth",ExpressionUUID->"63d36a23-34f7-4c55-8088-634b71b48671"]
}, {2}]],

Cell[TextData[{
 "Summarizing the results shown above in words is easy. (Complex) sinusoids \
of different frequencies are orthogonal (are at right angles, are \
uncorrelated with each other). Sinusoids of the same frequency point in the \
same direction, lie at an angle of zero degrees to each other. Considering it \
in this light presents a compelling interpretation of the Fourier transform \
(or more properly, the DFT). First, X[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] is a function of frequency: for each ",
 StyleBox["n",
  FontSlant->"Italic"],
 " the inner product is evaluated to give a complex-valued number with \
magnitude ",
 StyleBox["m",
  FontSlant->"Italic"],
 " and angle \[Theta]. Since X[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] is the correlation (inner product) between the signal x and a sinusoid of \
frequency 2\[Pi]",
 StyleBox["n/N",
  FontSlant->"Italic"],
 ", values of the correlation where ",
 StyleBox["m",
  FontSlant->"Italic"],
 " is large show the frequencies of the sine wave is \
\[OpenCurlyDoubleQuote]close to\[CloseCurlyDoubleQuote] x. Since sine waves \
of different frequencies are orthogonal, there is no interaction between \
different frequencies, and ",
 StyleBox["m",
  FontSlant->"Italic"],
 " is the amount of the frequency 2\[Pi]",
 StyleBox["n/N",
  FontSlant->"Italic"],
 " present in the signal x. The Fourier transform shows how x can be uniquely \
decomposed into (and rebuilt from) sums of sinusoids. "
}], "Text",
 CellChangeTimes->{{3.5440414378798122`*^9, 3.5440415897752037`*^9}, {
   3.5440417707263517`*^9, 3.5440419651294518`*^9}, {3.544042805182892*^9, 
   3.544042808875312*^9}, {3.54404285842235*^9, 3.54404287863883*^9}, {
   3.544102051253118*^9, 3.54410218565969*^9}, {3.544199586623744*^9, 
   3.5441996026037493`*^9}, {3.5441996370578833`*^9, 3.544199649476329*^9}, {
   3.544871657302868*^9, 3.5448716577262487`*^9}, {3.544871731543543*^9, 
   3.5448717529557257`*^9}, {3.5448718340387897`*^9, 3.544872028040925*^9}, {
   3.544872099952725*^9, 3.544872324084077*^9}, 3.552903745924487*^9, {
   3.5544646887427588`*^9, 
   3.554464688747942*^9}},ExpressionUUID->"4bd973bb-8458-4aed-8dca-\
2f90751ee9ea"],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.554481984945052*^9, 
  3.554481985927169*^9}},ExpressionUUID->"f4341386-a987-455f-9f85-\
489c74c76e80"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"c4c8ae78-9a07-440b-80c2-\
93d74a751e89"]
}, {2}]],

Cell[TextData[{
 "In many common applications, the Fourier transform is used to locate the \
frequencies in a signal. For example, if ",
 StyleBox["t",
  FontSlant->"Italic"],
 " is a time variable, the following shows the sum of two sinusoids with \
frequencies 10.7 and 17.2 Hz, plotted over one second. "
}], "Text",
 CellChangeTimes->{{3.54116252924162*^9, 3.5411625808684072`*^9}, {
   3.5411626608644247`*^9, 3.54116277080583*^9}, {3.5411634167647448`*^9, 
   3.541163423061273*^9}, 3.554482605045253*^9, {3.5544827088377333`*^9, 
   3.5544827172622433`*^9}},ExpressionUUID->"f7dc0f6a-c4ec-4e1f-a6a4-\
8f375b0812b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "Pi", " ", "17.2", " ", "t"}], "]"}], "+", 
    RowBox[{"0.8", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "Pi", " ", "10.7", " ", "t"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<A sum of two sinusoids\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.541162553105823*^9, 3.5411626495548162`*^9}, {
  3.541162691444469*^9, 3.5411627115253477`*^9}, {3.5411627879003696`*^9, 
  3.541162900379129*^9}, {3.5411629963144827`*^9, 3.541163025680447*^9}, {
  3.541163408407199*^9, 3.541163413655683*^9}, {3.551382079692746*^9, 
  3.551382100857553*^9}},ExpressionUUID->"e49974b2-f700-4c7b-b551-\
b8b08f11531e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
AV4rCs/8w/a28vF92r3YffU/SpaAmQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$1093424#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"A sum of two sinusoids\"", TraditionalForm],
  PlotRange->{{0, 1}, {-1.7814097634994464`, 1.799328606107803}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",ExpressionUUID->"e2b204ee-7383-\
44e6-bdb5-d7ceff85067e"]
}, {2}]],

Cell[TextData[{
 "For those who have had a course in ",
 ButtonBox["Signals and Systems",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.amazon.com/Signal-Processing-First-James-McClellan/dp/\
0130909998/ref=sr_1_1?ie=UTF8&qid=1345494131&sr=8-1&keywords=signal+\
processing+first"], None},
  ButtonNote->
   "http://www.amazon.com/Signal-Processing-First-James-McClellan/dp/\
0130909998/ref=sr_1_1?ie=UTF8&qid=1345494131&sr=8-1&keywords=signal+\
processing+first"],
 ", the continuous-time Fourier transform of a signal x[t] is the integral"
}], "Text",
 CellChangeTimes->{{3.5544827234152193`*^9, 3.5544827354939613`*^9}, {
  3.554482957734515*^9, 
  3.554483009652032*^9}},ExpressionUUID->"d3c505ec-a07d-4529-8982-\
39ef229cfd91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "\[Omega]"}], " ", "t", " ", "I"}], "]"}]}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.554483012838821*^9, 3.554483090408437*^9}, {
  3.554483358207765*^9, 
  3.554483362470783*^9}},ExpressionUUID->"ad271f26-a61d-405f-8251-\
f88391cdb980"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]"}]], " ", 
    RowBox[{"x", "[", "t", "]"}]}], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Output",ExpressionUUID->"e8f5e35e-\
b11f-4bf8-8080-f5436927a6a2"]
}, {2}]],

Cell["\<\
For the case where x[t] is the two-sinusoid function above, this can be \
calculated efficiently using\
\>", "Text",
 CellChangeTimes->{{3.554483103550663*^9, 3.5544831206295757`*^9}, {
  3.554483583592593*^9, 
  3.5544835972949467`*^9}},ExpressionUUID->"13368a90-4d86-4153-849e-\
61bbe83b2443"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"FourierTransform", "[", 
   RowBox[{
    RowBox[{"f", "[", "t", "]"}], ",", "t", ",", "\[Omega]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.54116297777976*^9, 3.541162977781431*^9}, {
  3.541163055005588*^9, 3.541163088694602*^9}, {3.541163857255931*^9, 
  3.541163863976542*^9}, {3.5544826419901733`*^9, 3.55448267178936*^9}, {
  3.55448361204537*^9, 
  3.554483637594183*^9}},ExpressionUUID->"8e376f87-b5e0-405c-bb3d-\
cefc627ca3c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.0026513098524001`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"67.23008278682157`", "\[VeryThinSpace]", "-", "\[Omega]"}], 
    "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"108.07078728348888`", "\[VeryThinSpace]", "-", "\[Omega]"}], 
    "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.0026513098524001`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"67.23008278682157`", "\[VeryThinSpace]", "+", "\[Omega]"}], 
    "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"108.07078728348888`", "\[VeryThinSpace]", "+", "\[Omega]"}], 
    "]"}]}]}]], "Output",ExpressionUUID->"f5c62dfa-5b4c-452b-922a-\
e94fb3880918"]
}, {2}]],

Cell["\<\
which shows that the Fourier Transform of these two sinusoids is a sum of \
delta functions which occur at +/- 67.2 (=2 Pi 10.7) and +/-108.07 (=2 Pi \
17.2). Such analytic forms will only be useful if there is a formula-based \
definition for the signal. In this case, there is, and Mathematica\
\[CloseCurlyQuote]s symbolic processing can carry out the calculations \
easily. \
\>", "Text",
 CellChangeTimes->{{3.541163215515675*^9, 3.541163298867606*^9}, {
  3.541163535391788*^9, 3.541163536440298*^9}, {3.541163659452681*^9, 
  3.541163748176496*^9}, {3.541163920146572*^9, 3.541163999757657*^9}, {
  3.553101125787792*^9, 3.5531011440808783`*^9}, {3.5544836027863607`*^9, 
  3.5544836042920847`*^9}, {3.554483658278311*^9, 
  3.554483717752026*^9}},ExpressionUUID->"1b62578c-622a-4ea8-a562-\
69f6bb32b494"],

Cell["\<\
Since in data analysis the signals are sampled, there is no functional form, \
and it is necessary to use the discrete form. The same signal f[t] above can \
be sampled at 1000 times per second and then analyzed by the FFT. The first \
plot shows the magnitude of the full 1000-point output, while the second \
zooms in to the lowest frequencies. The peaks near 11 and 17 are clear in the \
zoomed in version. The set of peaks out near 1000 in the left=hand plot are \
the \"negative\" frequencies (the mirror image of the positive frequencies, \
just as in the analytic solution above).\
\>", "Text",
 CellChangeTimes->{{3.541163215515675*^9, 3.541163298867606*^9}, {
  3.541163535391788*^9, 3.541163536440298*^9}, {3.541163659452681*^9, 
  3.541163748176496*^9}, {3.541163920146572*^9, 3.541163999757657*^9}, {
  3.553101125787792*^9, 3.5531011440808783`*^9}, {3.5544836027863607`*^9, 
  3.5544836042920847`*^9}, {3.554483658278311*^9, 
  3.5544837270943747`*^9}},ExpressionUUID->"7b3725ca-1c1f-424d-8b5f-\
7f2ca31e8b04"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampF", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Fourier", "[", "sampF", "]"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Fourier", "[", "sampF", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "50"}], "]"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], "}"}], "]"}], 
   ",", "\"\<The Fourier transform (spectrum) of the sinusoidal signal shows \
peaks at each of the two frequencies\>\"", ",", 
   RowBox[{"LabelStyle", "\[Rule]", "captionStyle"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.541163312290122*^9, 3.541163387658939*^9}, {
  3.5411635603825827`*^9, 3.541163609239306*^9}, {3.5411636431309843`*^9, 
  3.54116364755939*^9}, {3.541163710268252*^9, 3.541163711835944*^9}, {
  3.541534472026861*^9, 3.5415345066825933`*^9}, {3.551382122509515*^9, 
  3.551382129894253*^9}, {3.5513821938732347`*^9, 
  3.551382229392221*^9}},ExpressionUUID->"f2d166bd-b911-48d9-95cb-\
b90f85337f9e"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{}, 
       GraphicsComplexBox[CompressedData["
1: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
InqcHtMi5gdlZyIG9/xw5b1nlPVELG268VTbz5U9ibjY7NWbOh1W9iaiV9aO
L4e/o+xLRLfeZ5sUvqZsJOLF9KVLvtmp7E/EU87ux0Z5lQOJiDy5t96JZ5SD
ifhvZvfjK0uVtSQMu/q8pUuusiUJ3926pfTPVGVrEjpf1O84tVLZloRff+td
+HmcMpLQY8Kk3d/NMuNPwrtLoibfNNmMPwm7niiZETPajD8JrhEN1m4casaf
hOizu441HmjGn4RHrw26kN/HjD8JH1lb7G3XzYw/CV1rtP8O32vGn4RWp5/a
477TjD8JG9I+XzvzVjP+JETVm1oyrJkZfxL+mDx52bAGZvzJ6NRWbzXzWoKK
PxmDnrxtfMGfytZkGCfP3vzhJWVbMjad73xH2++VkYy2ew9NyjirbE/GtZE3
bf77hLIjGfPu+vRY3mfKzmS8O3nGR10+UtaT8Vx1qePrd5U9yUh8uyJ9+35l
bzJO7I3/J9un7EvGTXdG7YvfqWwko+iNtKcStyr7k3Hp5nXLizcoB5LxyI4W
XV9fqxxMxjuHLlf8VqqsuXD+0AcfDyww43dhdfmCFc/rZvwuPLm5b3qrVDN+
F+Ju+uv4Mwlm/C7EL/xiUvdlZvwu3JcQd+nUAjN+FxZuf23V0w4z/rr2pnee
ckw143fh9oOL/n5kghm/C6O+PvqWbbQZvwtLJ51t3DvGjN+FvfPz3nt8sBm/
CzM23/X5kgFm/C7ov09ut7WfGb8Ly5oPLfrRZsbvQu894+oP7mrGn4LlXYYv
3dXJjD8FkcYYXyerGX8K+jT+dp/vDjP+FPR+8UTcyNZm/CnIjo59ubalGX8K
UlKCCW/cZMafggajkr3Zjcz4U9Br7Z3tHZoZfwpsi2d9NepavIo/BScfinxn
xBVlb93jDVn66pTflX0p+H7BiW3JPysbdY//educbReV/Sl4u3xUv/PfKQdS
8MroM7ts55SDKRhbneAvPa2spSL73TZPXj2hbElFnzUtzyT5la2pGF59eUP9
T5VtqXCv2fHepsPKSMX0UeP6x3ygbE/Fuolxl+sdVHakokW7beeOvKXsTMWQ
jc1qtu5T1lOxfeYP1wtfNeNPxe3N3m+t7zXjT8We5KTb814y409FK2e7a+Xb
zfhTYRS12nVgqxl/KpoFrtz+y/Nm/Kl183Nf9AMbzPhTcXLMvNq09Wb8aZje
JHX46afN+NOQN/4561CPGX8aCkbvXXqwxIw/DR0vnbPGFJrxp6HpyrU9vskz
409Dg7uSinOzzfjT8Ky2qEv0ajP+NMwd47nyT5oZfxqOTB/588cuM/40HO7U
/98diWb8aUho0PuOtfFm/Gl4v8HI/mUrzPjT0PPVk/Znlprxp+GfmdPG7V5k
xp+GXS239vYvMONPg9P+0o/15pnxp+Nhbc+iR2eb8adj8o52O8tmmvGnQx/z
4qYfp5nxp6Pepi4Dx00x40/HlL/ey6iaZMafjreXfzRx5AQz/nS0mXvwwNdj
zfjT0alm2fb0MWb86Ujd//HN940y40/H2C3ahe+Gm/Gnw7oo6b6XYsz401Fr
O3Q083Ez/nS8NrvyM8cQM/50xMVOuts+2Iw/HfY/TlaOhBl/OmpmvrBu0iAz
/gz8dWzmnmUDzPgzsGLs2don+5vxZ+B/D9278oNoM/4MLLcvb1n/QTP+DGy5
v+tno/qa8WegYdurL2zvbcafgW7/21N6cy8z/gwEG47MXW0z489A6oPNsq93
N+PPwKbtE7JKHjDjz0CLn99P79zNjD8DDze5Z8Vn95vxZ+DMwyvGZ91nxp+B
099UdxwcZcafgb3Wd8+17GLGn4HFZ/em/9TJjD8Tl9cvufp5RzP+TGQ2/WH8
R/ea8dd5+IC8w/eY8Wdirfv9opMdzPgzsedcrSNoNePPxD2DPA0jTTsycXzS
oviR7c34MzEsfu2O0rvN+DPxyvixW87cZcafiSMtW87oZ9qbiUUTllZvamfG
n4kmO/q1usW0kYlNvyxu9PSdZvyZ+LdR39espgOZ+Pmz3yIP3GHGn4nNPTr1
nWNaW40NX5Y2bmPashqDn2hV8uXtZvyrsf33Dw+9YNq2GsZPwZczTGM1/mjV
eNQ80/bV2HN1x4bJph2rcVnauRq18uf11QjIx/OsxutyPO9qjJG/j2819svf
11iNrTIe/2r8K+MNrEZ9+XwE635f+XxpOj6Tz2eEjpny+bbo8MjXI1JHlny9
rDp6y9czSkeXWPF623S8NVD8PUTrWCP/XqBjr/x7itGxWv692evGl3+PsTqu
yr9Xh44c+fccp8PWQfy9O3UY8v3g0nFNvl90Hf81Fu8nt46W8v3mqRtPvh/L
dbjk+9WrY2hj8X6u0DFCvt99OhrLz4NKHWXy88LQMUp+nlTpaN5ffN74dXxj
F59H1Tq+kp9XAR1n5OdZjY7hIZ93OkbKz8NaHf86xOelloWf5OdpRBbGy89b
SxaK5edxZBZmy89raxY+vCg+z6Oy8P4c8Xlvy0KK/D6IzsLWy+L7Alk4slF8
n8RkYYz8vrFnIW27+D6KzUL9/3b/3+8rRxZWjBffZ3FZeNkivu+cWXhDfh+6
stBVfl/qWZgjv0/dWTgsv289WcjqIr6Py7MQNUt8X3uzUD5WfJ9XZOF1+X3v
y4Jbzgcqs3BKzheMLGTI+URV3fMh5xv+LATlfKS67veT85VAFprbxXymJovm
O1noKedDtVl4vlDMl7Rs9JDzqYhsXHaJ+ZYlG2/dJOZjkdlIk/M1azbmyflc
VDZWyvmeLRsfTxDzwehs3DRSzBeRjZbrxXwyJhvdTov5pj0by+V8NDYbr8j5
qiMbu06J+WxcNprI+a4zGznPivmwKxvP+cV8Wc9G4kIxn3ZnY4Ccb3uy8bmc
j5fXPd4iMV/3ZuMNOZ+vyEZPOd/3ZWO/XA9U1j1fcr1gZONhuZ6oysY7DcV6
w5+NRXI9Up2NZLleCWTj6m6xnqmpe75C1jt1r59cD9Vmh66XtBz8JtdTETmw
yvWWJQdj5XosMgcd5XrNmoOucj0XlYNxcr1ny0FDuR6MzsFuuV5EDl5oKtaT
MTl4R6437Tkok+vR2Bx8L9erjhx8ItezcTn4Qa53nTm4u7lYD7tycEyul/Uc
XLtDrKfdOfhCrrc9ORgl1+PlOVgv1+veHKyV6/mKHHzTTqz3fTnoPUrsB1Tm
oIHcLzBykCX3E6pycFbuN/hz0FLuR1TnYGMbsV8RyEHrWLGfUZODtiH7HTko
l/shtTm4Ve6XaLnoL/dTInIxp4PYb7HkIkPux0TmYpzcr7HmYqvcz4nKxW65
32PLxVq5HxSdi+pxYr8IuWgTFPtJMbkIXhD7TfZc/Cn3o2JzMVTuVzly0WyW
2M+Ky8XbJ8R+lzMX38v9MFcujsv9Mj0Xr/YS+2nuXLSQ+22eXPwl9+PKczFK
7td5c5Ep9/MqctFe7vf5chH5gNgPrKyLT+4XGrmh+4lVufglTuw3+nNRKPcj
q3NxQe5XBnIxwC32M2tycei83O/MRQe5H1qbC03ul2p5MOR+akQersn9Vkte
3fpA7MdG5mFoW7Ffa83D7XI/NyoPs+R+ry0PjeV+cHQeiuV+MfLgdYr95Jg8
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

        "], {{{}, {}, {}, {}, {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.3]], 
           LineBox[{1002, 1}], 
           LineBox[{1003, 2}], 
           LineBox[{1004, 3}], 
           LineBox[{1005, 4}], 
           LineBox[{1006, 5}], 
           LineBox[{1007, 6}], 
           LineBox[{1008, 7}], 
           LineBox[{1009, 8}], 
           LineBox[{1010, 9}], 
           LineBox[{1011, 10}], 
           LineBox[{1012, 11}], 
           LineBox[{1013, 12}], 
           LineBox[{1014, 13}], 
           LineBox[{1015, 14}], 
           LineBox[{1016, 15}], 
           LineBox[{1017, 16}], 
           LineBox[{1018, 17}], 
           LineBox[{1019, 18}], 
           LineBox[{1020, 19}], 
           LineBox[{1021, 20}], 
           LineBox[{1022, 21}], 
           LineBox[{1023, 22}], 
           LineBox[{1024, 23}], 
           LineBox[{1025, 24}], 
           LineBox[{1026, 25}], 
           LineBox[{1027, 26}], 
           LineBox[{1028, 27}], 
           LineBox[{1029, 28}], 
           LineBox[{1030, 29}], 
           LineBox[{1031, 30}], 
           LineBox[{1032, 31}], 
           LineBox[{1033, 32}], 
           LineBox[{1034, 33}], 
           LineBox[{1035, 34}], 
           LineBox[{1036, 35}], 
           LineBox[{1037, 36}], 
           LineBox[{1038, 37}], 
           LineBox[{1039, 38}], 
           LineBox[{1040, 39}], 
           LineBox[{1041, 40}], 
           LineBox[{1042, 41}], 
           LineBox[{1043, 42}], 
           LineBox[{1044, 43}], 
           LineBox[{1045, 44}], 
           LineBox[{1046, 45}], 
           LineBox[{1047, 46}], 
           LineBox[{1048, 47}], 
           LineBox[{1049, 48}], 
           LineBox[{1050, 49}], 
           LineBox[{1051, 50}], 
           LineBox[{1052, 51}], 
           LineBox[{1053, 52}], 
           LineBox[{1054, 53}], 
           LineBox[{1055, 54}], 
           LineBox[{1056, 55}], 
           LineBox[{1057, 56}], 
           LineBox[{1058, 57}], 
           LineBox[{1059, 58}], 
           LineBox[{1060, 59}], 
           LineBox[{1061, 60}], 
           LineBox[{1062, 61}], 
           LineBox[{1063, 62}], 
           LineBox[{1064, 63}], 
           LineBox[{1065, 64}], 
           LineBox[{1066, 65}], 
           LineBox[{1067, 66}], 
           LineBox[{1068, 67}], 
           LineBox[{1069, 68}], 
           LineBox[{1070, 69}], 
           LineBox[{1071, 70}], 
           LineBox[{1072, 71}], 
           LineBox[{1073, 72}], 
           LineBox[{1074, 73}], 
           LineBox[{1075, 74}], 
           LineBox[{1076, 75}], 
           LineBox[{1077, 76}], 
           LineBox[{1078, 77}], 
           LineBox[{1079, 78}], 
           LineBox[{1080, 79}], 
           LineBox[{1081, 80}], 
           LineBox[{1082, 81}], 
           LineBox[{1083, 82}], 
           LineBox[{1084, 83}], 
           LineBox[{1085, 84}], 
           LineBox[{1086, 85}], 
           LineBox[{1087, 86}], 
           LineBox[{1088, 87}], 
           LineBox[{1089, 88}], 
           LineBox[{1090, 89}], 
           LineBox[{1091, 90}], 
           LineBox[{1092, 91}], 
           LineBox[{1093, 92}], 
           LineBox[{1094, 93}], 
           LineBox[{1095, 94}], 
           LineBox[{1096, 95}], 
           LineBox[{1097, 96}], 
           LineBox[{1098, 97}], 
           LineBox[{1099, 98}], 
           LineBox[{1100, 99}], 
           LineBox[{1101, 100}], 
           LineBox[{1102, 101}], 
           LineBox[{1103, 102}], 
           LineBox[{1104, 103}], 
           LineBox[{1105, 104}], 
           LineBox[{1106, 105}], 
           LineBox[{1107, 106}], 
           LineBox[{1108, 107}], 
           LineBox[{1109, 108}], 
           LineBox[{1110, 109}], 
           LineBox[{1111, 110}], 
           LineBox[{1112, 111}], 
           LineBox[{1113, 112}], 
           LineBox[{1114, 113}], 
           LineBox[{1115, 114}], 
           LineBox[{1116, 115}], 
           LineBox[{1117, 116}], 
           LineBox[{1118, 117}], 
           LineBox[{1119, 118}], 
           LineBox[{1120, 119}], 
           LineBox[{1121, 120}], 
           LineBox[{1122, 121}], 
           LineBox[{1123, 122}], 
           LineBox[{1124, 123}], 
           LineBox[{1125, 124}], 
           LineBox[{1126, 125}], 
           LineBox[{1127, 126}], 
           LineBox[{1128, 127}], 
           LineBox[{1129, 128}], 
           LineBox[{1130, 129}], 
           LineBox[{1131, 130}], 
           LineBox[{1132, 131}], 
           LineBox[{1133, 132}], 
           LineBox[{1134, 133}], 
           LineBox[{1135, 134}], 
           LineBox[{1136, 135}], 
           LineBox[{1137, 136}], 
           LineBox[{1138, 137}], 
           LineBox[{1139, 138}], 
           LineBox[{1140, 139}], 
           LineBox[{1141, 140}], 
           LineBox[{1142, 141}], 
           LineBox[{1143, 142}], 
           LineBox[{1144, 143}], 
           LineBox[{1145, 144}], 
           LineBox[{1146, 145}], 
           LineBox[{1147, 146}], 
           LineBox[{1148, 147}], 
           LineBox[{1149, 148}], 
           LineBox[{1150, 149}], 
           LineBox[{1151, 150}], 
           LineBox[{1152, 151}], 
           LineBox[{1153, 152}], 
           LineBox[{1154, 153}], 
           LineBox[{1155, 154}], 
           LineBox[{1156, 155}], 
           LineBox[{1157, 156}], 
           LineBox[{1158, 157}], 
           LineBox[{1159, 158}], 
           LineBox[{1160, 159}], 
           LineBox[{1161, 160}], 
           LineBox[{1162, 161}], 
           LineBox[{1163, 162}], 
           LineBox[{1164, 163}], 
           LineBox[{1165, 164}], 
           LineBox[{1166, 165}], 
           LineBox[{1167, 166}], 
           LineBox[{1168, 167}], 
           LineBox[{1169, 168}], 
           LineBox[{1170, 169}], 
           LineBox[{1171, 170}], 
           LineBox[{1172, 171}], 
           LineBox[{1173, 172}], 
           LineBox[{1174, 173}], 
           LineBox[{1175, 174}], 
           LineBox[{1176, 175}], 
           LineBox[{1177, 176}], 
           LineBox[{1178, 177}], 
           LineBox[{1179, 178}], 
           LineBox[{1180, 179}], 
           LineBox[{1181, 180}], 
           LineBox[{1182, 181}], 
           LineBox[{1183, 182}], 
           LineBox[{1184, 183}], 
           LineBox[{1185, 184}], 
           LineBox[{1186, 185}], 
           LineBox[{1187, 186}], 
           LineBox[{1188, 187}], 
           LineBox[{1189, 188}], 
           LineBox[{1190, 189}], 
           LineBox[{1191, 190}], 
           LineBox[{1192, 191}], 
           LineBox[{1193, 192}], 
           LineBox[{1194, 193}], 
           LineBox[{1195, 194}], 
           LineBox[{1196, 195}], 
           LineBox[{1197, 196}], 
           LineBox[{1198, 197}], 
           LineBox[{1199, 198}], 
           LineBox[{1200, 199}], 
           LineBox[{1201, 200}], 
           LineBox[{1202, 201}], 
           LineBox[{1203, 202}], 
           LineBox[{1204, 203}], 
           LineBox[{1205, 204}], 
           LineBox[{1206, 205}], 
           LineBox[{1207, 206}], 
           LineBox[{1208, 207}], 
           LineBox[{1209, 208}], 
           LineBox[{1210, 209}], 
           LineBox[{1211, 210}], 
           LineBox[{1212, 211}], 
           LineBox[{1213, 212}], 
           LineBox[{1214, 213}], 
           LineBox[{1215, 214}], 
           LineBox[{1216, 215}], 
           LineBox[{1217, 216}], 
           LineBox[{1218, 217}], 
           LineBox[{1219, 218}], 
           LineBox[{1220, 219}], 
           LineBox[{1221, 220}], 
           LineBox[{1222, 221}], 
           LineBox[{1223, 222}], 
           LineBox[{1224, 223}], 
           LineBox[{1225, 224}], 
           LineBox[{1226, 225}], 
           LineBox[{1227, 226}], 
           LineBox[{1228, 227}], 
           LineBox[{1229, 228}], 
           LineBox[{1230, 229}], 
           LineBox[{1231, 230}], 
           LineBox[{1232, 231}], 
           LineBox[{1233, 232}], 
           LineBox[{1234, 233}], 
           LineBox[{1235, 234}], 
           LineBox[{1236, 235}], 
           LineBox[{1237, 236}], 
           LineBox[{1238, 237}], 
           LineBox[{1239, 238}], 
           LineBox[{1240, 239}], 
           LineBox[{1241, 240}], 
           LineBox[{1242, 241}], 
           LineBox[{1243, 242}], 
           LineBox[{1244, 243}], 
           LineBox[{1245, 244}], 
           LineBox[{1246, 245}], 
           LineBox[{1247, 246}], 
           LineBox[{1248, 247}], 
           LineBox[{1249, 248}], 
           LineBox[{1250, 249}], 
           LineBox[{1251, 250}], 
           LineBox[{1252, 251}], 
           LineBox[{1253, 252}], 
           LineBox[{1254, 253}], 
           LineBox[{1255, 254}], 
           LineBox[{1256, 255}], 
           LineBox[{1257, 256}], 
           LineBox[{1258, 257}], 
           LineBox[{1259, 258}], 
           LineBox[{1260, 259}], 
           LineBox[{1261, 260}], 
           LineBox[{1262, 261}], 
           LineBox[{1263, 262}], 
           LineBox[{1264, 263}], 
           LineBox[{1265, 264}], 
           LineBox[{1266, 265}], 
           LineBox[{1267, 266}], 
           LineBox[{1268, 267}], 
           LineBox[{1269, 268}], 
           LineBox[{1270, 269}], 
           LineBox[{1271, 270}], 
           LineBox[{1272, 271}], 
           LineBox[{1273, 272}], 
           LineBox[{1274, 273}], 
           LineBox[{1275, 274}], 
           LineBox[{1276, 275}], 
           LineBox[{1277, 276}], 
           LineBox[{1278, 277}], 
           LineBox[{1279, 278}], 
           LineBox[{1280, 279}], 
           LineBox[{1281, 280}], 
           LineBox[{1282, 281}], 
           LineBox[{1283, 282}], 
           LineBox[{1284, 283}], 
           LineBox[{1285, 284}], 
           LineBox[{1286, 285}], 
           LineBox[{1287, 286}], 
           LineBox[{1288, 287}], 
           LineBox[{1289, 288}], 
           LineBox[{1290, 289}], 
           LineBox[{1291, 290}], 
           LineBox[{1292, 291}], 
           LineBox[{1293, 292}], 
           LineBox[{1294, 293}], 
           LineBox[{1295, 294}], 
           LineBox[{1296, 295}], 
           LineBox[{1297, 296}], 
           LineBox[{1298, 297}], 
           LineBox[{1299, 298}], 
           LineBox[{1300, 299}], 
           LineBox[{1301, 300}], 
           LineBox[{1302, 301}], 
           LineBox[{1303, 302}], 
           LineBox[{1304, 303}], 
           LineBox[{1305, 304}], 
           LineBox[{1306, 305}], 
           LineBox[{1307, 306}], 
           LineBox[{1308, 307}], 
           LineBox[{1309, 308}], 
           LineBox[{1310, 309}], 
           LineBox[{1311, 310}], 
           LineBox[{1312, 311}], 
           LineBox[{1313, 312}], 
           LineBox[{1314, 313}], 
           LineBox[{1315, 314}], 
           LineBox[{1316, 315}], 
           LineBox[{1317, 316}], 
           LineBox[{1318, 317}], 
           LineBox[{1319, 318}], 
           LineBox[{1320, 319}], 
           LineBox[{1321, 320}], 
           LineBox[{1322, 321}], 
           LineBox[{1323, 322}], 
           LineBox[{1324, 323}], 
           LineBox[{1325, 324}], 
           LineBox[{1326, 325}], 
           LineBox[{1327, 326}], 
           LineBox[{1328, 327}], 
           LineBox[{1329, 328}], 
           LineBox[{1330, 329}], 
           LineBox[{1331, 330}], 
           LineBox[{1332, 331}], 
           LineBox[{1333, 332}], 
           LineBox[{1334, 333}], 
           LineBox[{1335, 334}], 
           LineBox[{1336, 335}], 
           LineBox[{1337, 336}], 
           LineBox[{1338, 337}], 
           LineBox[{1339, 338}], 
           LineBox[{1340, 339}], 
           LineBox[{1341, 340}], 
           LineBox[{1342, 341}], 
           LineBox[{1343, 342}], 
           LineBox[{1344, 343}], 
           LineBox[{1345, 344}], 
           LineBox[{1346, 345}], 
           LineBox[{1347, 346}], 
           LineBox[{1348, 347}], 
           LineBox[{1349, 348}], 
           LineBox[{1350, 349}], 
           LineBox[{1351, 350}], 
           LineBox[{1352, 351}], 
           LineBox[{1353, 352}], 
           LineBox[{1354, 353}], 
           LineBox[{1355, 354}], 
           LineBox[{1356, 355}], 
           LineBox[{1357, 356}], 
           LineBox[{1358, 357}], 
           LineBox[{1359, 358}], 
           LineBox[{1360, 359}], 
           LineBox[{1361, 360}], 
           LineBox[{1362, 361}], 
           LineBox[{1363, 362}], 
           LineBox[{1364, 363}], 
           LineBox[{1365, 364}], 
           LineBox[{1366, 365}], 
           LineBox[{1367, 366}], 
           LineBox[{1368, 367}], 
           LineBox[{1369, 368}], 
           LineBox[{1370, 369}], 
           LineBox[{1371, 370}], 
           LineBox[{1372, 371}], 
           LineBox[{1373, 372}], 
           LineBox[{1374, 373}], 
           LineBox[{1375, 374}], 
           LineBox[{1376, 375}], 
           LineBox[{1377, 376}], 
           LineBox[{1378, 377}], 
           LineBox[{1379, 378}], 
           LineBox[{1380, 379}], 
           LineBox[{1381, 380}], 
           LineBox[{1382, 381}], 
           LineBox[{1383, 382}], 
           LineBox[{1384, 383}], 
           LineBox[{1385, 384}], 
           LineBox[{1386, 385}], 
           LineBox[{1387, 386}], 
           LineBox[{1388, 387}], 
           LineBox[{1389, 388}], 
           LineBox[{1390, 389}], 
           LineBox[{1391, 390}], 
           LineBox[{1392, 391}], 
           LineBox[{1393, 392}], 
           LineBox[{1394, 393}], 
           LineBox[{1395, 394}], 
           LineBox[{1396, 395}], 
           LineBox[{1397, 396}], 
           LineBox[{1398, 397}], 
           LineBox[{1399, 398}], 
           LineBox[{1400, 399}], 
           LineBox[{1401, 400}], 
           LineBox[{1402, 401}], 
           LineBox[{1403, 402}], 
           LineBox[{1404, 403}], 
           LineBox[{1405, 404}], 
           LineBox[{1406, 405}], 
           LineBox[{1407, 406}], 
           LineBox[{1408, 407}], 
           LineBox[{1409, 408}], 
           LineBox[{1410, 409}], 
           LineBox[{1411, 410}], 
           LineBox[{1412, 411}], 
           LineBox[{1413, 412}], 
           LineBox[{1414, 413}], 
           LineBox[{1415, 414}], 
           LineBox[{1416, 415}], 
           LineBox[{1417, 416}], 
           LineBox[{1418, 417}], 
           LineBox[{1419, 418}], 
           LineBox[{1420, 419}], 
           LineBox[{1421, 420}], 
           LineBox[{1422, 421}], 
           LineBox[{1423, 422}], 
           LineBox[{1424, 423}], 
           LineBox[{1425, 424}], 
           LineBox[{1426, 425}], 
           LineBox[{1427, 426}], 
           LineBox[{1428, 427}], 
           LineBox[{1429, 428}], 
           LineBox[{1430, 429}], 
           LineBox[{1431, 430}], 
           LineBox[{1432, 431}], 
           LineBox[{1433, 432}], 
           LineBox[{1434, 433}], 
           LineBox[{1435, 434}], 
           LineBox[{1436, 435}], 
           LineBox[{1437, 436}], 
           LineBox[{1438, 437}], 
           LineBox[{1439, 438}], 
           LineBox[{1440, 439}], 
           LineBox[{1441, 440}], 
           LineBox[{1442, 441}], 
           LineBox[{1443, 442}], 
           LineBox[{1444, 443}], 
           LineBox[{1445, 444}], 
           LineBox[{1446, 445}], 
           LineBox[{1447, 446}], 
           LineBox[{1448, 447}], 
           LineBox[{1449, 448}], 
           LineBox[{1450, 449}], 
           LineBox[{1451, 450}], 
           LineBox[{1452, 451}], 
           LineBox[{1453, 452}], 
           LineBox[{1454, 453}], 
           LineBox[{1455, 454}], 
           LineBox[{1456, 455}], 
           LineBox[{1457, 456}], 
           LineBox[{1458, 457}], 
           LineBox[{1459, 458}], 
           LineBox[{1460, 459}], 
           LineBox[{1461, 460}], 
           LineBox[{1462, 461}], 
           LineBox[{1463, 462}], 
           LineBox[{1464, 463}], 
           LineBox[{1465, 464}], 
           LineBox[{1466, 465}], 
           LineBox[{1467, 466}], 
           LineBox[{1468, 467}], 
           LineBox[{1469, 468}], 
           LineBox[{1470, 469}], 
           LineBox[{1471, 470}], 
           LineBox[{1472, 471}], 
           LineBox[{1473, 472}], 
           LineBox[{1474, 473}], 
           LineBox[{1475, 474}], 
           LineBox[{1476, 475}], 
           LineBox[{1477, 476}], 
           LineBox[{1478, 477}], 
           LineBox[{1479, 478}], 
           LineBox[{1480, 479}], 
           LineBox[{1481, 480}], 
           LineBox[{1482, 481}], 
           LineBox[{1483, 482}], 
           LineBox[{1484, 483}], 
           LineBox[{1485, 484}], 
           LineBox[{1486, 485}], 
           LineBox[{1487, 486}], 
           LineBox[{1488, 487}], 
           LineBox[{1489, 488}], 
           LineBox[{1490, 489}], 
           LineBox[{1491, 490}], 
           LineBox[{1492, 491}], 
           LineBox[{1493, 492}], 
           LineBox[{1494, 493}], 
           LineBox[{1495, 494}], 
           LineBox[{1496, 495}], 
           LineBox[{1497, 496}], 
           LineBox[{1498, 497}], 
           LineBox[{1499, 498}], 
           LineBox[{1500, 499}], 
           LineBox[{1501, 500}], 
           LineBox[{1502, 501}], 
           LineBox[{1503, 502}], 
           LineBox[{1504, 503}], 
           LineBox[{1505, 504}], 
           LineBox[{1506, 505}], 
           LineBox[{1507, 506}], 
           LineBox[{1508, 507}], 
           LineBox[{1509, 508}], 
           LineBox[{1510, 509}], 
           LineBox[{1511, 510}], 
           LineBox[{1512, 511}], 
           LineBox[{1513, 512}], 
           LineBox[{1514, 513}], 
           LineBox[{1515, 514}], 
           LineBox[{1516, 515}], 
           LineBox[{1517, 516}], 
           LineBox[{1518, 517}], 
           LineBox[{1519, 518}], 
           LineBox[{1520, 519}], 
           LineBox[{1521, 520}], 
           LineBox[{1522, 521}], 
           LineBox[{1523, 522}], 
           LineBox[{1524, 523}], 
           LineBox[{1525, 524}], 
           LineBox[{1526, 525}], 
           LineBox[{1527, 526}], 
           LineBox[{1528, 527}], 
           LineBox[{1529, 528}], 
           LineBox[{1530, 529}], 
           LineBox[{1531, 530}], 
           LineBox[{1532, 531}], 
           LineBox[{1533, 532}], 
           LineBox[{1534, 533}], 
           LineBox[{1535, 534}], 
           LineBox[{1536, 535}], 
           LineBox[{1537, 536}], 
           LineBox[{1538, 537}], 
           LineBox[{1539, 538}], 
           LineBox[{1540, 539}], 
           LineBox[{1541, 540}], 
           LineBox[{1542, 541}], 
           LineBox[{1543, 542}], 
           LineBox[{1544, 543}], 
           LineBox[{1545, 544}], 
           LineBox[{1546, 545}], 
           LineBox[{1547, 546}], 
           LineBox[{1548, 547}], 
           LineBox[{1549, 548}], 
           LineBox[{1550, 549}], 
           LineBox[{1551, 550}], 
           LineBox[{1552, 551}], 
           LineBox[{1553, 552}], 
           LineBox[{1554, 553}], 
           LineBox[{1555, 554}], 
           LineBox[{1556, 555}], 
           LineBox[{1557, 556}], 
           LineBox[{1558, 557}], 
           LineBox[{1559, 558}], 
           LineBox[{1560, 559}], 
           LineBox[{1561, 560}], 
           LineBox[{1562, 561}], 
           LineBox[{1563, 562}], 
           LineBox[{1564, 563}], 
           LineBox[{1565, 564}], 
           LineBox[{1566, 565}], 
           LineBox[{1567, 566}], 
           LineBox[{1568, 567}], 
           LineBox[{1569, 568}], 
           LineBox[{1570, 569}], 
           LineBox[{1571, 570}], 
           LineBox[{1572, 571}], 
           LineBox[{1573, 572}], 
           LineBox[{1574, 573}], 
           LineBox[{1575, 574}], 
           LineBox[{1576, 575}], 
           LineBox[{1577, 576}], 
           LineBox[{1578, 577}], 
           LineBox[{1579, 578}], 
           LineBox[{1580, 579}], 
           LineBox[{1581, 580}], 
           LineBox[{1582, 581}], 
           LineBox[{1583, 582}], 
           LineBox[{1584, 583}], 
           LineBox[{1585, 584}], 
           LineBox[{1586, 585}], 
           LineBox[{1587, 586}], 
           LineBox[{1588, 587}], 
           LineBox[{1589, 588}], 
           LineBox[{1590, 589}], 
           LineBox[{1591, 590}], 
           LineBox[{1592, 591}], 
           LineBox[{1593, 592}], 
           LineBox[{1594, 593}], 
           LineBox[{1595, 594}], 
           LineBox[{1596, 595}], 
           LineBox[{1597, 596}], 
           LineBox[{1598, 597}], 
           LineBox[{1599, 598}], 
           LineBox[{1600, 599}], 
           LineBox[{1601, 600}], 
           LineBox[{1602, 601}], 
           LineBox[{1603, 602}], 
           LineBox[{1604, 603}], 
           LineBox[{1605, 604}], 
           LineBox[{1606, 605}], 
           LineBox[{1607, 606}], 
           LineBox[{1608, 607}], 
           LineBox[{1609, 608}], 
           LineBox[{1610, 609}], 
           LineBox[{1611, 610}], 
           LineBox[{1612, 611}], 
           LineBox[{1613, 612}], 
           LineBox[{1614, 613}], 
           LineBox[{1615, 614}], 
           LineBox[{1616, 615}], 
           LineBox[{1617, 616}], 
           LineBox[{1618, 617}], 
           LineBox[{1619, 618}], 
           LineBox[{1620, 619}], 
           LineBox[{1621, 620}], 
           LineBox[{1622, 621}], 
           LineBox[{1623, 622}], 
           LineBox[{1624, 623}], 
           LineBox[{1625, 624}], 
           LineBox[{1626, 625}], 
           LineBox[{1627, 626}], 
           LineBox[{1628, 627}], 
           LineBox[{1629, 628}], 
           LineBox[{1630, 629}], 
           LineBox[{1631, 630}], 
           LineBox[{1632, 631}], 
           LineBox[{1633, 632}], 
           LineBox[{1634, 633}], 
           LineBox[{1635, 634}], 
           LineBox[{1636, 635}], 
           LineBox[{1637, 636}], 
           LineBox[{1638, 637}], 
           LineBox[{1639, 638}], 
           LineBox[{1640, 639}], 
           LineBox[{1641, 640}], 
           LineBox[{1642, 641}], 
           LineBox[{1643, 642}], 
           LineBox[{1644, 643}], 
           LineBox[{1645, 644}], 
           LineBox[{1646, 645}], 
           LineBox[{1647, 646}], 
           LineBox[{1648, 647}], 
           LineBox[{1649, 648}], 
           LineBox[{1650, 649}], 
           LineBox[{1651, 650}], 
           LineBox[{1652, 651}], 
           LineBox[{1653, 652}], 
           LineBox[{1654, 653}], 
           LineBox[{1655, 654}], 
           LineBox[{1656, 655}], 
           LineBox[{1657, 656}], 
           LineBox[{1658, 657}], 
           LineBox[{1659, 658}], 
           LineBox[{1660, 659}], 
           LineBox[{1661, 660}], 
           LineBox[{1662, 661}], 
           LineBox[{1663, 662}], 
           LineBox[{1664, 663}], 
           LineBox[{1665, 664}], 
           LineBox[{1666, 665}], 
           LineBox[{1667, 666}], 
           LineBox[{1668, 667}], 
           LineBox[{1669, 668}], 
           LineBox[{1670, 669}], 
           LineBox[{1671, 670}], 
           LineBox[{1672, 671}], 
           LineBox[{1673, 672}], 
           LineBox[{1674, 673}], 
           LineBox[{1675, 674}], 
           LineBox[{1676, 675}], 
           LineBox[{1677, 676}], 
           LineBox[{1678, 677}], 
           LineBox[{1679, 678}], 
           LineBox[{1680, 679}], 
           LineBox[{1681, 680}], 
           LineBox[{1682, 681}], 
           LineBox[{1683, 682}], 
           LineBox[{1684, 683}], 
           LineBox[{1685, 684}], 
           LineBox[{1686, 685}], 
           LineBox[{1687, 686}], 
           LineBox[{1688, 687}], 
           LineBox[{1689, 688}], 
           LineBox[{1690, 689}], 
           LineBox[{1691, 690}], 
           LineBox[{1692, 691}], 
           LineBox[{1693, 692}], 
           LineBox[{1694, 693}], 
           LineBox[{1695, 694}], 
           LineBox[{1696, 695}], 
           LineBox[{1697, 696}], 
           LineBox[{1698, 697}], 
           LineBox[{1699, 698}], 
           LineBox[{1700, 699}], 
           LineBox[{1701, 700}], 
           LineBox[{1702, 701}], 
           LineBox[{1703, 702}], 
           LineBox[{1704, 703}], 
           LineBox[{1705, 704}], 
           LineBox[{1706, 705}], 
           LineBox[{1707, 706}], 
           LineBox[{1708, 707}], 
           LineBox[{1709, 708}], 
           LineBox[{1710, 709}], 
           LineBox[{1711, 710}], 
           LineBox[{1712, 711}], 
           LineBox[{1713, 712}], 
           LineBox[{1714, 713}], 
           LineBox[{1715, 714}], 
           LineBox[{1716, 715}], 
           LineBox[{1717, 716}], 
           LineBox[{1718, 717}], 
           LineBox[{1719, 718}], 
           LineBox[{1720, 719}], 
           LineBox[{1721, 720}], 
           LineBox[{1722, 721}], 
           LineBox[{1723, 722}], 
           LineBox[{1724, 723}], 
           LineBox[{1725, 724}], 
           LineBox[{1726, 725}], 
           LineBox[{1727, 726}], 
           LineBox[{1728, 727}], 
           LineBox[{1729, 728}], 
           LineBox[{1730, 729}], 
           LineBox[{1731, 730}], 
           LineBox[{1732, 731}], 
           LineBox[{1733, 732}], 
           LineBox[{1734, 733}], 
           LineBox[{1735, 734}], 
           LineBox[{1736, 735}], 
           LineBox[{1737, 736}], 
           LineBox[{1738, 737}], 
           LineBox[{1739, 738}], 
           LineBox[{1740, 739}], 
           LineBox[{1741, 740}], 
           LineBox[{1742, 741}], 
           LineBox[{1743, 742}], 
           LineBox[{1744, 743}], 
           LineBox[{1745, 744}], 
           LineBox[{1746, 745}], 
           LineBox[{1747, 746}], 
           LineBox[{1748, 747}], 
           LineBox[{1749, 748}], 
           LineBox[{1750, 749}], 
           LineBox[{1751, 750}], 
           LineBox[{1752, 751}], 
           LineBox[{1753, 752}], 
           LineBox[{1754, 753}], 
           LineBox[{1755, 754}], 
           LineBox[{1756, 755}], 
           LineBox[{1757, 756}], 
           LineBox[{1758, 757}], 
           LineBox[{1759, 758}], 
           LineBox[{1760, 759}], 
           LineBox[{1761, 760}], 
           LineBox[{1762, 761}], 
           LineBox[{1763, 762}], 
           LineBox[{1764, 763}], 
           LineBox[{1765, 764}], 
           LineBox[{1766, 765}], 
           LineBox[{1767, 766}], 
           LineBox[{1768, 767}], 
           LineBox[{1769, 768}], 
           LineBox[{1770, 769}], 
           LineBox[{1771, 770}], 
           LineBox[{1772, 771}], 
           LineBox[{1773, 772}], 
           LineBox[{1774, 773}], 
           LineBox[{1775, 774}], 
           LineBox[{1776, 775}], 
           LineBox[{1777, 776}], 
           LineBox[{1778, 777}], 
           LineBox[{1779, 778}], 
           LineBox[{1780, 779}], 
           LineBox[{1781, 780}], 
           LineBox[{1782, 781}], 
           LineBox[{1783, 782}], 
           LineBox[{1784, 783}], 
           LineBox[{1785, 784}], 
           LineBox[{1786, 785}], 
           LineBox[{1787, 786}], 
           LineBox[{1788, 787}], 
           LineBox[{1789, 788}], 
           LineBox[{1790, 789}], 
           LineBox[{1791, 790}], 
           LineBox[{1792, 791}], 
           LineBox[{1793, 792}], 
           LineBox[{1794, 793}], 
           LineBox[{1795, 794}], 
           LineBox[{1796, 795}], 
           LineBox[{1797, 796}], 
           LineBox[{1798, 797}], 
           LineBox[{1799, 798}], 
           LineBox[{1800, 799}], 
           LineBox[{1801, 800}], 
           LineBox[{1802, 801}], 
           LineBox[{1803, 802}], 
           LineBox[{1804, 803}], 
           LineBox[{1805, 804}], 
           LineBox[{1806, 805}], 
           LineBox[{1807, 806}], 
           LineBox[{1808, 807}], 
           LineBox[{1809, 808}], 
           LineBox[{1810, 809}], 
           LineBox[{1811, 810}], 
           LineBox[{1812, 811}], 
           LineBox[{1813, 812}], 
           LineBox[{1814, 813}], 
           LineBox[{1815, 814}], 
           LineBox[{1816, 815}], 
           LineBox[{1817, 816}], 
           LineBox[{1818, 817}], 
           LineBox[{1819, 818}], 
           LineBox[{1820, 819}], 
           LineBox[{1821, 820}], 
           LineBox[{1822, 821}], 
           LineBox[{1823, 822}], 
           LineBox[{1824, 823}], 
           LineBox[{1825, 824}], 
           LineBox[{1826, 825}], 
           LineBox[{1827, 826}], 
           LineBox[{1828, 827}], 
           LineBox[{1829, 828}], 
           LineBox[{1830, 829}], 
           LineBox[{1831, 830}], 
           LineBox[{1832, 831}], 
           LineBox[{1833, 832}], 
           LineBox[{1834, 833}], 
           LineBox[{1835, 834}], 
           LineBox[{1836, 835}], 
           LineBox[{1837, 836}], 
           LineBox[{1838, 837}], 
           LineBox[{1839, 838}], 
           LineBox[{1840, 839}], 
           LineBox[{1841, 840}], 
           LineBox[{1842, 841}], 
           LineBox[{1843, 842}], 
           LineBox[{1844, 843}], 
           LineBox[{1845, 844}], 
           LineBox[{1846, 845}], 
           LineBox[{1847, 846}], 
           LineBox[{1848, 847}], 
           LineBox[{1849, 848}], 
           LineBox[{1850, 849}], 
           LineBox[{1851, 850}], 
           LineBox[{1852, 851}], 
           LineBox[{1853, 852}], 
           LineBox[{1854, 853}], 
           LineBox[{1855, 854}], 
           LineBox[{1856, 855}], 
           LineBox[{1857, 856}], 
           LineBox[{1858, 857}], 
           LineBox[{1859, 858}], 
           LineBox[{1860, 859}], 
           LineBox[{1861, 860}], 
           LineBox[{1862, 861}], 
           LineBox[{1863, 862}], 
           LineBox[{1864, 863}], 
           LineBox[{1865, 864}], 
           LineBox[{1866, 865}], 
           LineBox[{1867, 866}], 
           LineBox[{1868, 867}], 
           LineBox[{1869, 868}], 
           LineBox[{1870, 869}], 
           LineBox[{1871, 870}], 
           LineBox[{1872, 871}], 
           LineBox[{1873, 872}], 
           LineBox[{1874, 873}], 
           LineBox[{1875, 874}], 
           LineBox[{1876, 875}], 
           LineBox[{1877, 876}], 
           LineBox[{1878, 877}], 
           LineBox[{1879, 878}], 
           LineBox[{1880, 879}], 
           LineBox[{1881, 880}], 
           LineBox[{1882, 881}], 
           LineBox[{1883, 882}], 
           LineBox[{1884, 883}], 
           LineBox[{1885, 884}], 
           LineBox[{1886, 885}], 
           LineBox[{1887, 886}], 
           LineBox[{1888, 887}], 
           LineBox[{1889, 888}], 
           LineBox[{1890, 889}], 
           LineBox[{1891, 890}], 
           LineBox[{1892, 891}], 
           LineBox[{1893, 892}], 
           LineBox[{1894, 893}], 
           LineBox[{1895, 894}], 
           LineBox[{1896, 895}], 
           LineBox[{1897, 896}], 
           LineBox[{1898, 897}], 
           LineBox[{1899, 898}], 
           LineBox[{1900, 899}], 
           LineBox[{1901, 900}], 
           LineBox[{1902, 901}], 
           LineBox[{1903, 902}], 
           LineBox[{1904, 903}], 
           LineBox[{1905, 904}], 
           LineBox[{1906, 905}], 
           LineBox[{1907, 906}], 
           LineBox[{1908, 907}], 
           LineBox[{1909, 908}], 
           LineBox[{1910, 909}], 
           LineBox[{1911, 910}], 
           LineBox[{1912, 911}], 
           LineBox[{1913, 912}], 
           LineBox[{1914, 913}], 
           LineBox[{1915, 914}], 
           LineBox[{1916, 915}], 
           LineBox[{1917, 916}], 
           LineBox[{1918, 917}], 
           LineBox[{1919, 918}], 
           LineBox[{1920, 919}], 
           LineBox[{1921, 920}], 
           LineBox[{1922, 921}], 
           LineBox[{1923, 922}], 
           LineBox[{1924, 923}], 
           LineBox[{1925, 924}], 
           LineBox[{1926, 925}], 
           LineBox[{1927, 926}], 
           LineBox[{1928, 927}], 
           LineBox[{1929, 928}], 
           LineBox[{1930, 929}], 
           LineBox[{1931, 930}], 
           LineBox[{1932, 931}], 
           LineBox[{1933, 932}], 
           LineBox[{1934, 933}], 
           LineBox[{1935, 934}], 
           LineBox[{1936, 935}], 
           LineBox[{1937, 936}], 
           LineBox[{1938, 937}], 
           LineBox[{1939, 938}], 
           LineBox[{1940, 939}], 
           LineBox[{1941, 940}], 
           LineBox[{1942, 941}], 
           LineBox[{1943, 942}], 
           LineBox[{1944, 943}], 
           LineBox[{1945, 944}], 
           LineBox[{1946, 945}], 
           LineBox[{1947, 946}], 
           LineBox[{1948, 947}], 
           LineBox[{1949, 948}], 
           LineBox[{1950, 949}], 
           LineBox[{1951, 950}], 
           LineBox[{1952, 951}], 
           LineBox[{1953, 952}], 
           LineBox[{1954, 953}], 
           LineBox[{1955, 954}], 
           LineBox[{1956, 955}], 
           LineBox[{1957, 956}], 
           LineBox[{1958, 957}], 
           LineBox[{1959, 958}], 
           LineBox[{1960, 959}], 
           LineBox[{1961, 960}], 
           LineBox[{1962, 961}], 
           LineBox[{1963, 962}], 
           LineBox[{1964, 963}], 
           LineBox[{1965, 964}], 
           LineBox[{1966, 965}], 
           LineBox[{1967, 966}], 
           LineBox[{1968, 967}], 
           LineBox[{1969, 968}], 
           LineBox[{1970, 969}], 
           LineBox[{1971, 970}], 
           LineBox[{1972, 971}], 
           LineBox[{1973, 972}], 
           LineBox[{1974, 973}], 
           LineBox[{1975, 974}], 
           LineBox[{1976, 975}], 
           LineBox[{1977, 976}], 
           LineBox[{1978, 977}], 
           LineBox[{1979, 978}], 
           LineBox[{1980, 979}], 
           LineBox[{1981, 980}], 
           LineBox[{1982, 981}], 
           LineBox[{1983, 982}], 
           LineBox[{1984, 983}], 
           LineBox[{1985, 984}], 
           LineBox[{1986, 985}], 
           LineBox[{1987, 986}], 
           LineBox[{1988, 987}], 
           LineBox[{1989, 988}], 
           LineBox[{1990, 989}], 
           LineBox[{1991, 990}], 
           LineBox[{1992, 991}], 
           LineBox[{1993, 992}], 
           LineBox[{1994, 993}], 
           LineBox[{1995, 994}], 
           LineBox[{1996, 995}], 
           LineBox[{1997, 996}], 
           LineBox[{1998, 997}], 
           LineBox[{1999, 998}], 
           LineBox[{2000, 999}], 
           LineBox[{2001, 1000}], 
           LineBox[{2002, 1001}]}}, {{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           PointBox[CompressedData["
1:eJwN00MCJAYAALDp2rZt27Zt27Zt27btcm3btu3mkCckcZOOVTr8EQgEngYN
BM6HDAQucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYN
b3nHez7wkU985gtf+cZ3fvCTX/wmECoQ+IMgBCUYwQlBSEIRmjCEJRzhiUBE
IhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYy
kZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpR
mSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZ
LnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkp
TGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1s
ZRvb2cFOdrGbPexlH3/yF3/zD//yH/s5wEEOcZgjHOUYxznBSU5xmjOc5Rzn
ucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnPecFLXvGaN7zlHe/5
wEc+8ZkvfOUb3/nBT37xm0Bo/wlCUIIRnBCEJBShCUNYwhGeCEQkEpGJQlSi
EZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQTmclCVrKR
nRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpUpBKVqUJVqlGd
GtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSkE53pQle60Z0e
9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnM
ZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexk
F7vZw1728Sd/8Tf/8C//sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5
wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nC
V77xnR/85Be/CYTxnyAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIR
mzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGb
POQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs6
1KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70
pR/9GcBABjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxl
HvNZwEIWsZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf
f/IXf/MP//If+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa17nB
TW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFP
fvGbQFj/CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGf
BCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8C
FKQQhSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0
pBGNaUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96UNf+tGfAQxk
EIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQR
i1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXv4HdKITLA==

            "]]}, {}}}], {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 1001.}, {0, 14.705370084073996`}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 250, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1001.}, {0, 14.705370084073996`}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{}, ImageSize -> {20, 0}, BaselinePosition -> Baseline], 
       "CacheGraphics" -> False], 
      Spacer[20]], 
     GraphicsBox[{{}, 
       GraphicsComplexBox[CompressedData["
1:eJzt1etLU3Ecx/HjtVVoViI+GGmm25prbjpv023fzXmFwsQnliUkERKmaJmz
aQpeKbIoA2t2A41oPkhNl5pKik2zkJSklnYRNAlEsyQWaCf87sH50p/ggcPh
tTfnPBh8+O09kZd20plhmJvs/e+5cS1pvvV48ESH5jT4A7TKbl0MLHaYB558
nxWj3WEvEOoLpU2z82hvqJuW8o2pC2hfGOlOb0k5/x3NB8ZP3Dg3sIj2B7mH
uSvL/Qc6AMqC75a2Dq+iAyGoNteYbGZgwwIo0vrZt7fsQougojWk8HJbEFoM
apX1VGW2C1oC9Q3H38j9fuP3pLAa3Sd2G/yFloFr5+GiYJkdLYfp3McFD2fc
8P1QyM6o0gtyDqDDQNM8WtKzuAOtAFVY6mTlgz/4fjh4jC2r20uX0RFwbMF9
d0a+4/+IhA+fOlzbv86io6Dw7MzgHc1ndDTMSMZzFJk2tBLWqlIsU3VT6BjY
0twlMTdMomNBXfbF7Bz7Fq2CfTrFJWXaOFoNUz/7fJTFr9EaGK4VMOfGRtEA
EukZd0OVdcPlAJnV/blu9cPYtfAyvyBr8f0Qdi3Ultx/dPvIIHYdXLF5irby
XmDXAeNprPa1DWCPA12QU2SIqR97HBgY09EJy3Psemi8cGP+qmsvdj1MmAze
wYZu7PEw9vH0nrydz7DHQ2/2tqh1axf2BDh43cey39SJPQHmayrSR2qeYk+E
a6/yhZK6DuyJIKx3sq03tWNPgjWXGqt2qA17EqykZQhD7U+wJ0PEu7h7yWqH
lxy7cFzAJY/Yi9ib2JeYT+xPHEAcSCwgFhGLiSXEUmIZsZw4lDiMWEEcThxB
HEkcRRxNrCSOIY4lVhGriTXEwHU5MbsPbidm98HtxOw+uJ2Y3Qe3E7P74HZi
dh/cTszug9uJ2X1wOzG7D643z4/N82Pz/Pjf+fEXiETLow==
        "], {{{}, {}, {}, {}, {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.3]], 
           LineBox[{51, 1}], 
           LineBox[{52, 2}], 
           LineBox[{53, 3}], 
           LineBox[{54, 4}], 
           LineBox[{55, 5}], 
           LineBox[{56, 6}], 
           LineBox[{57, 7}], 
           LineBox[{58, 8}], 
           LineBox[{59, 9}], 
           LineBox[{60, 10}], 
           LineBox[{61, 11}], 
           LineBox[{62, 12}], 
           LineBox[{63, 13}], 
           LineBox[{64, 14}], 
           LineBox[{65, 15}], 
           LineBox[{66, 16}], 
           LineBox[{67, 17}], 
           LineBox[{68, 18}], 
           LineBox[{69, 19}], 
           LineBox[{70, 20}], 
           LineBox[{71, 21}], 
           LineBox[{72, 22}], 
           LineBox[{73, 23}], 
           LineBox[{74, 24}], 
           LineBox[{75, 25}], 
           LineBox[{76, 26}], 
           LineBox[{77, 27}], 
           LineBox[{78, 28}], 
           LineBox[{79, 29}], 
           LineBox[{80, 30}], 
           LineBox[{81, 31}], 
           LineBox[{82, 32}], 
           LineBox[{83, 33}], 
           LineBox[{84, 34}], 
           LineBox[{85, 35}], 
           LineBox[{86, 36}], 
           LineBox[{87, 37}], 
           LineBox[{88, 38}], 
           LineBox[{89, 39}], 
           LineBox[{90, 40}], 
           LineBox[{91, 41}], 
           LineBox[{92, 42}], 
           LineBox[{93, 43}], 
           LineBox[{94, 44}], 
           LineBox[{95, 45}], 
           LineBox[{96, 46}], 
           LineBox[{97, 47}], 
           LineBox[{98, 48}], 
           LineBox[{99, 49}], 
           LineBox[{100, 50}]}}, {{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.011000000000000001`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 
            150}]}, {}}}], {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 50.}, {0, 14.705370084073996`}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 250, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 50.}, {0, 14.705370084073996`}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}, "RowDefault"], 
   "\"The Fourier transform (spectrum) of the sinusoidal signal shows peaks \
at each of the two frequencies\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> {FontFamily -> "Ariel", FontSize -> 13}, 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"Ariel\""}], ",", 
             RowBox[{"FontSize", "\[Rule]", "13"}]}], "}"}]}]}], 
     "]"}]& )]], "Output",ExpressionUUID->"7ba238b3-e6ff-484a-90af-\
39b0cc0a44bd"]
}, {2}]],

Cell["\<\
Here is the same idea done more generally to give an idea of how things \
change as the parameters of the signal change.\
\>", "Text",
 CellChangeTimes->{{3.541167871818453*^9, 3.541167902509573*^9}, {
   3.541203724813911*^9, 3.5412037254108353`*^9}, 
   3.542928396376462*^9},ExpressionUUID->"ba90e2b3-711f-406c-b377-\
ed8612c037a8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelFFT2Sines", "=", 
   "\"\<The Fourier transform (spectrum) of the dual sinusoidal signal shows \
peaks at each of the two frequencies\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoFFT2Sines", "=", 
   "\"\<The signal (top left) is a sum of two sinusoids with frequencies \
speciied by the two sliders. The third slider controls the relative amplitude \
of the  two sines.\\n\\nThe top right shows the analytical solution of the \
Fourier transform. While interesting enough, this is probably the last time \
we will look at this kind of thing. (So it's probably best just to ignore \
it).\\n\\nThe bottom left shows the FFT of the sampled signal (i.e., the \
magnitude spectrum). It's hard to see because all the useful information is \
squished to the left. There's also a mirror image of the information on the \
right. For technical reasons (see the notebook 'inside Fourier transforms' if \
this interests you) this is always present. But since it's just a copy of the \
low frequency information, it's reasonable to ignore the right half of the \
spectrum. \\n\\nThe bottom right figure zooms into the spectrum. \\n\\nThe \
peaks of the spectrum show the frequencies of the sinusoids.\\n\\nChange the \
frequencies; observe how the peaks in the spectrum move left and right as a \
result. \\n\\nChange the amplitude of the sines; observe how the height of \
the peaks changes in response.\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sampF", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"fSins", "[", 
        RowBox[{"t", ",", "f1", ",", "f2", ",", "a"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1", ",", 
         RowBox[{"1", "/", "1000"}]}], "}"}]}], "]"}]}], ";", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"fSins", "[", 
             RowBox[{"t", ",", "f1", ",", "f2", ",", "a"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{"FourierTransform", "[", 
           RowBox[{
            RowBox[{"fSins", "[", 
             RowBox[{"t", ",", "f1", ",", "f2", ",", "a"}], "]"}], ",", "t", 
            ",", "\[Omega]"}], "]"}]}], "}"}], ",", "\n", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"Fourier", "[", "sampF", "]"}], "]"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<Fourier Transform\>\""}]}], 
           "]"}], ",", 
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Fourier", "[", "sampF", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", "50"}], "]"}], "]"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
            RowBox[{
            "PlotLabel", "\[Rule]", "\"\<zoom into Fourier Transform\>\""}]}],
            "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "17.2", ",", "\"\<frequency of first sinusoid\>\""}],
       "}"}], ",", "1", ",", "50", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "f2", ",", "10.7", ",", "\"\<frequency of second sinusoid\>\""}], "}"}],
      ",", "1", ",", "50", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "0.8", ",", "\"\<relative amplitude\>\""}], "}"}],
          ",", "0", ",", "2", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoFFT2Sines", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelFFT2Sines", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"f1", ",", "f2", ",", "a"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
   RowBox[{"Initialization", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"fSins", "[", 
       RowBox[{"t_", ",", "\[Omega]1_", ",", "\[Omega]2_", ",", "a_"}], "]"}],
       ":=", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "Pi", " ", "\[Omega]1", " ", "t"}], "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "Pi", " ", "\[Omega]2", " ", "t"}], "]"}]}]}]}], 
     ")"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.541164038991859*^9, 3.541164069001577*^9}, {
   3.541164099160351*^9, 3.541164238384246*^9}, {3.541167632981131*^9, 
   3.541167639663824*^9}, {3.541167672378126*^9, 3.541167710054619*^9}, {
   3.541167748112186*^9, 3.541167856462541*^9}, {3.541247544548922*^9, 
   3.5412475465396976`*^9}, {3.541250042648484*^9, 3.54125008567957*^9}, {
   3.5412749569307737`*^9, 3.541274979617384*^9}, {3.543231413727541*^9, 
   3.543231425232707*^9}, 3.5436113280458117`*^9, 3.54862830839447*^9, {
   3.5504287850137167`*^9, 3.550428785622851*^9}, {3.551382258663953*^9, 
   3.551382282714593*^9}, {3.551382330753662*^9, 3.551382357019902*^9}, {
   3.552604054813635*^9, 3.552604113663086*^9}, {3.553097772992805*^9, 
   3.553097773958384*^9}, {3.553101194252383*^9, 3.553101208666668*^9}, {
   3.553101294219059*^9, 3.5531013220174017`*^9}, {3.5531013552311897`*^9, 
   3.5531016819429083`*^9}, {3.553101716724905*^9, 3.553101804190896*^9}, {
   3.553101841208972*^9, 3.553102001393173*^9}, {3.5531020648491707`*^9, 
   3.55310214198915*^9}, {3.55310218754814*^9, 3.553102212834154*^9}, {
   3.5531234616504507`*^9, 3.5531235088726397`*^9}, {3.553208227440914*^9, 
   3.553208245692522*^9}},
 CellTags->
  "labelFFT2Sines",ExpressionUUID->"8249067d-ec5a-4c3f-88ff-e8425d9fe632"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.8, $CellContext`f1$$ = 
    17.2, $CellContext`f2$$ = 10.7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`f1$$], 17.2, "frequency of first sinusoid"}, 1, 
      50}, {{
       Hold[$CellContext`f2$$], 10.7, "frequency of second sinusoid"}, 1, 
      50}, {{
       Hold[$CellContext`a$$], 0.8, "relative amplitude"}, 0, 2}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "The signal (top left) is a sum of two sinusoids with frequencies \
speciied by the two sliders. The third slider controls the relative amplitude \
of the  two sines.\n\nThe top right shows the analytical solution of the \
Fourier transform. While interesting enough, this is probably the last time \
we will look at this kind of thing. (So it's probably best just to ignore \
it).\n\nThe bottom left shows the FFT of the sampled signal (i.e., the \
magnitude spectrum). It's hard to see because all the useful information is \
squished to the left. There's also a mirror image of the information on the \
right. For technical reasons (see the notebook 'inside Fourier transforms' if \
this interests you) this is always present. But since it's just a copy of the \
low frequency information, it's reasonable to ignore the right half of the \
spectrum. \n\nThe bottom right figure zooms into the spectrum. \n\nThe peaks \
of the spectrum show the frequencies of the sinusoids.\n\nChange the \
frequencies; observe how the peaks in the spectrum move left and right as a \
result. \n\nChange the amplitude of the sines; observe how the height of the \
peaks changes in response.", WindowTitle -> "Notes", WindowFloating -> True]],
           Appearance -> None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    750., {45., 50.771144278606954`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`f1$1093800$$ = 0, $CellContext`f2$1093801$$ = 
    0, $CellContext`a$1093802$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.8, $CellContext`f1$$ = 
        17.2, $CellContext`f2$$ = 10.7}, "ControllerVariables" :> {
        Hold[$CellContext`f1$$, $CellContext`f1$1093800$$, 0], 
        Hold[$CellContext`f2$$, $CellContext`f2$1093801$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$1093802$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`sampF = Table[
          $CellContext`fSins[$CellContext`t, $CellContext`f1$$, \
$CellContext`f2$$, $CellContext`a$$], {$CellContext`t, 0, 1, 1/1000}]; 
       GraphicsGrid[{{
           Plot[
            $CellContext`fSins[$CellContext`t, $CellContext`f1$$, \
$CellContext`f2$$, $CellContext`a$$], {$CellContext`t, 0, 1}], 
           FourierTransform[
            $CellContext`fSins[$CellContext`t, $CellContext`f1$$, \
$CellContext`f2$$, $CellContext`a$$], $CellContext`t, \
$CellContext`\[Omega]]}, {
           ListPlot[
            Abs[
             Fourier[$CellContext`sampF]], PlotRange -> All, Filling -> Axis, 
            PlotLabel -> "Fourier Transform"], 
           ListPlot[
            Part[
             Abs[
              Fourier[$CellContext`sampF]], 
             Span[2, 50]], PlotRange -> All, Filling -> Axis, PlotLabel -> 
            "zoom into Fourier Transform"]}}, ImageSize -> 600]), 
      "Specifications" :> {{{$CellContext`f1$$, 17.2, 
          "frequency of first sinusoid"}, 1, 50, Appearance -> 
         "Labeled"}, {{$CellContext`f2$$, 10.7, 
          "frequency of second sinusoid"}, 1, 50, Appearance -> 
         "Labeled"}, {{$CellContext`a$$, 0.8, "relative amplitude"}, 0, 2, 
         Appearance -> "Labeled", ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "The signal (top left) is a sum of two sinusoids with frequencies \
speciied by the two sliders. The third slider controls the relative amplitude \
of the  two sines.\n\nThe top right shows the analytical solution of the \
Fourier transform. While interesting enough, this is probably the last time \
we will look at this kind of thing. (So it's probably best just to ignore \
it).\n\nThe bottom left shows the FFT of the sampled signal (i.e., the \
magnitude spectrum). It's hard to see because all the useful information is \
squished to the left. There's also a mirror image of the information on the \
right. For technical reasons (see the notebook 'inside Fourier transforms' if \
this interests you) this is always present. But since it's just a copy of the \
low frequency information, it's reasonable to ignore the right half of the \
spectrum. \n\nThe bottom right figure zooms into the spectrum. \n\nThe peaks \
of the spectrum show the frequencies of the sinusoids.\n\nChange the \
frequencies; observe how the peaks in the spectrum move left and right as a \
result. \n\nChange the amplitude of the sines; observe how the height of the \
peaks changes in response.", WindowTitle -> "Notes", WindowFloating -> True]],
            Appearance -> None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The Fourier transform (spectrum) of the dual sinusoidal signal \
shows peaks at each of the two frequencies", Medium], 
        TrackedSymbols -> {$CellContext`f1$$, $CellContext`f2$$, \
$CellContext`a$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{808., {137.91754141980783`, 145.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{$CellContext`sampF = CompressedData["
1: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

          "], $CellContext`fSins[
           Pattern[$CellContext`t, 
            Blank[]], 
           Pattern[$CellContext`\[Omega]1, 
            Blank[]], 
           Pattern[$CellContext`\[Omega]2, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]]] := 
         Sin[((2 Pi) $CellContext`\[Omega]1) $CellContext`t] + $CellContext`a 
           Sin[((2 Pi) $CellContext`\[Omega]2) $CellContext`t]}; Null}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelFFT2Sines",ExpressionUUID->"29039de0-1fb4-4f58-8023-54ff12f331f3"]
}, {2}]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s interpret the features of the above figure. Since \
the time period is 1 second, the frequency f1 specifies the number of \
sinusoidal periods over that one second. When f1=17.2, there are exactly 17.2 \
sinusoidal undulations in the plot (turn the amplitude to zero to see it more \
clearly, or change f1 to an integer to make it easier to count). Similarly \
for f2, the frequency shown by the FFT describes the number of sinusoidal \
periods over the time extent of the data. When both occur together, the \
figure says that the best-fit sinusoid to the data has f1 periodic \
undulations over the duration of the signal while the next best-fit sinusoid \
has f2 periodic undulations over the extent of the signal. Moreover, the \
heights of the peaks are significant: the largest peak corresponds to the \
strongest (largest) sinusoid (experiment with this by adjusting the amplitude",
 StyleBox[" ",
  FontSlant->"Italic"],
 "value)."
}], "Text",
 CellChangeTimes->{{3.5530971179912024`*^9, 3.5530971205393143`*^9}, {
  3.553102347611326*^9, 3.553102421246027*^9}, {3.5531025601846333`*^9, 
  3.553102648954945*^9}, {3.5544837747181396`*^9, 
  3.554483775723175*^9}},ExpressionUUID->"789a5dee-0cca-47d7-b659-\
917347f9bf54"],

Cell["\<\
Observe also that the Fourier transform is invertible. The inversion formula \
\
\>", "Text",
 CellChangeTimes->{{3.5441022612825537`*^9, 3.544102284517778*^9}, {
  3.5441024295207653`*^9, 
  3.544102431858078*^9}},ExpressionUUID->"c484a0e2-0342-4942-b1c8-\
6da755e9ca84"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "k", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "N"}], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "0"}], 
        RowBox[{"N", "-", "1"}]], 
       RowBox[{
        SuperscriptBox["e", 
         FractionBox[
          RowBox[{"2", "i", "nk", "\[Pi]"}], "N"]], 
        RowBox[{"X", "[", "n", "]"}], "for", "k"}]}]}], "=", "0"}]}], ",", 
   "1", ",", "...", ",", 
   RowBox[{"N", "-", "1"}]}], TraditionalForm]], "Equation",
 CellChangeTimes->{{3.544102392548264*^9, 3.544102422418253*^9}, {
  3.5448671806281013`*^9, 3.544867189610017*^9}, {3.544871369323228*^9, 
  3.544871370610702*^9}},ExpressionUUID->"ecb8c5a5-dd33-4028-971c-\
11488143165d"],

Cell[TextData[{
 "reverses the role of the time and frequency variables and ensures that the \
transform neither creates nor destroys information. The inversion is most \
simply applied in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " using InverseFourier[ ]. The combination of the transform and its inverse \
can be used to implement any linear filter. The procedure is: (1) take the \
DFT of the signal (2) modify the spectrum  ",
 StyleBox["X",
  FontSlant->"Italic"],
 "[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] (for instance, by setting some terms to zero or weighting some of the \
terms) (3) take the inverse. The resulting output is the filtered signal."
}], "Text",
 CellChangeTimes->{{3.544102436528208*^9, 3.544102474521864*^9}, {
  3.544867227932537*^9, 3.5448673789512997`*^9}, {3.544872370965749*^9, 
  3.544872373214636*^9}},ExpressionUUID->"d2c95317-9ef8-4248-a043-\
d8f974fca809"],

Cell[CellGroupData[{

Cell["The Frequency Response of a Linear System", "Subsection",ExpressionUUID->"6031dd5e-2f86-42fe-9ceb-7c36abc32390"],

Cell[TextData[{
 "The Fourier transform has another important interpretation. The frequency \
response of linear filter W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] is a function of frequency that defines how the spectrum X[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] of the input is changed into the spectrum Y[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] of the output. The frequency response and the impulse response ",
 StyleBox["w",
  FontSlant->"Italic"],
 "[",
 StyleBox["k",
  FontSlant->"Italic"],
 "] (i.e, the kernel of the filter) are intimately related: W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] is the Fourier transform of w[",
 StyleBox["k",
  FontSlant->"Italic"],
 "]. Sometimes W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] is called the transfer function, because W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] = Y[",
 StyleBox["n",
  FontSlant->"Italic"],
 "]/X[",
 StyleBox["n",
  FontSlant->"Italic"],
 "]. Thus at any given frequency (say some value ",
 StyleBox["n*",
  FontSlant->"Italic"],
 "), a sinusoid of frequency ",
 StyleBox["n",
  FontSlant->"Italic"],
 "* in the input has magnitude |X[",
 StyleBox["n",
  FontSlant->"Italic"],
 "*]|. The transfer function has magnitude |W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "*]| and so the output has magnitude Y[",
 StyleBox["n",
  FontSlant->"Italic"],
 "*]=W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "*] X[",
 StyleBox["n",
  FontSlant->"Italic"],
 "*]. This is shown experimentally in the following demonstration. A random \
data set x[",
 StyleBox["k",
  FontSlant->"Italic"],
 "] is generated and it\[CloseCurlyQuote]s spectrum is calculated, as shown \
in green. The impulse response (kernel) of the filter and its spectrum are \
shown in yellow. The action of the filter is the convolution of x and w, \
which is hard to visualize. But the action of the filter in the frequency \
domain is just the point-by-point multiplication of the spectrum X[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] and the frequency response W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "]. Note how when W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] is large, the spectrum of the output wiggles in synchrony with the \
spectrum of the input, when W[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] is small, the same wiggles occur but greatly attenuated. Y[",
 StyleBox["n",
  FontSlant->"Italic"],
 "] is simply the product of the two curves above."
}], "Text",
 CellChangeTimes->{{3.5449038148860703`*^9, 3.54490393491123*^9}, {
   3.544904072282988*^9, 3.5449041300322742`*^9}, {3.54490417565658*^9, 
   3.544904212794004*^9}, {3.544904261161421*^9, 3.544904725022121*^9}, {
   3.544904771218992*^9, 3.544904772590311*^9}, {3.544909472497032*^9, 
   3.544909472999669*^9}, 3.5512990195754213`*^9, {3.554489886849145*^9, 
   3.5544899305410233`*^9}},ExpressionUUID->"7e0c0786-e7ac-458e-8d59-\
08ed5f2033fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelFreqResp", "=", 
   "\"\<Convolution in the time domain is equivalent to multiplication in the \
frequency domain\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoFreqResp", "=", 
   "\"\<The spectra of the same five linear filters (impulse responses) are \
shown here.\\n\\nThe spectrum of the input is calculated using the Fourier[ ] \
command and the spectrum of the impulse response is calculated using the \
freqZ[ ] command (which is itself based on Fourier[ ]).\\n\\nObserve that in \
each case, the point by point product of these two spectra is equal to the \
spectum Y[n] of the output signal y[k].\\n\\nEach time new input data is \
created (with the 'regenerate data' button) the details of the specta of X[n] \
and Y[n] change but the overall shape remains the same.\\n\\nThe frequency \
responses make it easy to name the filters: the impulse responses 1 and 3 \
correspond to frequency responses with a lowpass character. Impulse responses \
2 and 4 correspond to frequency responses with a highpass character and \
impulse response 5 is a kind of bandpass filter.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"numImp", "=", "5"}], ";", 
  RowBox[{"imp", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "numImp"}], "]"}]}], ";", " ", 
  RowBox[{
   RowBox[{"imp", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
  RowBox[{
   RowBox[{"imp", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ",", "1", ",", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], ";", " ", 
  RowBox[{
   RowBox[{"imp", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"imp", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "3"}], ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "3"}], ",", 
     RowBox[{"1", "/", "4"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"imp", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data64", "=", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "64"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"shiftImp", "[", 
    RowBox[{"len_", ",", "pos_", ",", "impRes_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"pos", "-", "1"}]}], "]"}], ",", "impRes", ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"len", "-", "pos", "-", 
         RowBox[{"Length", "[", "impRes", "]"}], "+", "1"}]}], "]"}]}], "}"}],
     "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"impVec", "=", 
     RowBox[{"shiftImp", "[", 
      RowBox[{"64", ",", "30", ",", 
       RowBox[{"imp", "[", 
        RowBox[{"[", "ord", "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"r", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"data64", "=", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "64"}], "]"}]}], ";", 
       
       RowBox[{"r", "=", "0"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"filtOut", "=", 
     RowBox[{"ListConvolve", "[", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"imp", "[", 
         RowBox[{"[", "ord", "]"}], "]"}], "]"}], ",", "data64"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{"data64", ",", 
            RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
            RowBox[{"FillingStyle", "\[Rule]", "Green"}], ",", 
            RowBox[{
            "PlotLabel", "\[Rule]", 
             "\"\<Data \
x[\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)]\>\""}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "3"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "30", "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"freqZ", "[", 
              RowBox[{"data64", ",", "w"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"w", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "3"}]}], ",", 
            RowBox[{
            "PlotLabel", "\[Rule]", 
             "\"\<Spectrum of Data X[\!\(\*StyleBox[\"n\",FontSlant->\"Italic\
\"]\)]\>\""}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{"impVec", ",", 
            RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "darkYellow"}], ",", 
            RowBox[{"FillingStyle", "\[Rule]", "darkYellow"}], ",", 
            RowBox[{
            "PlotLabel", "\[Rule]", 
             "\"\<Impulse Response w[\!\(\*StyleBox[\"k\",FontSlant->\"Italic\
\"]\)]\>\""}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "3"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{
            "PlotLabel", "\[Rule]", 
             "\"\<Impulse Response h[\!\(\*StyleBox[\"i\",FontSlant->\"Italic\
\"]\)]\>\""}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "30", "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"freqZ", "[", 
              RowBox[{
               RowBox[{"imp", "[", 
                RowBox[{"[", "ord", "]"}], "]"}], ",", "w"}], "]"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"w", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "darkYellow"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "3"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{
            "PlotLabel", "\[Rule]", 
             "\"\<Frequency Response \
W[\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)]\>\""}]}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Spacer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{"filtOut", ",", 
            RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
            RowBox[{
            "PlotLabel", "\[Rule]", 
             "\"\<Filtered Output \
y[\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)]\>\""}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "3"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "30", "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"freqZ", "[", 
              RowBox[{"filtOut", ",", "w"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"w", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "3"}]}], ",", 
            RowBox[{
            "PlotLabel", "\[Rule]", 
             "\"\<Spectrum of Output \
Y[\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)]\>\""}]}], "]"}]}], "}"}], 
        "]"}]}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Regenerate Data\>\"", ",", 
            RowBox[{"r", "=", "1"}]}], "]"}], "&"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ord", ",", "1", ",", "\"\<impulse response\>\""}], "}"}], 
         ",", 
         RowBox[{"Range", "[", "numImp", "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "\"\<PopupMenu\>\""}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoFreqResp", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelFreqResp", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"r", ",", "ord"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.544746563279542*^9, {3.54474659751161*^9, 3.5447467293640623`*^9}, {
   3.5447467603392*^9, 3.5447469129209948`*^9}, {3.544746956841428*^9, 
   3.5447469648253107`*^9}, {3.544747033206106*^9, 3.544747035980565*^9}, {
   3.544747093526887*^9, 3.544747204826446*^9}, {3.5447485817928753`*^9, 
   3.544748583767424*^9}, {3.544749219007897*^9, 3.5447492227337093`*^9}, {
   3.544749260103099*^9, 3.544749276029009*^9}, {3.5447494136946573`*^9, 
   3.544749422704204*^9}, {3.544749470181374*^9, 3.544749678418689*^9}, {
   3.544749756288519*^9, 3.544749768984173*^9}, {3.544749832533058*^9, 
   3.544749874792048*^9}, {3.544749941328972*^9, 3.5447499438958693`*^9}, {
   3.5447500040521393`*^9, 3.544750065186854*^9}, {3.54475010095597*^9, 
   3.544750105633027*^9}, {3.5447501409578733`*^9, 3.544750176092183*^9}, {
   3.544750249626089*^9, 3.5447502502397137`*^9}, 3.54475032052223*^9, {
   3.544750361571981*^9, 3.544750417092763*^9}, {3.544750467758992*^9, 
   3.5447504723177557`*^9}, {3.544750512441931*^9, 3.544750576326635*^9}, {
   3.544750624490079*^9, 3.5447506293072453`*^9}, {3.544792247291671*^9, 
   3.544792283494234*^9}, {3.5447923359198236`*^9, 3.5447924041569366`*^9}, {
   3.544792450353484*^9, 3.54479247078871*^9}, {3.5447926355390472`*^9, 
   3.544792643491571*^9}, {3.5447926937020273`*^9, 3.544792763942955*^9}, {
   3.544792811190629*^9, 3.544792827407736*^9}, {3.5447930962259417`*^9, 
   3.544793108950932*^9}, {3.5447938775270576`*^9, 3.5447939041280003`*^9}, {
   3.544793940645627*^9, 3.544793969079598*^9}, {3.544794013786282*^9, 
   3.5447940512995663`*^9}, {3.544794443054632*^9, 3.544794484183403*^9}, {
   3.5447947448287897`*^9, 3.544794854978395*^9}, {3.5447952334794703`*^9, 
   3.544795302339669*^9}, {3.544795499794417*^9, 3.5447955046722307`*^9}, {
   3.544795536258151*^9, 3.5447955468670473`*^9}, {3.544795613174613*^9, 
   3.544795622910515*^9}, {3.5448996235328074`*^9, 3.544899625346458*^9}, {
   3.544899683815381*^9, 3.54490004803925*^9}, {3.544900095212369*^9, 
   3.544900124474011*^9}, {3.544900206205447*^9, 3.544900276701688*^9}, {
   3.544900352498013*^9, 3.544900427720476*^9}, {3.544900620319148*^9, 
   3.5449006704477777`*^9}, {3.54490077005823*^9, 3.544900780360529*^9}, {
   3.544900833807971*^9, 3.5449008669741993`*^9}, {3.5449009053943443`*^9, 
   3.5449009464647903`*^9}, {3.5449009794423847`*^9, 3.544900982444394*^9}, {
   3.544901136638443*^9, 3.544901176084906*^9}, {3.544901208503594*^9, 
   3.544901213032537*^9}, {3.544901274072613*^9, 3.544901292247225*^9}, {
   3.544901324922542*^9, 3.5449013307131767`*^9}, {3.54490397342062*^9, 
   3.544903973739327*^9}, {3.544904017941432*^9, 3.544904029737619*^9}, {
   3.544905038235709*^9, 3.5449050588736477`*^9}, {3.54490872053843*^9, 
   3.5449087665922327`*^9}, {3.544908832510365*^9, 3.544908892347904*^9}, {
   3.544909021216481*^9, 3.5449090228323936`*^9}, 3.548626199269415*^9, {
   3.550337244746895*^9, 3.550337247226411*^9}, {3.5512908983980427`*^9, 
   3.551290904195951*^9}, {3.551290982084038*^9, 3.551291000271748*^9}, {
   3.5512912514356613`*^9, 3.551291251985209*^9}, {3.552584680555594*^9, 
   3.5525847524455223`*^9}, {3.552596348387558*^9, 3.552596366842084*^9}, {
   3.552732200303689*^9, 3.55273238277168*^9}, {3.5527324133640347`*^9, 
   3.552732424990572*^9}, {3.552732464340971*^9, 3.5527326640020723`*^9}, {
   3.5527327244679193`*^9, 3.552732819472251*^9}, {3.552946149088071*^9, 
   3.552946151152006*^9}},
 CellTags->
  "labelFreqResp",ExpressionUUID->"e6080fd8-3ea1-46f0-bbd6-18151d8e6232"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ord$$ = 1, $CellContext`r$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`r$$], 1, ""}, 
      Dynamic[Button["Regenerate Data", $CellContext`r$$ = 1]& ]}, {{
       Hold[$CellContext`ord$$], 1, "impulse response"}, {1, 2, 3, 4, 5}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Manipulate`Place[2], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "The spectra of the same five linear filters (impulse responses) \
are shown here.\n\nThe spectrum of the input is calculated using the Fourier[ \
] command and the spectrum of the impulse response is calculated using the \
freqZ[ ] command (which is itself based on Fourier[ ]).\n\nObserve that in \
each case, the point by point product of these two spectra is equal to the \
spectum Y[n] of the output signal y[k].\n\nEach time new input data is \
created (with the 'regenerate data' button) the details of the specta of X[n] \
and Y[n] change but the overall shape remains the same.\n\nThe frequency \
responses make it easy to name the filters: the impulse responses 1 and 3 \
correspond to frequency responses with a lowpass character. Impulse responses \
2 and 4 correspond to frequency responses with a highpass character and \
impulse response 5 is a kind of bandpass filter.", WindowTitle -> "Notes", 
            WindowFloating -> True]], Appearance -> None, BaseStyle -> {}, 
          DefaultBaseStyle -> {}]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {788., {251.193115234375, 257.806884765625}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`ord$1094045$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`ord$$ = 1, $CellContext`r$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`ord$$, $CellContext`ord$1094045$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`impVec = $CellContext`shiftImp[64, 30, 
          Part[$CellContext`imp, $CellContext`ord$$]]; 
       If[$CellContext`r$$ == 
         1, $CellContext`data64 = RandomChoice[{-1, 1}, 64]; $CellContext`r$$ = 
          0]; $CellContext`filtOut = ListConvolve[
          Reverse[
           Part[$CellContext`imp, $CellContext`ord$$]], $CellContext`data64]; 
       Column[{
          Row[{
            
            ListPlot[$CellContext`data64, Filling -> Axis, PlotStyle -> Green,
              FillingStyle -> Green, PlotLabel -> 
             "Data x[\!\(\*\nStyleBox[\"k\",\nFontSlant->\"Italic\"]\)]", 
             AspectRatio -> 1/3, ImageSize -> 300], 
            Spacer[30], 
            Plot[
             Abs[
              $CellContext`freqZ[$CellContext`data64, $CellContext`w]], \
{$CellContext`w, -1, 1}, ImageSize -> 300, PlotStyle -> Green, AspectRatio -> 
             1/3, PlotLabel -> 
             "Spectrum of Data X[\!\(\*\nStyleBox[\"n\",\nFontSlant->\"Italic\
\"]\)]"]}], 
          Spacer[10], 
          Row[{
            
            ListPlot[$CellContext`impVec, Filling -> Axis, 
             PlotStyle -> $CellContext`darkYellow, 
             FillingStyle -> $CellContext`darkYellow, PlotLabel -> 
             "Impulse Response w[\!\(\*\nStyleBox[\"k\",\nFontSlant->\"Italic\
\"]\)]", AspectRatio -> 1/3, ImageSize -> 300, PlotLabel -> 
             "Impulse Response h[\!\(\*\nStyleBox[\"i\",\nFontSlant->\"Italic\
\"]\)]"], 
            Spacer[30], 
            Plot[
             Abs[
              $CellContext`freqZ[
               
               Part[$CellContext`imp, $CellContext`ord$$], $CellContext`w]], \
{$CellContext`w, -1, 1}, ImageSize -> 300, 
             PlotStyle -> $CellContext`darkYellow, AspectRatio -> 1/3, 
             PlotRange -> All, PlotLabel -> 
             "Frequency Response W[\!\(\*\nStyleBox[\"n\",\n\
FontSlant->\"Italic\"]\)]"]}], 
          Spacer[10], 
          Row[{
            
            ListPlot[$CellContext`filtOut, Filling -> Axis, PlotStyle -> Blue,
              PlotLabel -> 
             "Filtered Output y[\!\(\*\nStyleBox[\"k\",\n\
FontSlant->\"Italic\"]\)]", AspectRatio -> 1/3, ImageSize -> 300], 
            Spacer[30], 
            Plot[
             Abs[
              $CellContext`freqZ[$CellContext`filtOut, $CellContext`w]], \
{$CellContext`w, -1, 1}, ImageSize -> 300, PlotRange -> All, PlotStyle -> 
             Blue, AspectRatio -> 1/3, PlotLabel -> 
             "Spectrum of Output Y[\!\(\*\nStyleBox[\"n\",\n\
FontSlant->\"Italic\"]\)]"]}]}]), 
      "Specifications" :> {{{$CellContext`r$$, 1, ""}, 
         Dynamic[Button["Regenerate Data", $CellContext`r$$ = 1]& ], 
         ControlPlacement -> 
         1}, {{$CellContext`ord$$, 1, "impulse response"}, {1, 2, 3, 4, 5}, 
         ControlType -> "PopupMenu", ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Manipulate`Place[2], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "The spectra of the same five linear filters (impulse responses) \
are shown here.\n\nThe spectrum of the input is calculated using the Fourier[ \
] command and the spectrum of the impulse response is calculated using the \
freqZ[ ] command (which is itself based on Fourier[ ]).\n\nObserve that in \
each case, the point by point product of these two spectra is equal to the \
spectum Y[n] of the output signal y[k].\n\nEach time new input data is \
created (with the 'regenerate data' button) the details of the specta of X[n] \
and Y[n] change but the overall shape remains the same.\n\nThe frequency \
responses make it easy to name the filters: the impulse responses 1 and 3 \
correspond to frequency responses with a lowpass character. Impulse responses \
2 and 4 correspond to frequency responses with a highpass character and \
impulse response 5 is a kind of bandpass filter.", WindowTitle -> "Notes", 
             WindowFloating -> True]], Appearance -> None, BaseStyle -> {}, 
           DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["Convolution in the time domain is equivalent to multiplication \
in the frequency domain", Medium], 
        TrackedSymbols -> {$CellContext`r$$, $CellContext`ord$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{846., {318.91754141980783`, 326.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`shiftImp[
         Pattern[$CellContext`len, 
          Blank[]], 
         Pattern[$CellContext`pos, 
          Blank[]], 
         Pattern[$CellContext`impRes, 
          Blank[]]] := Flatten[{
          ConstantArray[0, $CellContext`pos - 1], $CellContext`impRes, 
          ConstantArray[
          0, $CellContext`len - $CellContext`pos - 
           Length[$CellContext`impRes] + 1]}], $CellContext`imp = {{1, 1, 
         1}, {(-1)/2, 1, (-1)/2}, {1, 1, 1, 1, 1}, {
         1/4, (-1)/3, 1/2, -1, 1/2, (-1)/3, 1/4}, {
         1, 1/2, -2, 1/2, 1}}, $CellContext`data64 = {-1, 1, -1, -1, 1, 1, -1,
         1, -1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,
         1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 
        1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 
        1, -1, -1, 1, -1, -1}, $CellContext`freqZ[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`\[Omega], 
          Blank[]]] := 
       Sum[Part[$CellContext`x, $CellContext`i + 1] 
         Exp[(((-I) 
             Pi) $CellContext`\[Omega]) $CellContext`i], {$CellContext`i, 0, 
          Length[$CellContext`x] - 1}], $CellContext`darkYellow = 
       RGBColor[0.85, 0.85, 0]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelFreqResp",ExpressionUUID->"a600d266-dcd2-4aee-ab41-ecdc17ff71d5"]
}, {2}]],

Cell["\<\
This observation is important for two reasons. First, it allows us to talk \
about the action of a filter in concrete terms: a low pass filter is one that \
passes low frequencies and attenuates high frequencies, a bandpass filter is \
one that passes a range of frequencies and attenuates others, etc. The \
character of the filter can be seen directly from the shape of the frequency \
response. Second, the equivalence of the left hand column and the right hand \
column of the above figure means that the filtering operation can be \
accomplished (if desired) purely in the time domain, or purely in the \
frequency domain, whichever is more convenient. And often it is easiest to \
flip back and forth between the two domains.\
\>", "Text",
 CellChangeTimes->{{3.544904788830495*^9, 3.5449049660586433`*^9}, {
  3.544909004238028*^9, 
  3.54490900485086*^9}},ExpressionUUID->"765028a6-43c3-4154-9a8e-\
eb16fbf159df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fourier Transform in Two DImensions", "Subsection",
 CellChangeTimes->{{3.5448051536219683`*^9, 3.544805163212566*^9}, 
   3.544872404455518*^9},ExpressionUUID->"6fc7af3c-e470-414c-b4d5-\
8ff988c12f19"],

Cell[TextData[{
 "Suppose x[",
 StyleBox["i,j",
  FontSlant->"Italic"],
 "] is a two-dimensional signal such as an image where ",
 StyleBox["i",
  FontSlant->"Italic"],
 "=1, 2, ... ",
 StyleBox["Ni",
  FontSlant->"Italic"],
 " and ",
 StyleBox["j",
  FontSlant->"Italic"],
 "=1, 2, ... ",
 StyleBox["Nj",
  FontSlant->"Italic"],
 ". The Discrete Fourier Transform (DFT) is defined to be"
}], "Text",
 CellChangeTimes->{{3.544825883738608*^9, 3.544825973816877*^9}, {
  3.544826011314049*^9, 3.544826015362114*^9}, {3.5448703180172586`*^9, 
  3.5448703246334753`*^9}},ExpressionUUID->"09c7fb40-805b-4cfe-8170-\
e57b7cf08376"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"s_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], 
     RowBox[{"Ni", "-", "1"}]], "  ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "0"}], 
      RowBox[{"Nj", "-", "1"}]], " ", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", 
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "2", " ", "Pi", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"s", " ", 
           RowBox[{"i", "/", "Ni"}]}], " ", "+", 
          RowBox[{"t", " ", 
           RowBox[{"j", "/", "Nj"}]}]}], ")"}]}]]}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.54482584059013*^9, 3.544825857650773*^9}, {
  3.544825985755497*^9, 
  3.544826071470964*^9}},ExpressionUUID->"dcec6684-e469-40a4-b528-\
428fb94be3b9"],

Cell[TextData[{
 "where ",
 StyleBox["s",
  FontSlant->"Italic"],
 " and ",
 StyleBox["t",
  FontSlant->"Italic"],
 " range over ",
 StyleBox["Ni",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Nj",
  FontSlant->"Italic"],
 " respectively. Observe that this is really just two independent copies of \
the one-dimensional definition. For example, suppose the signal x is"
}], "Text",
 CellChangeTimes->{{3.5448260479327793`*^9, 3.544826086419629*^9}, {
  3.5448261283988953`*^9, 3.544826136364749*^9}, {3.544826495574394*^9, 
  3.544826514406694*^9}},ExpressionUUID->"9a385ade-97e4-4f3d-8d25-\
aa31d49d2c72"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Ni", ",", "Nj"}], "}"}], "=", 
   RowBox[{"Dimensions", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.5448261392059298`*^9, 3.544826171030589*^9}, {
  3.54482652574686*^9, 3.544826526728408*^9}, {3.544826589428803*^9, 
  3.544826608420125*^9}, {3.544827922293228*^9, 
  3.54482792243552*^9}},ExpressionUUID->"5f013f9f-4ffa-47f5-89fa-\
e288c17bc97b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.7158493452341832`", "0.34042039165284077`", "0.7873282397316677`", 
      "0.8928240454959488`", "0.7534889161822753`", "0.2990000212729458`"},
     {"0.8110255916810125`", "0.24030441424889193`", "0.3310943827108779`", 
      "0.27657895795907605`", "0.34110024558261354`", "0.3323180596424913`"},
     {"0.8512805228031517`", "0.4388267953566771`", "0.25860297449052405`", 
      "0.4813105671423492`", "0.015320955231584499`", 
      "0.0016883890297392234`"},
     {"0.886514463784261`", "0.5616027206275951`", "0.7004219667630172`", 
      "0.6927410285179791`", "0.5597669828777541`", "0.877021110826242`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",ExpressionUUID->"4afb722b-0098-4f63-\
b524-479351ecf7d3"]
}, {2}]],

Cell[TextData[{
 "Then for each ",
 StyleBox["s",
  FontSlant->"Italic"],
 " and ",
 StyleBox["t",
  FontSlant->"Italic"],
 ", the DFT of x is X[",
 StyleBox["s",
  FontSlant->"Italic"],
 ",",
 StyleBox["t",
  FontSlant->"Italic"],
 "] as given by the formula above. One way to calculate this directly:"
}], "Text",
 CellChangeTimes->{{3.5448261790326357`*^9, 3.544826183805881*^9}, {
  3.544826230373641*^9, 
  3.5448262621267433`*^9}},ExpressionUUID->"802d3b89-4f43-452a-bd53-\
6157684ab8cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"X", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", 
      RowBox[{"Ni", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"Nj", "-", "1"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.544826198379941*^9, 3.544826226688467*^9}, {
  3.5448262653855743`*^9, 
  3.544826300137032*^9}},ExpressionUUID->"41e0c955-3a49-4626-ae82-\
d95522085b9e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"12.4464310888457`", 
      RowBox[{"0.5932439439308107`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.41473714527632477`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"2.188971239504095`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2915420158890625`", " ", "\[ImaginaryI]"}]}], 
      "1.5771580853001461`", 
      RowBox[{"2.188971239504095`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2915420158890625`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5932439439308107`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.41473714527632477`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"1.7418807555158353`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.9456466215718842`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.1439367184287152`"}], "+", 
       RowBox[{"0.3224148866393174`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.7807672315553567`"}], "-", 
       RowBox[{"0.0740277200484542`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5210433417298961`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.6186802346708287`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.1328666216065843`"}], "-", 
       RowBox[{"0.3966660735369762`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.0179405910688843`"}], "-", 
       RowBox[{"0.7257542473354526`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"-", "0.7745487615979236`"}], 
      RowBox[{
       RowBox[{"-", "0.942058921456584`"}], "-", 
       RowBox[{"0.8941392159936621`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.7988810388989195`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.6404418859475635`", " ", "\[ImaginaryI]"}]}], 
      "0.2784434021456248`", 
      RowBox[{"0.7988810388989195`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6404418859475635`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.942058921456584`"}], "+", 
       RowBox[{"0.8941392159936621`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"1.7418807555158353`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.9456466215718842`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.0179405910688843`"}], "+", 
       RowBox[{"0.7257542473354526`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.1328666216065843`"}], "+", 
       RowBox[{"0.3966660735369762`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5210433417298961`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6186802346708287`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.7807672315553567`"}], "+", 
       RowBox[{"0.0740277200484542`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.1439367184287152`"}], "-", 
       RowBox[{"0.3224148866393174`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",ExpressionUUID->"34f4ddb0-1d92-4058-\
be04-e4bd3f9e84f3"]
}, {2}]],

Cell["\<\
Another (easier) way is to use the built-in function Fourier[ ]\
\>", "Text",
 CellChangeTimes->{{3.544826375310001*^9, 3.544826397425468*^9}, {
  3.544826616027687*^9, 
  3.544826617122959*^9}},ExpressionUUID->"73f28107-8b73-4a7a-8651-\
326d6e80c26d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xfx", "=", 
   RowBox[{"Fourier", "[", 
    RowBox[{"x", ",", 
     RowBox[{"FourierParameters", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Xfx", "]"}]}], "Input",
 CellChangeTimes->{{3.54482641183016*^9, 3.5448264223155203`*^9}, {
  3.544827988497341*^9, 3.5448280014017353`*^9}, {3.544828151727916*^9, 
  3.544828161830995*^9}, {3.544828250650735*^9, 
  3.544828280202012*^9}},ExpressionUUID->"71750893-299f-47b6-a5d3-\
6687068f377c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"12.4464310888457`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5932439439308097`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.4147371452763246`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"2.188971239504093`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2915420158890624`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.5771580853001461`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"2.188971239504093`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2915420158890624`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5932439439308097`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.4147371452763246`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"1.7418807555158358`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.9456466215718855`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.1439367184287157`"}], "+", 
       RowBox[{"0.32241488663931717`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.7807672315553572`"}], "-", 
       RowBox[{"0.07402772004845437`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5210433417298961`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.6186802346708287`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.13286662160658513`"}], "-", 
       RowBox[{"0.39666607353697614`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.0179405910688848`"}], "-", 
       RowBox[{"0.7257542473354522`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.7745487615979245`"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.9420589214565847`"}], "-", 
       RowBox[{"0.8941392159936621`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.7988810388989185`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.6404418859475633`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.2784434021456248`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.7988810388989185`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6404418859475633`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.9420589214565847`"}], "+", 
       RowBox[{"0.8941392159936621`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"1.7418807555158358`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.9456466215718855`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.0179405910688848`"}], "+", 
       RowBox[{"0.7257542473354522`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.13286662160658513`"}], "+", 
       RowBox[{"0.39666607353697614`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5210433417298961`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6186802346708287`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.7807672315553572`"}], "+", 
       RowBox[{"0.07402772004845437`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.1439367184287157`"}], "-", 
       RowBox[{"0.32241488663931717`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",ExpressionUUID->"7e6da2a3-5733-41aa-\
b3cc-becb177df881"]
}, {2}]],

Cell["\<\
which is the same (except for some rounding issues). Since the DFT is complex \
valued, it is common to plot it as two images, one for the magnitude and one \
for the phase. \
\>", "Text",
 CellChangeTimes->{{3.544826426743656*^9, 3.544826472378871*^9}, {
  3.544826550179613*^9, 3.54482656572332*^9}, {3.544826644526115*^9, 
  3.544826645189726*^9}, {3.544827952672592*^9, 3.54482797868766*^9}, {
  3.54482826043252*^9, 
  3.544828272992804*^9}},ExpressionUUID->"1fd78623-0cf2-4de1-8d5a-\
a670a83c13bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ArrayPlot", "[", 
        RowBox[{"Abs", "[", "Xfx", "]"}], "]"}], ",", 
       RowBox[{"ArrayPlot", "[", 
        RowBox[{"Arg", "[", "Xfx", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
   "\"\<Plotting the magnitude and phase of the DFT as two grayscale images\>\
\"", ",", 
   RowBox[{"LabelStyle", "\[Rule]", "captionStyle"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.54482801277824*^9, 3.544828079099267*^9}, {
  3.544828132702623*^9, 3.544828144518935*^9}, {3.544828285522562*^9, 
  3.544828293874495*^9}, {3.5512905888696747`*^9, 
  3.5512906552730637`*^9}},ExpressionUUID->"2628d6cb-729b-4560-9dd4-\
9347340bf70f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{
       InsetBox[
        GraphicsBox[
         RasterBox[{{9.83497759654098, 11.196262190467916`, 
          12.028104048084062`, 11.637573006897197`, 11.662162274467498`, 
          11.257926745186786`}, {11.671882327247776`, 11.147600865500976`, 
          11.422528396404525`, 12.167987686700075`, 11.422528396404525`, 
          11.147600865500976`}, {9.83497759654098, 11.257926745186786`, 
          11.662162274467498`, 11.637573006897197`, 12.028104048084062`, 
          11.196262190467916`}, {0., 11.722590445691049`, 10.23813042217806, 
          10.869273003545553`, 10.23813042217806, 11.722590445691049`}}, {{0, 
          0}, {6, 4}}, {0, 12.4464310888457}], Frame -> Automatic, 
         FrameLabel -> {None, None}, 
         FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
           Automatic}], {192., -126.}, 
        ImageScaled[{0.5, 0.5}], {360., 240.}], 
       InsetBox[
        GraphicsBox[
         RasterBox[{{2.300992500526697, 0.619373262233764, 1.247583952684241, 
          2.270735969160202, 0.09453147717336385, 0.2747204040734754}, {0., 
          0.7593068445457898, 2.4658320201390627`, 3.141592653589793, 
          2.4658320201390627`, 0.7593068445457898}, {2.300992500526697, 
          0.2747204040734754, 0.09453147717336385, 2.270735969160202, 
          1.247583952684241, 0.619373262233764}, {3.141592653589793, 
          2.5314706271823906`, 3.0091851242454832`, 3.141592653589793, 
          3.0091851242454832`, 2.5314706271823906`}}, {{0, 0}, {6, 4}}, {
          0, 3.141592653589793}], Frame -> Automatic, 
         FrameLabel -> {None, None}, 
         FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
           Automatic}], {576., -126.}, 
        ImageScaled[{0.5, 0.5}], {360., 240.}]}}, {}}, ImageSize -> 600, 
    PlotRangePadding -> {6, 5}, ContentSelectable -> True, ImageSize -> 600], 
   "\"Plotting the magnitude and phase of the DFT as two grayscale images\""},
  
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> {FontFamily -> "Ariel", FontSize -> 13}, 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"Ariel\""}], ",", 
             RowBox[{"FontSize", "\[Rule]", "13"}]}], "}"}]}]}], 
     "]"}]& )]], "Output",ExpressionUUID->"2d3e0d0a-1e13-4564-9ef9-\
6e4829235999"]
}, {2}]],

Cell[TextData[{
 "Of course, this can be done for any size matrix or image. For more \
applications of the 2D Fourier transform, see the ",
 ButtonBox["notebook on thread counting",
  BaseStyle->"Hyperlink",
  ButtonData->{"threadsMethodB.nb", None}],
 " via the Fourier transform."
}], "Text",
 CellChangeTimes->{{3.544826426743656*^9, 3.544826472378871*^9}, {
  3.544826550179613*^9, 3.54482656572332*^9}, {3.544826644526115*^9, 
  3.544826645189726*^9}, {3.544827952672592*^9, 3.5448279758306313`*^9}, {
  3.5532721398329067`*^9, 
  3.553272201120549*^9}},ExpressionUUID->"dd257d57-a0ca-492c-ac29-\
4457870420ac"]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
WindowSize->{1141.2, 568.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowCellBracket->False,
ShowSelection->True,
ShowCellLabel->False,
ShowCellTags->False,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f0e72507-4821-4d9d-adf1-f46a8a1a3005"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "DFT"->{
  Cell[189368, 3218, 902, 23, 58, "Equation",ExpressionUUID->"0eed9cd2-c709-4e7e-8e60-d554c18bfccd",
   Evaluatable->False,
   CellTags->"DFT"]},
 "labelFFTMatrix"->{
  Cell[204663, 3622, 2730, 61, 287, "Input",ExpressionUUID->"91474fbc-1f7b-4c6f-b431-31e3a1deea97",
   CellTags->"labelFFTMatrix"],
  Cell[207396, 3685, 4349, 93, 370, "Output",ExpressionUUID->"6351549e-15f5-45f4-8296-48ad101d6b98",
   CellTags->"labelFFTMatrix"]},
 "labelFFTOrth"->{
  Cell[212713, 3814, 6225, 140, 527, "Input",ExpressionUUID->"e23ee369-d398-4e89-8aeb-e81a38ba908f",
   CellTags->"labelFFTOrth"],
  Cell[218941, 3956, 6555, 135, 508, "Output",ExpressionUUID->"63d36a23-34f7-4c55-8088-634b71b48671",
   CellTags->"labelFFTOrth"]},
 "labelFFT2Sines"->{
  Cell[403059, 7735, 6548, 142, 677, "Input",ExpressionUUID->"8249067d-ec5a-4c3f-88ff-e8425d9fe632",
   CellTags->"labelFFT2Sines"],
  Cell[409610, 7879, 18024, 318, 306, "Output",ExpressionUUID->"29039de0-1fb4-4f58-8023-54ff12f331f3",
   CellTags->"labelFFT2Sines"]},
 "labelFreqResp"->{
  Cell[433952, 8374, 13718, 313, 947, "Input",ExpressionUUID->"e6080fd8-3ea1-46f0-bbd6-18151d8e6232",
   CellTags->"labelFreqResp"],
  Cell[447673, 8689, 9135, 188, 668, "Output",ExpressionUUID->"a600d266-dcd2-4aee-ab41-ecdc17ff71d5",
   CellTags->"labelFreqResp"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"DFT", 477135, 9397},
 {"labelFFTMatrix", 477302, 9401},
 {"labelFFTOrth", 477587, 9406},
 {"labelFFT2Sines", 477872, 9411},
 {"labelFreqResp", 478161, 9416}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 664, 18, 80, "Input",ExpressionUUID->"4ee1ba6d-dab2-4966-b513-f4177a753792",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1246, 42, 220, 4, 83, "Section",ExpressionUUID->"471bc0c7-a65b-4c44-995c-4930a0fe59c3"],
Cell[1469, 48, 150, 3, 35, "Input",ExpressionUUID->"be5b7769-ba7b-4c7c-a6a3-30ab647f88d2"],
Cell[1622, 53, 156, 3, 35, InheritFromParent,ExpressionUUID->"74024372-0e4c-4f46-b785-93319fe130ef"],
Cell[1781, 58, 483, 9, 72, "Text",ExpressionUUID->"e0ce9a70-aac3-4dfd-afd3-6ad8d68e45ef"],
Cell[CellGroupData[{
Cell[2289, 71, 1824, 47, 137, "Input",ExpressionUUID->"cb8dbe85-41c9-48df-acb9-221d0713cca7"],
Cell[4116, 120, 3079, 79, 122, "Output",ExpressionUUID->"0cd934a1-dacc-42e7-87dd-5d1801d49a65"]
}, {2}]],
Cell[7207, 202, 1134, 17, 216, "Text",ExpressionUUID->"a518ace2-7bb0-44f4-8780-d79badce18fb"],
Cell[CellGroupData[{
Cell[8366, 223, 90397, 1493, 278, "Input",ExpressionUUID->"ca1ef362-16e1-41b4-9924-bc5983ce50b5"],
Cell[98766, 1718, 89999, 1485, 686, "Output",ExpressionUUID->"40d82e55-059b-4040-88ec-1f472afa4362"]
}, {2}]],
Cell[188777, 3206, 588, 10, 72, "Text",ExpressionUUID->"daeb0588-f307-468f-8c4a-75dad5919b95"],
Cell[189368, 3218, 902, 23, 58, "Equation",ExpressionUUID->"0eed9cd2-c709-4e7e-8e60-d554c18bfccd",
 Evaluatable->False,
 CellTags->"DFT"],
Cell[190273, 3243, 2208, 54, 163, "Text",ExpressionUUID->"4565ff37-77da-4dd3-83e2-8a6b07c28443"],
Cell[CellGroupData[{
Cell[192506, 3301, 659, 17, 46, "Input",ExpressionUUID->"bcaa48b1-6ed5-4053-ba46-d46d23b4bb73"],
Cell[193168, 3320, 723, 20, 59, "Output",ExpressionUUID->"1cafe8e9-d4e0-4d55-81dc-e28089364e16"]
}, {2}]],
Cell[193903, 3343, 767, 17, 43, "Text",ExpressionUUID->"fc31950f-d2e1-4d36-854e-ecaf1642f1fa"],
Cell[CellGroupData[{
Cell[194695, 3364, 711, 17, 77, "Input",ExpressionUUID->"26db4969-92dc-418c-b92b-4401645a1be4"],
Cell[195409, 3383, 194, 4, 40, "Output",ExpressionUUID->"4f5a1aa5-389a-4304-bd20-623908e26b01"]
}, {2}]],
Cell[195615, 3390, 310, 9, 43, "Text",ExpressionUUID->"3c01dda7-1f83-487a-83a9-259371679317"],
Cell[CellGroupData[{
Cell[195950, 3403, 448, 10, 46, "Input",ExpressionUUID->"56831def-c2db-4feb-ad64-9b72e33d8759"],
Cell[196401, 3415, 736, 20, 56, "Output",ExpressionUUID->"6a4e7773-9e2a-4ee6-aaa1-598aeecc6543"]
}, {2}]],
Cell[197149, 3438, 264, 6, 43, "Text",ExpressionUUID->"0755d7b0-1168-45da-b140-1408f2ff18db"],
Cell[CellGroupData[{
Cell[197438, 3448, 238, 5, 46, "Input",ExpressionUUID->"2da7733c-283e-433e-9e2a-f1ae47493874"],
Cell[197679, 3455, 588, 19, 62, "Output",ExpressionUUID->"4a5808ec-30fe-4fac-a8a7-f79bf8ddf310"]
}, {2}]],
Cell[198279, 3477, 297, 7, 43, "Text",ExpressionUUID->"6089d3b1-76e7-444f-99e0-1ff8468a2b28"],
Cell[CellGroupData[{
Cell[198601, 3488, 917, 20, 46, "Input",ExpressionUUID->"fcc0ba3d-774a-427a-847a-15103021ce70"],
Cell[199521, 3510, 4437, 90, 168, "Output",ExpressionUUID->"d1269ed4-0c6f-4689-b726-af910311de00"]
}, {2}]],
Cell[203970, 3603, 668, 15, 72, "Text",ExpressionUUID->"63d2b6b6-adf2-4cdb-95f6-6b5fb177bbf8"],
Cell[CellGroupData[{
Cell[204663, 3622, 2730, 61, 287, "Input",ExpressionUUID->"91474fbc-1f7b-4c6f-b431-31e3a1deea97",
 CellTags->"labelFFTMatrix"],
Cell[207396, 3685, 4349, 93, 370, "Output",ExpressionUUID->"6351549e-15f5-45f4-8296-48ad101d6b98",
 CellTags->"labelFFTMatrix"]
}, {2}]],
Cell[211757, 3781, 931, 29, 101, "Text",ExpressionUUID->"9a112591-09b6-452a-8c4c-3a789cc363c4"],
Cell[CellGroupData[{
Cell[212713, 3814, 6225, 140, 527, "Input",ExpressionUUID->"e23ee369-d398-4e89-8aeb-e81a38ba908f",
 CellTags->"labelFFTOrth"],
Cell[218941, 3956, 6555, 135, 508, "Output",ExpressionUUID->"63d36a23-34f7-4c55-8088-634b71b48671",
 CellTags->"labelFFTOrth"]
}, {2}]],
Cell[225508, 4094, 2189, 48, 245, "Text",ExpressionUUID->"4bd973bb-8458-4aed-8dca-2f90751ee9ea"],
Cell[CellGroupData[{
Cell[227722, 4146, 160, 3, 46, "Input",ExpressionUUID->"f4341386-a987-455f-9f85-489c74c76e80"],
Cell[227885, 4151, 63643, 1148, 60, "Output",ExpressionUUID->"c4c8ae78-9a07-440b-80c2-93d74a751e89"]
}, {2}]],
Cell[291540, 5302, 622, 12, 72, "Text",ExpressionUUID->"f7dc0f6a-c4ec-4e1f-a6a4-8f375b0812b0"],
Cell[CellGroupData[{
Cell[292187, 5318, 942, 23, 77, "Input",ExpressionUUID->"e49974b2-f700-4c7b-b551-b8b08f11531e"],
Cell[293132, 5343, 44005, 735, 304, "Output",ExpressionUUID->"e2b204ee-7383-44e6-bdb5-d7ceff85067e"]
}, {2}]],
Cell[337149, 6081, 747, 17, 43, "Text",ExpressionUUID->"d3c505ec-a07d-4529-8982-39ef229cfd91"],
Cell[CellGroupData[{
Cell[337921, 6102, 581, 17, 46, "Input",ExpressionUUID->"ad271f26-a61d-405f-8251-f88391cdb980"],
Cell[338505, 6121, 406, 11, 59, "Output",ExpressionUUID->"e8f5e35e-b11f-4bf8-8080-f5436927a6a2"]
}, {2}]],
Cell[338923, 6135, 305, 7, 43, "Text",ExpressionUUID->"13368a90-4d86-4153-849e-61bbe83b2443"],
Cell[CellGroupData[{
Cell[339253, 6146, 492, 11, 46, "Input",ExpressionUUID->"8e376f87-b5e0-405c-bb3d-cefc627ca3c3"],
Cell[339748, 6159, 1047, 28, 112, "Output",ExpressionUUID->"f5c62dfa-5b4c-452b-922a-e94fb3880918"]
}, {2}]],
Cell[340807, 6190, 822, 14, 101, "Text",ExpressionUUID->"1b62578c-622a-4ea8-a562-69f6bb32b494"],
Cell[341632, 6206, 1033, 16, 158, "Text",ExpressionUUID->"7b3725ca-1c1f-424d-8b5f-7f2ca31e8b04"],
Cell[CellGroupData[{
Cell[342690, 6226, 1803, 42, 137, "Input",ExpressionUUID->"f2d166bd-b911-48d9-95cb-b90f85337f9e"],
Cell[344496, 6270, 58181, 1451, 246, "Output",ExpressionUUID->"7ba238b3-e6ff-484a-90af-39b0cc0a44bd"]
}, {2}]],
Cell[402689, 7724, 345, 7, 43, "Text",ExpressionUUID->"ba90e2b3-711f-406c-b377-ed8612c037a8"],
Cell[CellGroupData[{
Cell[403059, 7735, 6548, 142, 677, "Input",ExpressionUUID->"8249067d-ec5a-4c3f-88ff-e8425d9fe632",
 CellTags->"labelFFT2Sines"],
Cell[409610, 7879, 18024, 318, 306, "Output",ExpressionUUID->"29039de0-1fb4-4f58-8023-54ff12f331f3",
 CellTags->"labelFFT2Sines"]
}, {2}]],
Cell[427646, 8200, 1270, 21, 216, "Text",ExpressionUUID->"789a5dee-0cca-47d7-b659-917347f9bf54"],
Cell[428919, 8223, 282, 7, 43, "Text",ExpressionUUID->"c484a0e2-0342-4942-b1c8-6da755e9ca84"],
Cell[429204, 8232, 772, 22, 58, "Equation",ExpressionUUID->"ecb8c5a5-dd33-4028-971c-11488143165d"],
Cell[429979, 8256, 912, 20, 130, "Text",ExpressionUUID->"d2c95317-9ef8-4248-a043-d8f974fca809"],
Cell[CellGroupData[{
Cell[430916, 8280, 118, 0, 67, "Subsection",ExpressionUUID->"6031dd5e-2f86-42fe-9ceb-7c36abc32390"],
Cell[431037, 8282, 2890, 88, 331, "Text",ExpressionUUID->"7e0c0786-e7ac-458e-8d59-08ed5f2033fa"],
Cell[CellGroupData[{
Cell[433952, 8374, 13718, 313, 947, "Input",ExpressionUUID->"e6080fd8-3ea1-46f0-bbd6-18151d8e6232",
 CellTags->"labelFreqResp"],
Cell[447673, 8689, 9135, 188, 668, "Output",ExpressionUUID->"a600d266-dcd2-4aee-ab41-ecdc17ff71d5",
 CellTags->"labelFreqResp"]
}, {2}]],
Cell[456820, 8880, 931, 15, 187, "Text",ExpressionUUID->"765028a6-43c3-4154-9a8e-eb16fbf159df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457788, 8900, 208, 3, 67, "Subsection",ExpressionUUID->"6fc7af3c-e470-414c-b4d5-8ff988c12f19"],
Cell[457999, 8905, 625, 21, 72, "Text",ExpressionUUID->"09c7fb40-805b-4cfe-8170-e57b7cf08376"],
Cell[458627, 8928, 1020, 31, 75, "Input",ExpressionUUID->"dcec6684-e469-40a4-b528-428fb94be3b9"],
Cell[459650, 8961, 606, 19, 72, "Text",ExpressionUUID->"9a385ade-97e4-4f3d-8d25-aa31d49d2c72"],
Cell[CellGroupData[{
Cell[460281, 8984, 729, 19, 107, "Input",ExpressionUUID->"5f013f9f-4ffa-47f5-89fa-e288c17bc97b"],
Cell[461013, 9005, 1231, 25, 102, "Output",ExpressionUUID->"4afb722b-0098-4f63-b524-479351ecf7d3"]
}, {2}]],
Cell[462256, 9033, 494, 18, 43, "Text",ExpressionUUID->"802d3b89-4f43-452a-bd53-6157684ab8cf"],
Cell[CellGroupData[{
Cell[462775, 9055, 539, 16, 46, "Input",ExpressionUUID->"41e0c955-3a49-4626-ae82-d95522085b9e"],
Cell[463317, 9073, 3350, 73, 102, "Output",ExpressionUUID->"34f4ddb0-1d92-4058-be04-e4bd3f9e84f3"]
}, {2}]],
Cell[466679, 9149, 262, 6, 43, "Text",ExpressionUUID->"73f28107-8b73-4a7a-8651-326d6e80c26d"],
Cell[CellGroupData[{
Cell[466966, 9159, 600, 15, 77, "Input",ExpressionUUID->"71750893-299f-47b6-a5d3-6687068f377c"],
Cell[467569, 9176, 3681, 79, 102, "Output",ExpressionUUID->"7e6da2a3-5733-41aa-b3cc-becb177df881"]
}, {2}]],
Cell[471262, 9258, 514, 10, 72, "Text",ExpressionUUID->"1fd78623-0cf2-4de1-8d5a-a670a83c13bd"],
Cell[CellGroupData[{
Cell[471801, 9272, 813, 19, 77, "Input",ExpressionUUID->"2628d6cb-729b-4560-9dd4-9347340bf70f"],
Cell[472617, 9293, 3292, 66, 311, "Output",ExpressionUUID->"2d3e0d0a-1e13-4564-9ef9-6e4829235999"]
}, {2}]],
Cell[475921, 9362, 616, 13, 72, "Text",ExpressionUUID->"dd257d57-a0ca-492c-ac29-4457870420ac"]
}, Open  ]]
}, Open  ]]
}
]
*)

