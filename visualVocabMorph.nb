(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1361774,      24996]
NotebookOptionsPosition[   1313899,      24225]
NotebookOutlinePosition[   1335665,      24580]
CellTagsIndexPosition[   1334873,      24557]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"NumberQ", "[", "makePallette", "]"}]}], ",", 
    RowBox[{"NotebookEvaluate", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "~~", 
      "\"\<visualVocabDefs.nb\>\""}], "]"}], ",", 
    RowBox[{"NotebookEvaluate", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "~~", "\"\<vvClear.nb\>\""}], 
     "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5428065919380074`*^9, 3.542806591940366*^9}, 
   3.5544669030536346`*^9, 
   3.554546188070477*^9},ExpressionUUID->"bd7c0dd5-016e-4280-9f2e-\
e4a659409e4e"],

Cell[CellGroupData[{

Cell["Morphological Processing", "Section",
 CellChangeTimes->{{3.542459861697914*^9, 3.5424598701430473`*^9}, {
  3.542501215759635*^9, 3.542501217971826*^9}, {3.5435021583624363`*^9, 
  3.543502167303217*^9}, {3.543503373549675*^9, 3.543503402866811*^9}, {
  3.5435379922899237`*^9, 3.543537997567687*^9}},
 CellTags->
  "representation",ExpressionUUID->"c2dc1044-f686-4fea-a152-65417f1403bd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.554765298294961*^9, 3.554765299756422*^9}, 
   3.8908452814149194`*^9},ExpressionUUID->"ed3ca97c-69ec-4950-8dde-\
047d1b1fbc57"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8908452795973506`*^9, 
  3.890845279614891*^9}},ExpressionUUID->"b7f531e9-5265-4f9a-ac9f-\
4feb08b2b741"],

Cell["\<\
Image morphology is a kind of local nonlinear filtering where the \
transformations are based on logical (binary) operations. This means that the \
functions can sometimes be interpreted as operating on the spatial structure \
of objects in a scene (the shape of pixel groupings) rather than on the \
amplitude values of the pixels.\
\>", "Text",
 CellChangeTimes->{{3.542459826522653*^9, 3.542459833980781*^9}, {
   3.5425011012814913`*^9, 3.542501114033049*^9}, {3.5435017634052143`*^9, 
   3.543501796205658*^9}, {3.551479782706746*^9, 3.551479782712577*^9}, 
   3.55148025820541*^9, {3.551554491095923*^9, 3.55155449302689*^9}, 
   3.551561871374517*^9, {3.551561910280745*^9, 3.551561993254154*^9}, {
   3.551562039662822*^9, 3.551562105780437*^9}, {3.551562233665563*^9, 
   3.5515623211474657`*^9}, {3.5515646493687763`*^9, 3.551564673832056*^9}, {
   3.551611736743476*^9, 3.55161175658753*^9}, {3.551616834704554*^9, 
   3.551616931944693*^9}, 3.551621240220458*^9, {3.551639207272932*^9, 
   3.551639207398823*^9}, {3.5516593408110943`*^9, 3.551659341389072*^9}, {
   3.55294488453088*^9, 
   3.552944885395957*^9}},ExpressionUUID->"a81b2b7c-7d93-49f8-8359-\
480450a26794"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<ErodeDilateBW\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelErodeDilateBW\>\""}], 
         "}"}]}], "]"}], ",", "labelErodeDilateBW"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<CloseOpenBW\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelCloseOpenBW\>\""}], 
         "}"}]}], "]"}], ",", "labelCloseOpenBW"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<GrayMorph\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelGrayMorph\>\""}], 
         "}"}]}], "]"}], ",", "labelGrayMorph"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<XRayMorph\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelXRayMorph\>\""}], 
         "}"}]}], "]"}], ",", "labelXRayMorph"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<ColorMorph\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelColorMorph\>\""}], 
         "}"}]}], "]"}], ",", "labelColorMorph"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Borders\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelBorders\>\""}],
          "}"}]}], "]"}], ",", "labelBorders"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<BordersBW\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelBordersBW\>\""}], 
         "}"}]}], "]"}], ",", "labelBordersBW"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Boundary1D\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelBoundary1D\>\""}], 
         "}"}]}], "]"}], ",", "labelBoundary1D"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Peaks\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelPeaks\>\""}], 
         "}"}]}], "]"}], ",", "labelPeaks"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<BottomHat\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelBottomHat\>\""}], 
         "}"}]}], "]"}], ",", "labelBottomHat"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<SkeletonBW\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelSkeletonBW\>\""}], 
         "}"}]}], "]"}], ",", "labelSkeletonBW"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<ThinningBW\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelThinningBW\>\""}], 
         "}"}]}], "]"}], ",", "labelThinningBW"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<MorphSkelXRay\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelMorphSkelXRay\>\""}], 
         "}"}]}], "]"}], ",", "labelMorphSkelXRay"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<UltimateErosion\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<visualVocabMorph.nb\>\"", ",", "\"\<labelUltimateErosion\>\""}],
          "}"}]}], "]"}], ",", "labelUltimateErosion"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.552944783688491*^9, 3.552944820256588*^9}, {
  3.5529449743475027`*^9, 3.552945018595936*^9}, {3.55294508716943*^9, 
  3.552945130994012*^9}, {3.552945171343421*^9, 3.552945211409904*^9}, {
  3.552945242474249*^9, 3.552945250035059*^9}, {3.5529452865235*^9, 
  3.55294529468288*^9}, {3.552945325766721*^9, 3.552945333173277*^9}, {
  3.552945365036961*^9, 3.552945374005307*^9}, {3.552945411181966*^9, 
  3.5529454205976686`*^9}, {3.5529454568232393`*^9, 3.552945464677967*^9}, {
  3.5529454952886066`*^9, 3.552945518382243*^9}, {3.5529455487789373`*^9, 
  3.552945557220991*^9}, {3.552945815402557*^9, 
  3.5529458439217*^9}},ExpressionUUID->"08f8b39f-dd9f-4250-8b39-6e06ba28a656"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"ErodeDilateBW\"\>", True->
        StyleBox["\<\"ErodeDilateBW\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelErodeDilateBW"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelErodeDilateBW"}, 
       "Hyperlink"]& ], "\<\"The dilation (left) and erosion (right) of a \
binary image (middle)\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"CloseOpenBW\"\>", True->
        StyleBox["\<\"CloseOpenBW\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelCloseOpenBW"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelCloseOpenBW"}, 
       "Hyperlink"]& ], "\<\"The opening (left) and closing (right) of a \
binary image\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"GrayMorph\"\>", True->
        StyleBox["\<\"GrayMorph\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelGrayMorph"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelGrayMorph"}, 
       "Hyperlink"]& ], "\<\"A single row from a thread x-ray is green, the \
dilation (max filter) is blue, the erosion (min filter) is red, the closing \
is orange and the opening is black\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"XRayMorph\"\>", True->
        StyleBox["\<\"XRayMorph\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelXRayMorph"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelXRayMorph"}, 
       "Hyperlink"]& ], "\<\"Applying various morpholological operations to \
x-ray images\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"ColorMorph\"\>", True->
        StyleBox["\<\"ColorMorph\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelColorMorph"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelColorMorph"}, 
       "Hyperlink"]& ], "\<\"Applying various morphological operations to \
color images\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"Borders\"\>", True->
        StyleBox["\<\"Borders\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelBorders"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelBorders"}, 
       "Hyperlink"]& ], "\<\"The image (top left), outer boundary (top \
right), inner boundary (bottom left) and double boundary\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"BordersBW\"\>", True->
        StyleBox["\<\"BordersBW\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelBordersBW"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelBordersBW"}, 
       "Hyperlink"]& ], "\<\"The three boundary operations applied to binary, \
grayscale and color images\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"Boundary1D\"\>", True->
        StyleBox["\<\"Boundary1D\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelBoundary1D"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelBoundary1D"}, 
       "Hyperlink"]& ], "\<\"A single row from a thread x-ray is green, the \
outer boundary in blue, inner boundary in red, and double boundary in black\"\
\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"Peaks\"\>", True->
        StyleBox["\<\"Peaks\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelPeaks"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelPeaks"}, 
       "Hyperlink"]& ], "\<\"The image (left), its opening (middle), and the \
tophat filter (difference between the image and its opening)\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"BottomHat\"\>", True->
        StyleBox["\<\"BottomHat\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelBottomHat"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelBottomHat"}, 
       "Hyperlink"]& ], "\<\"The image (left), its closing (middle), and the \
tophat filter (difference between the image and its closing)\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"SkeletonBW\"\>", True->
        StyleBox["\<\"SkeletonBW\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelSkeletonBW"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelSkeletonBW"}, 
       "Hyperlink"]& ], "\<\"The morphological skeleton reduces each white \
area to a single curve\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"ThinningBW\"\>", True->
        StyleBox["\<\"ThinningBW\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelThinningBW"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelThinningBW"}, 
       "Hyperlink"]& ], "\<\"The morphological skeleton reduces each white \
area to a single curve\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"MorphSkelXRay\"\>", True->
        StyleBox["\<\"MorphSkelXRay\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelMorphSkelXRay"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelMorphSkelXRay"}, 
       "Hyperlink"]& ], "\<\"Applying the morphological skeleton to canvas \
x-rays\"\>"},
    {
     TagBox[
      ButtonBox[
       PaneSelectorBox[{False->"\<\"UltimateErosion\"\>", True->
        StyleBox["\<\"UltimateErosion\"\>", "HyperlinkActive"]}, Dynamic[
         CurrentValue["MouseOver"]],
        BaseStyle->{"Hyperlink"},
        FrameMargins->0,
        ImageSize->Automatic],
       BaseStyle->"Hyperlink",
       ButtonData:>{"visualVocabMorph.nb", "labelUltimateErosion"},
       ButtonNote->"visualVocabMorph.nb"],
      Annotation[#, {"visualVocabMorph.nb", "labelUltimateErosion"}, 
       "Hyperlink"]& ], "\<\"Ultimate erosion (right) of a binary image \
(left) shows one point for each separated white ball\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",ExpressionUUID->"d19d195a-58ad-48db-\
b907-aafe55b0c3a7"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.5545622603238497`*^9, 
  3.554562261767886*^9}},ExpressionUUID->"803fd959-3f14-489b-8317-\
d1b0e946563c"],

Cell["\<\
This notebook explores a number of morphological operators including \
Dilation[ ], Erosion[ ], Opening[ ], and Closing[ ] and a number of other \
commands that are based on the these. Morphological processing is important \
for several reasons. First, when conceived of as the study of shapes/form, it \
is useful as a way to understand the operation of an important class of \
nonlinear filters. Second, it is one of the earliest successes of image \
processing (as distinct from those algorithms and techniques borrowed from \
other fields. Third, it is possible to combine and/or iterate multiple \
morphological operations, leading to a large class of interesting and useful \
algorithms.\
\>", "Text",ExpressionUUID->"856064b6-f395-45be-aadb-798daa8c5541"],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.554562360649391*^9, 
  3.554562361647197*^9}},ExpressionUUID->"b29031c4-58c8-4913-9c6d-\
f078b9fedd32"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"2a9f3613-4667-4c98-a31a-\
f885ba1da99e"]
}, Open  ]],

Cell["\<\
Like all local operators, binary morphological operators may be implemented \
using convolution-like algorithms (where the fundamental operations of \
addition and multiplication of standard convolution are replaced with logical \
ORs and ANDs), though they can also be thought of as operations on sets. The \
two basic morphological operations are dilation and erosion, and most of the \
more advanced morphological functions are combinations of these two. In the \
figure below, the image f is assumed to be binary, and the neighborhood is \
shown as a 3x3. The basic form of both erosion and dilation is to combine the \
0-1's in the neighborhood using logical operations.\
\>", "Text",
 CellChangeTimes->{
  3.55294487599885*^9},ExpressionUUID->"3272c210-bf80-4e35-bf1d-515ad025e7c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
3WtgtA9ex8faVtX+ktL2Lv0C0n5xf2rz29gO1ba99/tIHtSBtu/7FN9DQkZk
al3tw8ZQ2gza9Nmmrs0WaDK0+epetbptf3vvVOkWYjXU/6izQ22yVdosca/W
Tjm01sVsVmmz3j9SH9LW27c2A4nbY7EwwPsHNFNi3KrxcSiv7MNcVk79bFAO
3Qet0tfR5kNAm7+PKb6HhIzI1Lrah40htRn6hPFVTeLJuWmzBn5arZb3k8m0
uq5uyZgjC7SkrE1bYu9YbNlVm2PlAsgTtpq2ads2Y9VW/I3Ew9KHHsK+s5SV
05ZX7ivT5tBzQ3mMNts27ZWPrze+XfvlOiGZMLWu9mFjSG0GGEd17Gij7n1T
a7MlCa22+qD1ABoE7cGh6v0XcM2OBUNarUMSD8oejvJ/0FWbETNC+2UsmIy9
klhSxo7psV0xX3Adum3HguGcfreQfl/YjSHjs2Pj4wS8B8g4MEkneZVps4wh
k+duxrhpbb6YsWCPWNqMFdvK/8f67hEyEVPrah82htbmtbe9Nud3DWzUzbuu
Nq8C5emrHGUgX/iN9xX0xYtWN12zrBFWK/QcKpl7ZOf2hDRN0sl4bjuGTO/h
iLhatFfmIFld03OorC07zws6pfuZcV2PPZM5SKKVMr45pJO4V89pwudQzB/T
dwH563lRoWci6SLzoN78tM9GnrvM0VJ+Pdq0vd6e/b/39u/v+53l+onaTDJg
al3tw8bQ2gwQN57UZ+jQraGNOnnX1eadqx6nNoQ2W9buVatlzbJetToqLiQK
NNHO40qMaH8zIeRND3gs6xhamy2DaPXUIjI3pP986DW/O0JtJiTOwTFurlsO
nEc9cvN5xeqUtr5oP+r4svHp1j2Xo09QNr1mWd21wF+YWkTmRmwcWWLIumBN
xnIQkgtT62ofNobSZrQXb92PjuCcjIWSI1anjKXNck/f7whDUnct8BemFhEy
CNtRvnGEzJOpdbUPG0NpM7Ti5Jq3F4+pzXh/gL6F1jBMUZsttbR6ahEhg0Bt
JiTO1Lrah42h27ShEWf3rs3nBjbq5t1UmwF0OTQHew7abJG1wNEWgGfwrdVT
iwgZBGozIXGm1tU+bAytzQLqkpvKq++25Lba7HxZbBv7HLXZgmd+mFpEyCBQ
mwmJM7Wu9mFjLG0GiE2lnTslbV77e/RY6CVo8zehih1jkfWa2rG9FdpQtXYl
8irbT3EpYP4V5mK1mYeFZyTrj0SYjTb78eTc+4qMydS62oeNMbVZQH/oraON
0H1ttVnuv5jPi9VmjEUWzZA1t9pidbZKm2V9qyUja43JPhh2zdMY0GJZt0z2
t4jsgTUnbcZ+WLHfOyFDMLWu9mFjCm0Gsfm6U2kzQP2x61iO5LCVOup6rRUl
sVklofU4q7S5a55zQLdDxNbwrnOvrPEZYDbaDPy6ZLvqlIT0wtS62oeNqbS5
bxt9aDPqOxkXtlhthi7rWMyumQldlb0JZb3nkJZCQyS20/tAizbr9Sb1nhB2
DU+9fmbZeh96fVFZZxOHXivU3l9mW+zJephVVOVVhtZmlEffK88jpN2yPlmA
b23263HKWpyP912/18VJ1vG0c6H9+Zf3Y33Or719LLF99P8/m3seeRrbyP80
zDeckDem1tU+bFCbX8H48VOHciSHrdShp7oP1Ma5orXQLmgW2lhD60SLVsne
DHqvRL03hexFIXnqWFv2c5C9IGJ6Bz1DOWR/Ckkn7xCyvwZ8k7KW2ZY9kWWN
aqSr0ueyvMrukb0kBRtHx+zgeZXkIeuCXb0m7oxG3v31lz0x5Dvhr7/E3vqc
t7cz96+V/avff/Lo26xlz6ud2nNDvwsgzXWcbzwhk+tqHzaoza+g/kHsfOlg
IylspV7VBm37OEW7QsTatKGjGtkP2d4j/y5r44aGIU2dMVWy3maZbdljSttD
2bR+1kHnFcJr3Xcau/+1tEkgX7sHlpQbh32PUmx9fPq2ho+PZU/m3KmJNgds
XiUWVtr/oa7fdJu1j6mRRu9feW/z/SWkBVPrah82qM3v7HuwkQwhzdCEtFlr
SUh/y65V7flo78E12fswpNFV/dfQSBlfJppWZlv0EOfkQGwb87FuXjHk3UY/
U4np7bPWyN5bkb2xZb9H2SPyoakR3X1Ze7tG3LzyMfFV/IQNf22rdVbp8MEc
d1uu/r/dhASZWlf7sEFtDoP2t0WsVWwr9dS0GUC/ZGyypUybbXt0HdsS12tt
lqOMOnnFQJysx8LLeOxQTG1BuQNt/aKha6+hjzi2J22++Vhb2rEvJdqs29Dt
sdb2+/92ExIE31Vp+2x7XCa2gftEz+bsi/ajL1/Qtv2oW+aKrdTtuKMUtBlA
r0JxZFmbtrYLoJtVtqUtuqwdPXStbl4hEJdrbZYxaPKeUFYW3R+gsLp6FO21
fb3+3Nlo86dpg16LNlvtVTYP/t9Wm1dl7eE+zabgnllkPKQOn6ueWU2bsy/a
j758gZ3Y2qKzIaQTuq7vos3Sdwt7eixYXW3GPTJWq6T99vv+0Fgw3KPHdCFN
HdsSR+M+0WvxWY8515TlFXrGYhP36Wdq3w1gU+a0ocwy3kzGuZe0ae99u/aH
0c4PFcfGxoKdfGws91/8563X2k91/1k++3tD2n0snmPBRN936vrevi8QMiBS
j8/ZBu4TPZuzL9qPvnxBXYLYedvR1qTYSh11vm47Ds2h0nG1nfNkgdZo7bX2
AD7L+DJtD9ou46KgT2VzgKGzSKe1U/pk9byqurb1fChcF+2EFobKUZaXTadt
I63YwzWc12Pt9BwqlFnyKJu/dn/uEXkuwnOWturaLtCmvZJz0nbt9XVj7j97
7d6J1sZiYJ/u5G2ejTZfy+JqQnpmal3twwa1ubwcqF9uHW1NSqhil/nH5BXo
ox1jniiNdM5q85h4nZ8kb5ItU+tqHzaozdXluLju9iYjVLFDgyJrQWaNrGM9
A+akzbvCrHNCyMBMrat92KA2V5dj422uO9qchKlFhAxCU23esb+XZMTUutqH
DWpzvXKgXptlu9zUIkIGgX23hMSZWlf7sEFtrlcOrG+EcWHc6y598LfC3wnv
U5inju+D9EtQ0whZPlPrah82qM31y4H6HuPCVu/JScLg74UxfSf38/cTrcbY
ZvaDErI8ptbVPmxQm5uVY9bjwsg3GDegtRrtIZjHTq0mZBlMrat92KA2NyvH
2ttnHb4cqNWELIupdbUPG9Tm5uXA+UtH+yRdoNXQZejzp3tq9c7NdKw+IZkx
ta72YYPa3Lwc6L9EfLXrmAeZB4idtVbjb48Ym1pNSJpMrat92NCaJn2pbY/L
hDYubjxtBlv3U09zXFh+UKsJSZupdbUPGzbeXMoxxjNF3cz1HAi0Wr8filZj
XD/f3QgZn6XqGo96+r52C9gLg/QOvg/47lzcz/dI9gKnVhMyDgc3/7hZ1yMX
V912XHakZGOsZ4o01455kWVDrSZkXKbWVdpIw8bN/fQ/ElIHu2aZaHUf7S+c
80XIPHWENvq3gTqV48JIG/peX3Tn+J5IyBx1pKkN1B3rBMqRuo2TPwjpQlet
3vp7dkMVkJAZMFcdaWIDv3G02daJCVP3ZUgbshdGH+2ShAhN1wIXbaY+k5yZ
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
Ju3V9ZU/f/NpPku07u77r2/++PT5atsHc8/Rp7v4/5+NpovNu9emrU979HmI
3aO656DyfNhtka+8F+hnEPPjpOzdrI5arff53336q5Tf/1s/r526h9r8yhRr
apeBv2EOc56pzQsiJz9dWvXFNxXafBNdUjoon09a16DbSB/J427Sir5InPth
bB9M3ivRNWMTdtbaD5RLpdloHfN2db5r//mjYb6izRfj18Zcj9kLarNKH4rX
bVuDfV7U5iepaXMuc56pzQsiJz9dWvXFNxXabGPAe/Fsm71rDVHn3mLnQGz4
piVGo26FGXfs3w1uJr2OHV/0Sp1/vENE8n342SDfrdJ1225+kveDiL1o3BxK
b+5d+/IcindNpzY/QfvOqTLVuECXoc9Tz+0aksNut7tfLpdFH/CRfi7ngI9u
OdosOhg63vqeW2jzmx1bzoDNmB+PvGpoc+18a+YXslemzcHn56+dvXYfqc2V
4Lmk+DyWPuf5sF6v79vtdtEHfKSfyzngo1uONkvbba0YYMC4+U2bI3GzxLFj
x82ffcTNxbOvPtbvTW1+JVVtxncFsXMqY8j7hm3aCyInP91CtNn/+1aovt2K
PJpq86Fo0O+r/Shex35tvD5GNcxoc6N8i+r+5lPEXqP+5uKnL/+qPu+ozaWk
qs0A7e1LnfNMbV4QOfnplqXN0KFr8RyjfInpQ1Nt9p/Pxet46WNFetHmkyrT
3ehqqTY3zdfHzvoZvMTJxXMct9i7evsxbV7563eV/qA0/ebPiY/U5jB4F3r7
TicEtDm5uqAHqM0LIic/XYK/R1/vh/qIN4H4bVu8txmvi8Bc3LL7/D127m6Z
7be284DNxztG7L5IviE/a+erbETbKfX14qe/+KSu1X6mhZpz7W2uVPqc1oas
Q8rajL/VEuc8U5sXRE5+ugS1eSnE4v8p8e899p0k2KdMeiep70IAtMcsra2D
2rwgcvLTUZsHI1FtlnZ2afN/6Q8ng5J6XIp3NowxXNKcZ2rzgsjJT0dtHoxY
23wKeI1OsmwLBjFp6s98aXOeqc0LIic/HbWZkLGYgzYDjPNfSlsKtXlB5OSn
ozYTMhbQ5jm0Fy9pzjO1eUHk5KejNhMyFgc3n98b5jzfKlOlD7V5QeTkp5tP
XUF6xvc5c3z2eMxJm8ES5jxTmxdETn66+f/2RsXPOcK6HXNomyylan2QJfma
CHPTZsx5Rh2R8tjyKqjNCyInP9286orRKX72itTrcqz8Wh2zX1ejhjYvxtdE
QBvF3PZMnvucZ2rzgsjJT5eoNkfWoFoVz32OV3pNqsD9cj20XtZK21Lntybt
2q9FeQ2sf2XX7QqWx5R5XXfeklqH682/2Jpnap2vtzXEImV7aHPJumUb5Xdt
Xyr+NtFrCyflNbVjyJznufZ9UJsXRE5+usS0ufjZM0HWepa1mkUPtv78sXhd
n9quL31UNu7F63rSOLdX19fF69rSnyq/nc9Hru+UjUMkP/z/XDzXrpQyi8bL
GtTB+aPF+3rXN2lTLns2/vpdlVnKvfXpomt5+/Jelf/2ecm+G5W+mDLi/7rN
YVME/MqIOWozQLnnOueZ2rwgcvLTJaTNxXPNKq03j30Y1HVb3z/0tzB7F6rr
EvuJLug9KbS2QK+u5nN0Lwp/Xef3sk+UKvNeXb/a9wlj+1y8x6+lz8Z/xvWz
sfW4p/hpn7+rsh6K93eXfeB51fKleO5Rqds2bupvcy5e9+SaY13fBTyXuY59
xvfqVJkqPajNCyInP11a2nwqzB6Pqr5fK20I7Yd89v++Fu/7E1+VnlxsHv78
xusSbN3V+SptvgXy+34/8P/eFmbdzpBN62vTZ+M/3807R6jsjzT2PUSluZnn
9aLNMV8Ks2eGOid/G4m3lzBvti1JreHaAPzm5jjnmdq8IHLy06WlzS9txer8
3evCmzb461of7pHjEMqjeO6pKHsfNtXmu9UaXc6G2hz0r86zCZWlpjaHyqH9
a6LNEqfbQ67L2LK7T5tb3Azmqs1gjnOeqc0LIic/XVra3CVuPvl/l875CWjz
I+b2n1/0p4Y2LzVufutbr6HNL23WMYpnW/gc20i7MmdtBvhbJ1Nn1IDavCBy
8tMl9Dsr6vc36z5LGV8keiPtprGxVlabbR9oKG6+xmz467eior/Z3B/UZmW7
S39zU2229+z88xR/mmiz3Bucc1W89us/2rozA9+lubULa+Y255navCBy8tMl
pM2geI5FuhTPsdh6zPPd66dce7RX+zQrr1kyHhjHp7putXnr08q444PR5rW6
/hZL+s86v0+j9U21eVM8x0vLMxAtjT4bf72NNh+LZ5u+5Ktt1NZm9VnKaMt/
MfnkOG8az2rO2gzwfQh+fxOE2rwgcvLTJabNoIjPFX5oQxGZjxuwYfuCy+Ym
P94BKq6HbATLI/cG0pbqks8j9Ayi87pt/qF8jB/rYv0yZ/tNM4r3+c21fJFn
H3gewXwyYgnaLHOe91MXpAbU5gWRk58uQW2OEYrbCJkZaMefg6ZVgfeLOcx5
pjYviJz8dNRmQsbk4Gb0m6vg7NJfg5TavCBy8tPNqJ4ItamS5YCv5NKPv/7r
v77gmLocfRy/+c1vjqhD8P+h8+rwtaI2L4ic/HQz0maybKb+PZBk6TLXjtq8
IHLy01GbSSJM/XsgydJlvha1eUHk5KejNpNEmPr3QJKk6/o01OYFkZOfbkba
7OfOynyetZ5jXOPeXZ991ZJ/8bpPxCY2p6uF/d5s1cxvW5j1zcZm6t8DSZKu
v1lq84LIyU83L23W62Y0GrNdrMPrUbcsx2N9suK5J8S6KNn7sUUe3/tulFyP
7mXVMr/oeihjMfXvgSRHH99HavOCyMlPt0BtLn72QrRrT/epzaeA/VPfcafX
+mBfm9fSVvsf+/cIuw4ptZmkRh/tXNTmBZGTny5BbS5Zo6pSm73unHxc+Vg/
q3hfezKmeS9rgEXKdvV56DW29DqfsTXN6pzbFM/9j4+x9wm7Hpd6LlXlXxXP
tT+3Ki+9LvamKFkTu8x+F+z387e//e39PxyP0QPg///8T/6kl9/Df/3bv73/
+te/7sVWSvy3v/97/K2nLkZT+npPpDYviJz8dAlpc/Fcu1rWXf40+lNHm3c+
3hQ7eg3ss7cr63Dvzb1Hdd89FAerNLKetayteTFprurzIdTe7ctzNuduqp38
xa5JZ9exvivf39bFVunk3ULWvD4qe/JsLv5+W7bK59MF+/3U2vxvfvWrb30Z
Upv/0e///v1Pf/nLXmwNDd4h8HzqMFNt7mtsCLV5QeTkp0tIm0Hxuh70wWhc
3Tbtt/bZ4rnvgsS5u0LtN6l0Ta+ZfbdxrbKl97rYm8+PvaiK5z6OIZ38MGV4
y7NQ+3SU+ejv03tdnorA/o/+2tuz8/buKo6Wcn80fT5tKfuuxvSlT23+3e9+
14udMcCzwDOpwwy1uc++FWrzgsjJT5eYNgNf7++L9/0au2rzwZzT9h77TKnr
Vxtbh2z5/KztbfHcvyo6Zsunkdj+bd/Euj5a/a94PjFtjj6zJs+nLWXf1Spt
xnXEvDisZiG+/Pd/8Rff6fD/mAb/57/5m+/rAHEp/o3/wybuRZs37pU88X9t
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
/er6I6+Ibzv1zhAq13YIbZb9F9EGa/crtGtSIh3OyXqTNj1salt2LUm5HzGl
rEVp1+BGGnsOn+36oTpuLMvXarNd4zJ0TtYwkXU6NWjj1+uHWqQtW+8bqcsq
63pq7cZ12NPvQaF0Yl/OmVg8VN/gd3UNnO8DavOCyMlPl5g2a4pnu7WOBWUN
6lPFvW/6W3bN6O09chwiaW0/eBttfvs7KB0tvV6SR5k2BzVUlz3i2+O+iP1B
tBkagvo9tF9hSNdkzyRck8+CrHOt92XQtpAW8aOsCy17PgvQI+RnNU/2s9Da
BVui11X5ah9sTGvPIS/cD3v4t84HaXAN5+WIPVdouti064WL33pPjJjO63Zr
+xzUOuU2ZtZAm4eoi6jNCyInPwf6PfSGrf99/Cr7CAfHJvl0UY2ooc2lc6QC
aYeMm9cN4uYm2txH3HweK262OiXaqdMIViugK7hu41ABuiZxp9jSGmTvh9bE
2n5FL/V9sfW/QvkKVdqM/O2+G6KH0FT9LhLD5hGKf+UdR/dNW2SPKgHPXj9/
eT+6h2NmAW1caNuO/qZbQm1eEDn56RLSZh8n63FGof5PGRtm+1utxrxcN9eq
tPnk3wFi45Zt2ltR3d9cpc037UOh+tOL+v3NtbVZXe/S37yLlGvw/uay/RxD
e01pHZL2ceiOL/8jfSw/2V8JQKNs27WA86Jh0F2tkU3yLdNmvSejPuS69Btb
/bbU0WYpF7Q31qcv+2PK+4yNr2Hj43/9o7KYWcD7afA32wFq84LIyU+XljaL
Bl0KM244oBvS3q3bmW/q/136m2We9acqy2dJ2otKK3F9U23eF+/jsLVW79Wz
ET9XFXlU5bv2+dyUDzZO1s8B/7fxvR6nfRW9Dj33KkLf0SG0WfY+lnhWp4/l
J7GhtGfHYnAdv+p9GJvmW6bNktZqs16jW/Z3RJlj7xF1tBn+wEaZNgP4JX3b
dsy8L28dzcX3GW0yu6qEDaA2L4ic/HQJabPgNdr2c77NQy7M/ObiOU+3tF3M
p7O2QnOWVyVlsWkf85K9Xp0q0m+L13HgK3W+ar71m38lZYrmGyp7JN916L7Y
9TJbZYS+o6JDVgvL2oPLtDmkvdJuG7KlEZ2rai+GBqNsotExu2X56rZxIO3j
SCfvB1ZHQ0jfbwhrA2XRY8qQj/giezhrtFbLOwmej30X8M+ibj3T95xnavOC
yMlPl6A2z4nivR1+XQT6aUk1oe8otAP6YMeCyRglSVNXm6X9VcaJybiyOtqM
2LDw46fKwHWJkYWm+eJe2JCxXPAJn/W4LdFveecQLUd6/az0GPbQMxFkHLYg
Y8qBjAWTPEJ92ihf6D0KNotma+iin6V0rGcDqM0LIic/XTdtxr2w0SpOWgJF
uB1+yLUUFkvoO6rnNMl8IXy2MZudQ2X7WfX8I9EsaYOV8dMhWxppr62aSw0d
i/Xd1s1XxnTpOWDyHHR55JnAptjSc6vss4o9E8lT/JPy6Ot6DhX+H5pXZp+d
j/E/Y20uEZC2rznP1OYFkZOfroM2f5k4Yj8r9/OemzWhtm/SjKl/D1Xo8WBL
RfqtqzDribyNB9P2GrRnazDn+dbD14ravCBy8tN10+br6XSCjVZjfwjRTP17
iCFxom5HXyoSr1elsfO30L4dmmNV/Iy7bNt3jPFjXfvcqM0LIic/2373v25f
wwb2mnQ/2jzkevUkA6b9NcSRsVCxsdm5A01GG3rgvaVrnzHGRKJu6TLnmdq8
IHLy07XX5h1sYB9Wl3mfM+mHaX8NZAD6WEcE9VOXOc/U5gWRk5+uvTafxY6j
Ns8e318+6djyCX8KpH/6Gmfddc4ztXlB5OSna6/Nn2LHUZtHpTD7ZfZk8209
lrGZ8KdA+ic4R78lqFvaznmmNi+InPx0LbT569attrNarXrTZq8Rb3syp0bx
s+dGX7FB07xXfn2T3uo/ajPpkSG+R2fXbj4ItXlB5OSna6fNLwM5/TyqzjGc
X58K6z6e7DpUZWtildiyNvRalXo9zJVNq669rYlVPPefuIbKFFrDrKyMNdKt
bTq95pcv/yaWNuCn3KfXVAtqc5Nn3pUhvuN6bc8xkTUzhwTzlerMd6oLxnTF
9uVoyBBtaG3nPFObF0ROfrp22nzTdrw2d15fzMeCn8VzfeeNOS9rOp9L1o/c
+Pv1GtGyliTmdOyK13W6te277nP12nu117yNm7pvZ/K+qv/H9F6vv/0Z0/Li
uZfGd1p1/rFWdvHcR/Kk8r6Z9wnx++Kvfa/Pra6/aLNPr5/54G0Ebb7D0MCy
tSvH0mZomh7HLWt2Djm2G3O6etLSb/T+zR0Ysu1F5jw3adumNi+InPx0DTX1
7udOafrSZlCY/Rm8Zjx0pjB7IZl7X/a/CFwXbZK4cWdsy34aj3hU3Svrf0na
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
uKw7fi+e+3fIM9qq++T8pVD7ciitl/Wz39qutc/ep6s6kurfmCHU5uGgNi+I
nPx05dq80+mHntMc0CbRr8e60eoatELvA1Vbm4vnnlGiadK/+/bO4e+7qdhU
0mpt/jT37L0urrxWhtYreuvDte8mRaDdOuSvOgef9N6TJ/OM7Nrid+XX9+dQ
Xqos8vzsHl2c494NPMs59eHOCWrzgsjJT1euzSedfrPZDDqnWcWYEnMetdb4
cxuvDSetJQ21+Wjj5FBe/vybZgfi5jdNK9S+VkWkzdz7cVO+2zj60VYesR/S
Zh0nv+mtfy/ZeduP9A21WdocUp1HMzfwXKnNw0BtXhA5+enKtflT0qoxYIPW
IV5zT/7fD130miJtqIeO2ixtuvZ4i2+t3oXsR7RZ9rosaysXPd56vbuZ671q
s4/Lb/49pLU2+8/SNnAr2OfcFWrzcFCbF0ROfrqINt/N3Kkhx4BpiuceyN/9
tur8qXhtr7W600SboVG1+khD8WFApx5t3urctXjuDR0daybvIj6t1dpjLDZt
qs2i/cVru3ZrbTbl73WMeobg/a2X+XfkDWrzgsjJTxfX5sfCfkOPAbN4DbF9
ry96WhE3S8z66KcuVB+xapOtjPdEe4ry/mbk/aE+Q8euqtwXc03r54e396bh
Xt+DZSwCY7YqtNn2Ee9C2mzfMUy5H2PBTPmTWodmhhxcg33USSMO2+32Uacv
9YCP9HM5B3x0cW1+zJ1S64CNMubHx4u273VbPPc5vEmbrLr+EkcWr3shXr02
WY28F89+4VsRHhO9Ctiyersvnu3wMn5tq+7/9PlJG7bV4Bet9+de2g0C5fpQ
5dfjtGPaLO8Ut+I5/+pWvI/jvlnNV8/rov59K8x4b9IaavNw4Ld24FF54Ld9
S6AcPJ7HG19yvNbxtV8H7BRKOwReR7ax8yqG3aprm4DmPeZCF5F1ML29h82S
MmlbL2PJlO6tisCc3+I5p/ijMOt7FGb8mzof7Wu2do0vdt7y1tyzLZ7tCRvr
t74eyGtjPlc+N1IL/J05D41MCX7ziAU4diRh7mru1Pl8hi7jeKuvc8Drm9a7
dREfu11avxaB/uMiMMdK5UHdywO8P10qUxEyLHhHHHxMEWkPJFm02e8FmW29
UTz7YaXt+16lwQ1sy/ogWb73kAfUZpIKN8dxicly93OnuBfkE2n77tnmjrEx
cdRmkg74Lo42tojUB6GyxMz7/R66fJu6TIQsHNSD96kLQYjn5EYcX0TqIXOn
1Lwptm8QMjzUZpIKeFdE7NxrOyHpBpqyp5g3RUjmUJtJSiAmC7WZ7gLnyMDo
uVNjz5uK4ccsl84lGqkcu777mxvmvy3MuiUVafkbmhd4D+aYQJISGLOt617o
NcdFTAC6mFObN6XXz5i4HG9rZI6Y90GtX1I5Lk+vE0JmA/5ebEMkKSHjwtb+
36iHOQ9/AmTulF8vbJK63evKXn2mNkf2r/TX1oH1TKjN6WPXeNDajLoQbVYc
60GmBlqM7yY0GvXw5G2YOQJdHmu/qRB+nSpZT3Kr1gG7++sv62BF7o+tP/2y
ppg6/7IOll7/y6TT63WvbT6hcyH7JWVfhdKq+dX7wBpfK3/+7tPJ2p16fc3G
z4SMArT30/8f713Sfoi/W9ZrCpAkQF2Dd0PsL3RXB7V5ZGTulN9vapJ5U37d
LNl38CI6Ket9FM/1nl/WzPLpbur6NaQ3hdlTyuvp3d+/Ll7XzH7ZC8No81tc
as8Vz/00ZC3uaN+98lvSnovnuqSy3sk1kKe8y8jaKEdVlmvxuoe03Qdb58k1
sadBdDh0sH2bTAHqPLwnxr6Xb3vck2H5kuWTWmtksnrath3ruNF/Xnnd0XtS
3YrXdvCXPazU+VPxus8kYs6b+qz1/lvfQuWq0mat+arMwXbp4rlvhN3nSj+D
u42Z7fMJ2NT5S3k+/OedyVP255h8fEFmyFwVW/8xZiZTI+vh8Ls5MZg7hb2p
3E9dMRkxbTZptA5+FGb/4CKyb6HSedGkq9Z0f27jNftURPa5qqHNL3thqHNv
75whzRbtVJ/baLMtny7/NZDn27Mgo4D3JcbMJFXwXURdRG2egC9d3qi1Ribt
T2ihzRIjvh0R+zevfRJLrv35tdenq7fZRZsvkTK9fa9Dumt9HkCbg89LP3cy
KrpPj3sNkBRB3SDfUTISmDt1Op3kuU86LqiFNiPGrV2fSfzq9Vm3b9v2bquP
TbQZ9mvNNZgobn7bk5JMCt4PpW2b/f4kVaQvmn1fI/GlzZeE1hq5FK99yVXa
LPFvrTpNpT8Xr+PCzibfsrj5w8Tc0kcsZdoVZixZSXl66W8u3vvKy7T5VETG
y5HJkLiEfxOSMivH7+gofOnySsXMk78PKd2DljzGaZs0L9rj7/ksnmOTr2Xt
s/76pzm3VTZuPo+gNqvPelz33pTpoPy4eJsxfT0Xr+O0j+Z6VJuVP7fidZx2
mTavTJ4X+zzI6KC+m/zdmBCSBpg75dcaSWZsfKHmMXsdsf2x61BMqrS89B2j
5P6X+b46X297bdJvTDlj85sfNqt8DqWref/D75B/kfKLvxx7RAghCfGXf/mX
eFfn2FBCxgXvTgcePBZwVPbdkeb88R//MdoyL1OXg5DMQJ12cdPXq2Mdl0z8
zcVP7S/+T3rkS5fxvnN3HBtKyNhI3ZYLufibi59Cbv6OxclNtD4nIZmTW52W
i7+5+Cnk5u8YYGwRY2ZCpiG3Oi0Xf3PxU8jN3zHA80RfM+eqETI+udVpufib
i59Cbv4Ojayxz2dKyDTkVqfl4m8ufgq5+Ts0aMdGezZj5h4onvtLch1MUpfc
6rRc/M3FTyE3f4cG479OUxdiCLxO9r5fgF97LPjM/BoexzprdBLiya1Oy8Xf
XPwUcvN3SCRmXk9dkDL8elV2bavQGmGPc/7fe1njsnjuX7ztaHet1qAOrjum
193y6eXfL/npNc8CNqJrg6k8dJlC5ahcF40kQW51Wi7+5uKnkJu/Q3L9gz/4
g2T3oSue+0TIGtRXrbHF+9raj3Neu65qHWtZX/ru7d6K13WwVzXtyr1y39vY
9uJ9n6pj8Vzf++4/H4rn2tc3raHFc39KSb9T11bqPlm/+yT5BZ7bZyzGJ8mQ
W52Wi7+5+Cnk5u9QIOa6H76YuiAhRA9NnIk9GS76euie2Gd/7l6ofZeK515P
pwZ23/aPMOmtNj/8UH7pPSivxeu+V3ofqZe9pbxtfe+mUPstF8+9tSQ/8Y/z
49IltzotF39z8VPIzd+huGBfiy+S7Bf1seDJnBPdkfbettr8Yc59x5kl93TV
5ou5/rKXVCTN2pdLtH2r/S/J7xh4bket5yQ5cqvTcvE3Fz+F3Pwdgu+Y+e/+
7u+S3QuwMPswqvOiU1202fYn6zbrybXZtw/cimfbd9TnQH7SDm6PaHnJ5ORW
p+Xiby5+Crn5OwSnzWaDmDnZfsgJ4uZbyT2jaXPx7M9e2fTFs/26LG6Grr/s
+UySJ7c6LRd/c/FTyM3fvkG9fj+dTtDmZPsgi3Vlf/OqeB8ndQ5pc0DnLsVr
f/NVaVsdu9DS6Bi6jtq817a9Vj/Se90u62/+bp8vOIdrTuRWp+Xiby5+Crn5
2zen9Xp99yS93kjxnAN1KZ7jkrXOHtT1q+iYsSFjmvU47VPxOo753MRu8Vxf
5FrUG6fdRJtl7NateI7Bvilt3qjrF1XGg7F3V9dvxTo8V4skQW51Wi7+5uKn
kJu/ffK9p4WPmWfR/+i1amvbcdV1ad9+zIEKpHncr9qHO9lV97+93xTv85vt
HOqX+0rSrJW9VeC6jMWOvSNsY2UkSZFbnZaLv7n4KeTmb58cVquVxMz7qQsz
BTZmnRv2XaJ4ttsH3zHILMitTsvF31z8FHLzty++97Q4HA6izVn2Ry5Amw+q
Pf7q/53suAFSi9zqtFz8zcVPITd/++I7Zv78/IQu36YuzFQsoY1Xtadn+X61
QMrqNHxXd/76Sp1L/W9f9v7bpg4PPYe1G3+94SZ5lvn54a/J33EOf1MLyqvr
UmpzO24qZk527hQhGVJWp2FcyNm9ahI+t2372XmbfepAyCbGXsb6zdrU4fY5
4Li6dvvnrbydNmNu1g3yjfl58Da0Nqf2N62TB94v9JpG1Obm4Lneb7ebaDP3
LyQkHWJ1GupBzA/QOgBtaDuO8+wP2OyrXydmU/aFD9G0Dg89B4mh24BySZnb
UPbeoYn5ifx1HZza37RJHnjHEL2mNjfnttvt7opZt+kSsjBCdRrqa7Rv3f01
qRO1Lny41zp+417ja4ucL6vH9+41NpIYs43Nsymf0KQOjz0HrQm2zB+uXDtX
3k5Mm0M+b5TNjc+/ipCfB58vfJJxIkP/Ta1N596fmZQjFHuX5bH39zlHbW6K
jZnPlXcsAD8nebZjvsooIntCtrS1Yr/15DTRZt2uKPGkfJZ20irK6nHkqesI
1B91xqfE6u1Ym25XbdYx+d6XceXTfwbKYinTZuftaX0/udd97mNtApq62jz0
33Rnyrt24b2BLyU2Ynls3DPmpzY342pi5izmThWR9bhHyPd7P8iB87j1padq
rZNetJ60IlanhfTDfsZ9qBvxu677vSurx237sfTxtrG5deG22qZ1uH0OIbsX
bxPlPbpqqrTZPk+r91U65lzcT/ushv6bAt2Ovnfhv0sbbZbzgNpcn+/v3+Vy
0dq8iDrYzyWKvmeMpc1+TbGt+vwxZL6+PeBUnXJam6QRXbQZoP5G3avf1y7q
2Jn0VfX4zd+zcs/4SuIjOey74dTaLPGyHqdVVuYqbdaxJTTtZq4Pqc2g77/p
yT3j/qu6f6fKefNp5LPVCmpzf8g+kIL9fiWPXxNrGzgn61nG1uZ60+aqtcB8
mm3J2mKbwDnMl96rNTVXkfvf/PDnH+3TPk1pPOz92sbSR86ty9Y180dZPUWG
pYs247uP37WN67bqqFvHCnjnRfyJels0UPpo5bC/uam1Gd/5T39I2crKXKXN
AM8Az0L0SjOkNg/xN5XnI+8w+v1FbEKz967Z31iXn9pcj+/vnomZ67T1JEHx
XLNar7Gx8deO/rOsKf2mZ1ab1T2xNbRlj4ir5OnPf6j7ZI3rlcrjLvf4c9vi
de3tjbpP/PhQ1w/SDq7LVvJctG0pm2i7vCuE9PrlfKH2rFa+VNU1ZBiaaLON
//BdgXboPtcqQnXsxr1q2t099bkOIZt99Dc7F34Ouv9UtAxlPbvX/vImNoF+
DvidXr1tq4Vt+5ude39WQ/1N1+613FdlO0TV+0bseyPvSdTmepxMzDy7uVPF
+/4TV/W5tM26eN9v4la87j11U9dF00Jx7Spg96g+230rHtrs84F27tX1vT8n
ZZF9KeS9Y10E9rH01zbF+74Zem+uh0+Be6+m3LjvpD6X9hGQQWmizfgbyt8J
3xEdA11dvb5WW8du3bvWnI3tpjbFRqjO6UOb4avoGXyW34XEhVV1Xchm6Dl8
unCMXqcfuK42D/E3lXNa8/eRdEIbbd47jtNuAr6fsqfFg6kL1QavR9Czk4kZ
m2gzNGtnriNuvPl/n4qK/lavuQdv96LOl2nzIw9j61EesRkre6AMNq3o/yPW
j5R/r/yVfTB1HH0oe55kUGJ12jpwXuuCtD/qa0hfpacH9xpP4bP9/p8C55rY
lFg2lrbJdy30HEQTVoG8P1z1/OOQzdBzkHhccwycCxHz05Z3iL8pbNjnvwuc
s9dt+0BZHuCqzlGbq9H7QM5y7pSPH6Ud+NBRm99iYqOhUVs+nbSBN9XmN90N
lK2TNvvzx8LsOR1II3q8Db0zUJsnpWmdFotH22LjJYndyurpKnQsaOmjDodW
aV3oA/scju49Pl677uuChej7b2rzrtue0ATY0rpCbS4nGDN/Uec9Lxm8Fp/V
Z9uPO0rc7O/VbdIvWjpy3Ly2sXHx7Jc/l8XN2k95zzDXjmXaTgalaZ0GXXgb
Y9EBrUf4Dtxd/X7mOjYtfdXha9evNusyoz6Altnn3CTPJn72/TfV/eb4N3xp
0g7SNA9AbS7nEIiZZzd3yuuH7h8Nxc3RfphAbNq2v/kxdsvf9xj35c+99A0X
7fqba2mzym9l0h6tT8q2fm/48Gke48fUNfjVZ91A6pNSnYbvwNB1RUr+xsDv
pm5fe4xU/IQfZe9KfZGKvymCv4HeB1KoM24hKVRb8lU0p3gfo3wv6o/TPhev
47SPJr2MyZLx0hd/fq/yuXkd1Nr8GP+tyq3Lqf0QX2w/bxNtPquY2+r84x2j
eLZhWw2+BfL7jr1D+ZFRyK1Oy8XfXPwUcvO3CXofyFnOndIUag6u/2z7jNeh
WNdf2wR0aa3tleQXzacIrHFZqDnFRXx+8zbyDrGO2AvGLoXqcy4Cc7WlLP7d
xbZ/Sxz/Yc6zr3lacqvTcvE3Fz+F3PxtQihmBmO0Z5CR8HF16ZiOItB/XPz0
C4Ri5kd7P5mE3Oq0XPzNxU8hN3/r8j2GIxAzs62SSH/yWz8zSYLc6rRc/M3F
TyE3f+ti94Gc5dwpMgzFz5hxxsZpkludlou/ufgp5OZvHb5jZrUP5GznThGS
IbnVabn4m4ufQm7+1uESiZkBYyVC0ia3Oi0Xf3PxU8jN3yowzsvuaTHbuVOE
ZEhudVou/ubip5Cbv1WcA3taCHxOhKRPbnVaLv7m4qeQm79lYMzt/Xw+x7SZ
6zwRkj651Wm5+JuLn0Ju/pYR2tNC4NwpQuZBbnVaLv7m4qeQm78xvtfnDOxp
IZymLiAhpBa51Wm5+JuLn0Ju/sbYR9bnFPrcC4wQMhyoz/Auvc3kOGXiby5+
an8PjsTWGhE4d4qQeYD67OZ+9g/O4bhl4m8ufmp/Dy5vMMbrfr1eY7p8mbqA
hJDaHFxedVou/ubip5CbvyFiezQL+2oThJBEyK1Oy8XfXPwUcvM3xOnj46NM
mzl3ipD5kFudlou/ufgp5OZviEtkL0hwm7pwhJBG5Fan5eJvLn4Kufkbokyb
T1MXjhDSiNzqtFz8zcVPITd/Q5RpM+dOETIvcqvTcvE3Fz+F3PwNEdXmqQtG
CGlMbnVaLv7m4qeQm78hYtp8nrpghJDG5Fan5eJvLn4Kufkb4rLf70Pa3Gbu
1No9n+nSj12L50PI0ORWp+Xiby5+Crn5G+IQ2Rdy3cLWFnOlEYcv+cAaau5n
7RpCUiO3Oi0Xf3PxU8jN3xA7rKVtaDt3aluy//NiuFwu1GaSKrnVabn4m4uf
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
zLnLhBBCyLSg3Rp7SVGTCVkY/z9yCVaf
          "], {{0, 446}, {487, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{487, 446},
        PlotRange->{{0, 487}, {0, 446}}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], " ", ",", 
    "\"\<A morphological operation operates on a binary image by combining \
all pixels in a specified neighborhood\>\"", ",", 
    RowBox[{"LabelStyle", "\[Rule]", "captionStyle"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"2", 
    RowBox[{"dimMorphology", ".", "ai"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.551564423001554*^9, 3.551564556353973*^9}, {
   3.5515645959479523`*^9, 3.551564606942453*^9}, 
   3.551621265446108*^9},ExpressionUUID->"1237abf6-e4aa-4d8a-9de7-\
ca492156e595"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{
       InsetBox[
        BoxData[
         FormBox[
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1: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
3WtgtA9ex8faVtX+ktL2Lv0C0n5xf2rz29gO1ba99/tIHtSBtu/7FN9DQkZk
al3tw8ZQ2gza9Nmmrs0WaDK0+epetbptf3vvVOkWYjXU/6izQ22yVdosca/W
Tjm01sVsVmmz3j9SH9LW27c2A4nbY7EwwPsHNFNi3KrxcSiv7MNcVk79bFAO
3Qet0tfR5kNAm7+PKb6HhIzI1Lrah40htRn6hPFVTeLJuWmzBn5arZb3k8m0
uq5uyZgjC7SkrE1bYu9YbNlVm2PlAsgTtpq2ads2Y9VW/I3Ew9KHHsK+s5SV
05ZX7ivT5tBzQ3mMNts27ZWPrze+XfvlOiGZMLWu9mFjSG0GGEd17Gij7n1T
a7MlCa22+qD1ABoE7cGh6v0XcM2OBUNarUMSD8oejvJ/0FWbETNC+2UsmIy9
klhSxo7psV0xX3Adum3HguGcfreQfl/YjSHjs2Pj4wS8B8g4MEkneZVps4wh
k+duxrhpbb6YsWCPWNqMFdvK/8f67hEyEVPrah82htbmtbe9Nud3DWzUzbuu
Nq8C5emrHGUgX/iN9xX0xYtWN12zrBFWK/QcKpl7ZOf2hDRN0sl4bjuGTO/h
iLhatFfmIFld03OorC07zws6pfuZcV2PPZM5SKKVMr45pJO4V89pwudQzB/T
dwH563lRoWci6SLzoN78tM9GnrvM0VJ+Pdq0vd6e/b/39u/v+53l+onaTDJg
al3tw8bQ2gwQN57UZ+jQraGNOnnX1eadqx6nNoQ2W9buVatlzbJetToqLiQK
NNHO40qMaH8zIeRND3gs6xhamy2DaPXUIjI3pP986DW/O0JtJiTOwTFurlsO
nEc9cvN5xeqUtr5oP+r4svHp1j2Xo09QNr1mWd21wF+YWkTmRmwcWWLIumBN
xnIQkgtT62ofNobSZrQXb92PjuCcjIWSI1anjKXNck/f7whDUnct8BemFhEy
CNtRvnGEzJOpdbUPG0NpM7Ti5Jq3F4+pzXh/gL6F1jBMUZsttbR6ahEhg0Bt
JiTO1Lrah42h27ShEWf3rs3nBjbq5t1UmwF0OTQHew7abJG1wNEWgGfwrdVT
iwgZBGozIXGm1tU+bAytzQLqkpvKq++25Lba7HxZbBv7HLXZgmd+mFpEyCBQ
mwmJM7Wu9mFjLG0GiE2lnTslbV77e/RY6CVo8zehih1jkfWa2rG9FdpQtXYl
8irbT3EpYP4V5mK1mYeFZyTrj0SYjTb78eTc+4qMydS62oeNMbVZQH/oraON
0H1ttVnuv5jPi9VmjEUWzZA1t9pidbZKm2V9qyUja43JPhh2zdMY0GJZt0z2
t4jsgTUnbcZ+WLHfOyFDMLWu9mFjCm0Gsfm6U2kzQP2x61iO5LCVOup6rRUl
sVklofU4q7S5a55zQLdDxNbwrnOvrPEZYDbaDPy6ZLvqlIT0wtS62oeNqbS5
bxt9aDPqOxkXtlhthi7rWMyumQldlb0JZb3nkJZCQyS20/tAizbr9Sb1nhB2
DU+9fmbZeh96fVFZZxOHXivU3l9mW+zJephVVOVVhtZmlEffK88jpN2yPlmA
b23263HKWpyP912/18VJ1vG0c6H9+Zf3Y33Or719LLF99P8/m3seeRrbyP80
zDeckDem1tU+bFCbX8H48VOHciSHrdShp7oP1Ma5orXQLmgW2lhD60SLVsne
DHqvRL03hexFIXnqWFv2c5C9IGJ6Bz1DOWR/Ckkn7xCyvwZ8k7KW2ZY9kWWN
aqSr0ueyvMrukb0kBRtHx+zgeZXkIeuCXb0m7oxG3v31lz0x5Dvhr7/E3vqc
t7cz96+V/avff/Lo26xlz6ud2nNDvwsgzXWcbzwhk+tqHzaoza+g/kHsfOlg
IylspV7VBm37OEW7QsTatKGjGtkP2d4j/y5r44aGIU2dMVWy3maZbdljSttD
2bR+1kHnFcJr3Xcau/+1tEkgX7sHlpQbh32PUmx9fPq2ho+PZU/m3KmJNgds
XiUWVtr/oa7fdJu1j6mRRu9feW/z/SWkBVPrah82qM3v7HuwkQwhzdCEtFlr
SUh/y65V7flo78E12fswpNFV/dfQSBlfJppWZlv0EOfkQGwb87FuXjHk3UY/
U4np7bPWyN5bkb2xZb9H2SPyoakR3X1Ze7tG3LzyMfFV/IQNf22rdVbp8MEc
d1uu/r/dhASZWlf7sEFtDoP2t0WsVWwr9dS0GUC/ZGyypUybbXt0HdsS12tt
lqOMOnnFQJysx8LLeOxQTG1BuQNt/aKha6+hjzi2J22++Vhb2rEvJdqs29Dt
sdb2+/92ExIE31Vp+2x7XCa2gftEz+bsi/ajL1/Qtv2oW+aKrdTtuKMUtBlA
r0JxZFmbtrYLoJtVtqUtuqwdPXStbl4hEJdrbZYxaPKeUFYW3R+gsLp6FO21
fb3+3Nlo86dpg16LNlvtVTYP/t9Wm1dl7eE+zabgnllkPKQOn6ueWU2bsy/a
j758gZ3Y2qKzIaQTuq7vos3Sdwt7eixYXW3GPTJWq6T99vv+0Fgw3KPHdCFN
HdsSR+M+0WvxWY8515TlFXrGYhP36Wdq3w1gU+a0ocwy3kzGuZe0ae99u/aH
0c4PFcfGxoKdfGws91/8563X2k91/1k++3tD2n0snmPBRN936vrevi8QMiBS
j8/ZBu4TPZuzL9qPvnxBXYLYedvR1qTYSh11vm47Ds2h0nG1nfNkgdZo7bX2
AD7L+DJtD9ou46KgT2VzgKGzSKe1U/pk9byqurb1fChcF+2EFobKUZaXTadt
I63YwzWc12Pt9BwqlFnyKJu/dn/uEXkuwnOWturaLtCmvZJz0nbt9XVj7j97
7d6J1sZiYJ/u5G2ejTZfy+JqQnpmal3twwa1ubwcqF9uHW1NSqhil/nH5BXo
ox1jniiNdM5q85h4nZ8kb5ItU+tqHzaozdXluLju9iYjVLFDgyJrQWaNrGM9
A+akzbvCrHNCyMBMrat92KA2V5dj422uO9qchKlFhAxCU23esb+XZMTUutqH
DWpzvXKgXptlu9zUIkIGgX23hMSZWlf7sEFtrlcOrG+EcWHc6y598LfC3wnv
U5inju+D9EtQ0whZPlPrah82qM31y4H6HuPCVu/JScLg74UxfSf38/cTrcbY
ZvaDErI8ptbVPmxQm5uVY9bjwsg3GDegtRrtIZjHTq0mZBlMrat92KA2NyvH
2ttnHb4cqNWELIupdbUPG9Tm5uXA+UtH+yRdoNXQZejzp3tq9c7NdKw+IZkx
ta72YYPa3Lwc6L9EfLXrmAeZB4idtVbjb48Ym1pNSJpMrat92NCaJn2pbY/L
hDYubjxtBlv3U09zXFh+UKsJSZupdbUPGzbeXMoxxjNF3cz1HAi0Wr8filZj
XD/f3QgZn6XqGo96+r52C9gLg/QOvg/47lzcz/dI9gKnVhMyDgc3/7hZ1yMX
V912XHakZGOsZ4o01455kWVDrSZkXKbWVdpIw8bN/fQ/ElIHu2aZaHUf7S+c
80XIPHWENvq3gTqV48JIG/peX3Tn+J5IyBx1pKkN1B3rBMqRuo2TPwjpQlet
3vp7dkMVkJAZMFcdaWIDv3G02daJCVP3ZUgbshdGH+2ShAhN1wIXbaY+k5yZ
q440tYG6oM5coTn4MqQN1Je3jvkSUgbasLRWh9YXvTvqM8mbOetIzMbavbdh
4zN+51XjTFLzZQob1x7yJqQuIa2+u2ZzAQlZGnPXkZCNmC2cq5orlJovU9jA
+wvqx7p99IT0Cdq3rDbjQGzNsYokF+auIyEbZbbwXl42BjQ1X6aygfrx3DF/
QpqC98KQLksfNdewI7kwtQYMYQPtYzFdwTiTspgwNV+msiHjwj46loGQusj+
K3fH9b0JmVoDhrAB/b2UpCuLCVPzZUobqBdRR7IdkYwBfpfQY649QkgaGtC3
jSptLosJU/NlahuXHmwQQghpRioa0Lc2V435gi6HYsLUfJnaBtoT747tioQQ
MiaouyU2antcErRxr5Fe5lWm7ksXG1212SlbhBBCxiFnbQ7pc4q+TK3NMkZn
14MtQggh1Ug9vjQb9wb3XM3n1HyZ0oaAPgDuhUEIIeOQigb0bQN6u615H9LK
nOcUfZnShgZxOOeXEkLI8KSiAX3bgI7U1WakkznPKfoypQ0Nng+eU605Ltsv
VBl48JjN8cXWETIt8n1cmo2La7af0tG99u/2VY652wjZvNRN+yXP9696btEH
fKSfyzng4wC/G0KakooG9G0D47t2De6VOc997POQ4vPok5srX/f0kT/quqUj
dfrSycnPgX43hDQhFQ3o20Ybexjv1MfvMsXn0Sdoj6gzLozavCBy8nOg3w0h
TUhFA1LQZoB4+9RjOeZuI0ad50RtXhA5+Tng74aQuqSiAUNoc5sxxbgPv80u
Y0FSfB59I30AZc+J2rwgcvJzwN8NIXVJRQP6tgHNqDtmydpAf2rVmp91yzF3
G2Wgz7nsOVGbF0ROfg78uyGkDqloQErajKPLmLAUn8dQlD0navOCyMnPEX43
hFSRigakps2Yw1u2z3PdcrQlFRtVyLiw0HOiNi+InPwc4XdDSBWpaEDfNqAV
nx1tyJznLjbakoqNOmBMWGg/bGrzgsjJz5F+N4SUkYoGDGHj3tGG7PEQ2ue5
STnakIqNOsTGhVGbF0ROfo70uyGkDBmXzGOZx1h1zM79vMdoqM0LIic/R/zd
EBLj4NKIz4awgd9Y032TQuVoOuc51ecxNBeTH7V5QeTk58i/G0JCpKIBQ9iA
Vmx7KMfaVc/lrbLRlFRsNAHj51CvrSX/XOpy+rkcqM0kEVLRgJS1GWAur22z
bWqjj3KMbaMpevwctXlB5OTnBL8bQiypaEDq2iz26pQx1ecxBnr8HLV5QeTk
5wS/G0IsqWjAEDaOLWyWlcO22bax0Uc5xrTRBugy9PmYS11OP5cDtZkkQioa
MISNNjar7sG1S8n1tvmmaqMteEafudTl9HM5UJtJIqSiAXPRZmmz3XWw0Uc5
xrLRFrQtZFOX08/lQG0miZCKBgxhA+O3TgOUA33YZfsXp/o8xoZt2gsiJz8n
/t0QAlLRgCFsQEOr2p/blqNsznOqz2NsOBZsQeTk58S/G0JAKhowN20u2784
1ecxNtTmBZGTnxP/bggBqWjAUNrcdB/mJuWQOc+2bTvV5zE21OYFkZOfE/9u
CAGpaMBQNu4Dl+MSSJ/y8xgTavOCyMnPiX83hIBUNGCu2ixznjcdbPRRjqFs
dMo/l7qcfi4HajNJBHwHJfZre1wStnHvwUbVcfVHis+D2jwwOWlWLn5O/Lsh
BKxdt/o/9ePmfsZTj5HPdYR8mh5TQm1eEDn5mcBvh5Clg9hxO0I+yKNsznOO
UJsXRE5+OmozIUMzljYDxOfnkfKaA9TmBZGTn47aTMjQQJt3I+VVNuc5R6jN
CyInPx21mZChGbvfFe8B6Htm2za1eVHk5KejNhMyNFOMibpMkGeKUJsXRE5+
Ov5+CRmaKbR57d7nPOcItXlB5OSnozYTMjQfrvma2n1wmCjflKA2L4ic/HTU
ZkKGBuOyptJI9DvvJ8o7BajNCyInPx21mZChmVKbZc7zeqL8p4bavCBy8tNR
mwkZGvT53ibMP+c5z9TmBZGTn47aTMgY3CfMW+Y8f0xYhqmgNi+InPx01GZC
xmBKbQbQ5RznPFObF0ROfjpqMyFjgN/a1LqIPu/jxGUYG2rzgsjJTzcjbS7W
/3D3dSxqLUL4A7862jh8HUmN9enDr4Ux5praMfAdQdt2TnOeqc0LIic/XSLa
7Ovye+zwaS7QoanL2ideVzuN4fXPqJd6/8vOx9fx2VXr+/BrYaSgzQC/n+vU
hRgRavOCyMlPl4g2a0SnA+epzWEbfWrz5us4fh2d2l+pzW+kos0A2pzLnGdq
84LIyU83U232aYKxHc5XaZVcl7Raiypsr2LXjc21T7spu09rmNfFYHtjRb5v
2hzyK3Zdl1P5vzLpJf9NzE7ML/IN5jGlooc5zXmmNi+InPx089Pm89dx9f+G
Ju3V9ZU/f/NpPku07u77r2/++PT5atsHc8/Rp7v4/5+NpovNu9emrU979HmI
3aO656DyfNhtka+8F+hnEPPjpOzdrI5arff53336q5Tf/1s/r526h9r8yhRr
apeBv2EOc56pzQsiJz9dWvXFNxXafBNdUjoon09a16DbSB/J427Sir5InPth
bB9M3ivRNWMTdtbaD5RLpdloHfN2db5r//mjYb6izRfj18Zcj9kLarNKH4rX
bVuDfV7U5iepaXMuc56pzQsiJz9dWvXFNxXabGPAe/Fsm71rDVHn3mLnQGz4
piVGo26FGXfs3w1uJr2OHV/0Sp1/vENE8n342SDfrdJ1225+kveDiL1o3BxK
b+5d+/IcindNpzY/QfvOqTLVuECXoc9Tz+0aksNut7tfLpdFH/CRfi7ngI9u
OdosOhg63vqeW2jzmx1bzoDNmB+PvGpoc+18a+YXslemzcHn56+dvXYfqc2V
4Lmk+DyWPuf5sF6v79vtdtEHfKSfyzngo1uONkvbba0YYMC4+U2bI3GzxLFj
x82ffcTNxbOvPtbvTW1+JVVtxncFsXMqY8j7hm3aCyInP91CtNn/+1aovt2K
PJpq86Fo0O+r/Shex35tvD5GNcxoc6N8i+r+5lPEXqP+5uKnL/+qPu+ozaWk
qs0A7e1LnfNMbV4QOfnplqXN0KFr8RyjfInpQ1Nt9p/Pxet46WNFetHmkyrT
3ehqqTY3zdfHzvoZvMTJxXMct9i7evsxbV7563eV/qA0/ebPiY/U5jB4F3r7
TicEtDm5uqAHqM0LIic/XYK/R1/vh/qIN4H4bVu8txmvi8Bc3LL7/D127m6Z
7be284DNxztG7L5IviE/a+erbETbKfX14qe/+KSu1X6mhZpz7W2uVPqc1oas
Q8rajL/VEuc8U5sXRE5+ugS1eSnE4v8p8e899p0k2KdMeiep70IAtMcsra2D
2rwgcvLTUZsHI1FtlnZ2afN/6Q8ng5J6XIp3NowxXNKcZ2rzgsjJT0dtHoxY
23wKeI1OsmwLBjFp6s98aXOeqc0LIic/HbWZkLGYgzYDjPNfSlsKtXlB5OSn
ozYTMhbQ5jm0Fy9pzjO1eUHk5KejNhMyFgc3n98b5jzfKlOlD7V5QeTkp5tP
XUF6xvc5c3z2eMxJm8ES5jxTmxdETn66+f/2RsXPOcK6HXNomyylan2QJfma
CHPTZsx5Rh2R8tjyKqjNCyInP9286orRKX72itTrcqz8Wh2zX1ejhjYvxtdE
QBvF3PZMnvucZ2rzgsjJT5eoNkfWoFoVz32OV3pNqsD9cj20XtZK21Lntybt
2q9FeQ2sf2XX7QqWx5R5XXfeklqH682/2Jpnap2vtzXEImV7aHPJumUb5Xdt
Xyr+NtFrCyflNbVjyJznufZ9UJsXRE5+usS0ufjZM0HWepa1mkUPtv78sXhd
n9quL31UNu7F63rSOLdX19fF69rSnyq/nc9Hru+UjUMkP/z/XDzXrpQyi8bL
GtTB+aPF+3rXN2lTLns2/vpdlVnKvfXpomt5+/Jelf/2ecm+G5W+mDLi/7rN
YVME/MqIOWozQLnnOueZ2rwgcvLTJaTNxXPNKq03j30Y1HVb3z/0tzB7F6rr
EvuJLug9KbS2QK+u5nN0Lwp/Xef3sk+UKvNeXb/a9wlj+1y8x6+lz8Z/xvWz
sfW4p/hpn7+rsh6K93eXfeB51fKleO5Rqds2bupvcy5e9+SaY13fBTyXuY59
xvfqVJkqPajNCyInP11a2nwqzB6Pqr5fK20I7Yd89v++Fu/7E1+VnlxsHv78
xusSbN3V+SptvgXy+34/8P/eFmbdzpBN62vTZ+M/3807R6jsjzT2PUSluZnn
9aLNMV8Ks2eGOid/G4m3lzBvti1JreHaAPzm5jjnmdq8IHLy06WlzS9txer8
3evCmzb461of7pHjEMqjeO6pKHsfNtXmu9UaXc6G2hz0r86zCZWlpjaHyqH9
a6LNEqfbQ67L2LK7T5tb3Azmqs1gjnOeqc0LIic/XVra3CVuPvl/l875CWjz
I+b2n1/0p4Y2LzVufutbr6HNL23WMYpnW/gc20i7MmdtBvhbJ1Nn1IDavCBy
8tMl9Dsr6vc36z5LGV8keiPtprGxVlabbR9oKG6+xmz467eior/Z3B/UZmW7
S39zU2229+z88xR/mmiz3Bucc1W89us/2rozA9+lubULa+Y255navCBy8tMl
pM2geI5FuhTPsdh6zPPd66dce7RX+zQrr1kyHhjHp7putXnr08q444PR5rW6
/hZL+s86v0+j9U21eVM8x0vLMxAtjT4bf72NNh+LZ5u+5Ktt1NZm9VnKaMt/
MfnkOG8az2rO2gzwfQh+fxOE2rwgcvLTJabNoIjPFX5oQxGZjxuwYfuCy+Ym
P94BKq6HbATLI/cG0pbqks8j9Ayi87pt/qF8jB/rYv0yZ/tNM4r3+c21fJFn
H3gewXwyYgnaLHOe91MXpAbU5gWRk58uQW2OEYrbCJkZaMefg6ZVgfeLOcx5
pjYviJz8dNRmQsbk4Gb0m6vg7NJfg5TavCBy8tPNqJ4ItamS5YCv5NKPv/7r
v77gmLocfRy/+c1vjqhD8P+h8+rwtaI2L4ic/HQz0maybKb+PZBk6TLXjtq8
IHLy01GbSSJM/XsgydJlvha1eUHk5KejNpNEmPr3QJKk6/o01OYFkZOfbkba
7OfOynyetZ5jXOPeXZ991ZJ/8bpPxCY2p6uF/d5s1cxvW5j1zcZm6t8DSZKu
v1lq84LIyU83L23W62Y0GrNdrMPrUbcsx2N9suK5J8S6KNn7sUUe3/tulFyP
7mXVMr/oeihjMfXvgSRHH99HavOCyMlPt0BtLn72QrRrT/epzaeA/VPfcafX
+mBfm9fSVvsf+/cIuw4ptZmkRh/tXNTmBZGTny5BbS5Zo6pSm73unHxc+Vg/
q3hfezKmeS9rgEXKdvV56DW29DqfsTXN6pzbFM/9j4+x9wm7Hpd6LlXlXxXP
tT+3Ki+9LvamKFkTu8x+F+z387e//e39PxyP0QPg///8T/6kl9/Df/3bv73/
+te/7sVWSvy3v/97/K2nLkZT+npPpDYviJz8dAlpc/Fcu1rWXf40+lNHm3c+
3hQ7eg3ss7cr63Dvzb1Hdd89FAerNLKetayteTFprurzIdTe7ctzNuduqp38
xa5JZ9exvivf39bFVunk3ULWvD4qe/JsLv5+W7bK59MF+/3U2vxvfvWrb30Z
Upv/0e///v1Pf/nLXmwNDd4h8HzqMFNt7mtsCLV5QeTkp0tIm0Hxuh70wWhc
3Tbtt/bZ4rnvgsS5u0LtN6l0Ta+ZfbdxrbKl97rYm8+PvaiK5z6OIZ38MGV4
y7NQ+3SU+ejv03tdnorA/o/+2tuz8/buKo6Wcn80fT5tKfuuxvSlT23+3e9+
14udMcCzwDOpwwy1uc++FWrzgsjJT5eYNgNf7++L9/0au2rzwZzT9h77TKnr
Vxtbh2z5/KztbfHcvyo6Zsunkdj+bd/Euj5a/a94PjFtjj6zJs+nLWXf1Spt
xnXEvDisZiG+/Pd/8Rff6fD/mAb/57/5m+/rAHEp/o3/wybuRZs37pU88X9t
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
/er6I6+Ibzv1zhAq13YIbZb9F9EGa/crtGtSIh3OyXqTNj1salt2LUm5HzGl
rEVp1+BGGnsOn+36oTpuLMvXarNd4zJ0TtYwkXU6NWjj1+uHWqQtW+8bqcsq
63pq7cZ12NPvQaF0Yl/OmVg8VN/gd3UNnO8DavOCyMlPl5g2a4pnu7WOBWUN
6lPFvW/6W3bN6O09chwiaW0/eBttfvs7KB0tvV6SR5k2BzVUlz3i2+O+iP1B
tBkagvo9tF9hSNdkzyRck8+CrHOt92XQtpAW8aOsCy17PgvQI+RnNU/2s9Da
BVui11X5ah9sTGvPIS/cD3v4t84HaXAN5+WIPVdouti064WL33pPjJjO63Zr
+xzUOuU2ZtZAm4eoi6jNCyInPwf6PfSGrf99/Cr7CAfHJvl0UY2ooc2lc6QC
aYeMm9cN4uYm2txH3HweK262OiXaqdMIViugK7hu41ABuiZxp9jSGmTvh9bE
2n5FL/V9sfW/QvkKVdqM/O2+G6KH0FT9LhLD5hGKf+UdR/dNW2SPKgHPXj9/
eT+6h2NmAW1caNuO/qZbQm1eEDn56RLSZh8n63FGof5PGRtm+1utxrxcN9eq
tPnk3wFi45Zt2ltR3d9cpc037UOh+tOL+v3NtbVZXe/S37yLlGvw/uay/RxD
e01pHZL2ceiOL/8jfSw/2V8JQKNs27WA86Jh0F2tkU3yLdNmvSejPuS69Btb
/bbU0WYpF7Q31qcv+2PK+4yNr2Hj43/9o7KYWcD7afA32wFq84LIyU+XljaL
Bl0KM244oBvS3q3bmW/q/136m2We9acqy2dJ2otKK3F9U23eF+/jsLVW79Wz
ET9XFXlU5bv2+dyUDzZO1s8B/7fxvR6nfRW9Dj33KkLf0SG0WfY+lnhWp4/l
J7GhtGfHYnAdv+p9GJvmW6bNktZqs16jW/Z3RJlj7xF1tBn+wEaZNgP4JX3b
dsy8L28dzcX3GW0yu6qEDaA2L4ic/HQJabPgNdr2c77NQy7M/ObiOU+3tF3M
p7O2QnOWVyVlsWkf85K9Xp0q0m+L13HgK3W+ar71m38lZYrmGyp7JN916L7Y
9TJbZYS+o6JDVgvL2oPLtDmkvdJuG7KlEZ2rai+GBqNsotExu2X56rZxIO3j
SCfvB1ZHQ0jfbwhrA2XRY8qQj/giezhrtFbLOwmej30X8M+ibj3T95xnavOC
yMlPl6A2z4nivR1+XQT6aUk1oe8otAP6YMeCyRglSVNXm6X9VcaJybiyOtqM
2LDw46fKwHWJkYWm+eJe2JCxXPAJn/W4LdFveecQLUd6/az0GPbQMxFkHLYg
Y8qBjAWTPEJ92ihf6D0KNotma+iin6V0rGcDqM0LIic/XTdtxr2w0SpOWgJF
uB1+yLUUFkvoO6rnNMl8IXy2MZudQ2X7WfX8I9EsaYOV8dMhWxppr62aSw0d
i/Xd1s1XxnTpOWDyHHR55JnAptjSc6vss4o9E8lT/JPy6Ot6DhX+H5pXZp+d
j/E/Y20uEZC2rznP1OYFkZOfroM2f5k4Yj8r9/OemzWhtm/SjKl/D1Xo8WBL
RfqtqzDribyNB9P2GrRnazDn+dbD14ravCBy8tN10+br6XSCjVZjfwjRTP17
iCFxom5HXyoSr1elsfO30L4dmmNV/Iy7bNt3jPFjXfvcqM0LIic/2373v25f
wwb2mnQ/2jzkevUkA6b9NcSRsVCxsdm5A01GG3rgvaVrnzHGRKJu6TLnmdq8
IHLy07XX5h1sYB9Wl3mfM+mHaX8NZAD6WEcE9VOXOc/U5gWRk5+uvTafxY6j
Ns8e318+6djyCX8KpH/6Gmfddc4ztXlB5OSna6/Nn2LHUZtHpTD7ZfZk8209
lrGZ8KdA+ic4R78lqFvaznmmNi+InPx0LbT569attrNarXrTZq8Rb3syp0bx
s+dGX7FB07xXfn2T3uo/ajPpkSG+R2fXbj4ItXlB5OSna6fNLwM5/TyqzjGc
X58K6z6e7DpUZWtildiyNvRalXo9zJVNq669rYlVPPefuIbKFFrDrKyMNdKt
bTq95pcv/yaWNuCn3KfXVAtqc5Nn3pUhvuN6bc8xkTUzhwTzlerMd6oLxnTF
9uVoyBBtaG3nPFObF0ROfrp22nzTdrw2d15fzMeCn8VzfeeNOS9rOp9L1o/c
+Pv1GtGyliTmdOyK13W6te277nP12nu117yNm7pvZ/K+qv/H9F6vv/0Z0/Li
uZfGd1p1/rFWdvHcR/Kk8r6Z9wnx++Kvfa/Pra6/aLNPr5/54G0Ebb7D0MCy
tSvH0mZomh7HLWt2Djm2G3O6etLSb/T+zR0Ysu1F5jw3adumNi+InPx0DTX1
7udOafrSZlCY/Rm8Zjx0pjB7IZl7X/a/CFwXbZK4cWdsy34aj3hU3Svrf0na
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
uKw7fi+e+3fIM9qq++T8pVD7ciitl/Wz39qutc/ep6s6kurfmCHU5uGgNi+I
nPx05dq80+mHntMc0CbRr8e60eoatELvA1Vbm4vnnlGiadK/+/bO4e+7qdhU
0mpt/jT37L0urrxWhtYreuvDte8mRaDdOuSvOgef9N6TJ/OM7Nrid+XX9+dQ
Xqos8vzsHl2c494NPMs59eHOCWrzgsjJT1euzSedfrPZDDqnWcWYEnMetdb4
cxuvDSetJQ21+Wjj5FBe/vybZgfi5jdNK9S+VkWkzdz7cVO+2zj60VYesR/S
Zh0nv+mtfy/ZeduP9A21WdocUp1HMzfwXKnNw0BtXhA5+enKtflT0qoxYIPW
IV5zT/7fD130miJtqIeO2ixtuvZ4i2+t3oXsR7RZ9rosaysXPd56vbuZ671q
s4/Lb/49pLU2+8/SNnAr2OfcFWrzcFCbF0ROfrqINt/N3Kkhx4BpiuceyN/9
tur8qXhtr7W600SboVG1+khD8WFApx5t3urctXjuDR0daybvIj6t1dpjLDZt
qs2i/cVru3ZrbTbl73WMeobg/a2X+XfkDWrzgsjJTxfX5sfCfkOPAbN4DbF9
ry96WhE3S8z66KcuVB+xapOtjPdEe4ry/mbk/aE+Q8euqtwXc03r54e396bh
Xt+DZSwCY7YqtNn2Ee9C2mzfMUy5H2PBTPmTWodmhhxcg33USSMO2+32Uacv
9YCP9HM5B3x0cW1+zJ1S64CNMubHx4u273VbPPc5vEmbrLr+EkcWr3shXr02
WY28F89+4VsRHhO9Ctiyersvnu3wMn5tq+7/9PlJG7bV4Bet9+de2g0C5fpQ
5dfjtGPaLO8Ut+I5/+pWvI/jvlnNV8/rov59K8x4b9IaavNw4Ld24FF54Ld9
S6AcPJ7HG19yvNbxtV8H7BRKOwReR7ax8yqG3aprm4DmPeZCF5F1ML29h82S
MmlbL2PJlO6tisCc3+I5p/ijMOt7FGb8mzof7Wu2do0vdt7y1tyzLZ7tCRvr
t74eyGtjPlc+N1IL/J05D41MCX7ziAU4diRh7mru1Pl8hi7jeKuvc8Drm9a7
dREfu11avxaB/uMiMMdK5UHdywO8P10qUxEyLHhHHHxMEWkPJFm02e8FmW29
UTz7YaXt+16lwQ1sy/ogWb73kAfUZpIKN8dxicly93OnuBfkE2n77tnmjrEx
cdRmkg74Lo42tojUB6GyxMz7/R66fJu6TIQsHNSD96kLQYjn5EYcX0TqIXOn
1Lwptm8QMjzUZpIKeFdE7NxrOyHpBpqyp5g3RUjmUJtJSiAmC7WZ7gLnyMDo
uVNjz5uK4ccsl84lGqkcu777mxvmvy3MuiUVafkbmhd4D+aYQJISGLOt617o
NcdFTAC6mFObN6XXz5i4HG9rZI6Y90GtX1I5Lk+vE0JmA/5ebEMkKSHjwtb+
36iHOQ9/AmTulF8vbJK63evKXn2mNkf2r/TX1oH1TKjN6WPXeNDajLoQbVYc
60GmBlqM7yY0GvXw5G2YOQJdHmu/qRB+nSpZT3Kr1gG7++sv62BF7o+tP/2y
ppg6/7IOll7/y6TT63WvbT6hcyH7JWVfhdKq+dX7wBpfK3/+7tPJ2p16fc3G
z4SMArT30/8f713Sfoi/W9ZrCpAkQF2Dd0PsL3RXB7V5ZGTulN9vapJ5U37d
LNl38CI6Ket9FM/1nl/WzPLpbur6NaQ3hdlTyuvp3d+/Ll7XzH7ZC8No81tc
as8Vz/00ZC3uaN+98lvSnovnuqSy3sk1kKe8y8jaKEdVlmvxuoe03Qdb58k1
sadBdDh0sH2bTAHqPLwnxr6Xb3vck2H5kuWTWmtksnrath3ruNF/Xnnd0XtS
3YrXdvCXPazU+VPxus8kYs6b+qz1/lvfQuWq0mat+arMwXbp4rlvhN3nSj+D
u42Z7fMJ2NT5S3k+/OedyVP255h8fEFmyFwVW/8xZiZTI+vh8Ls5MZg7hb2p
3E9dMRkxbTZptA5+FGb/4CKyb6HSedGkq9Z0f27jNftURPa5qqHNL3thqHNv
75whzRbtVJ/baLMtny7/NZDn27Mgo4D3JcbMJFXwXURdRG2egC9d3qi1Ribt
T2ihzRIjvh0R+zevfRJLrv35tdenq7fZRZsvkTK9fa9Dumt9HkCbg89LP3cy
KrpPj3sNkBRB3SDfUTISmDt1Op3kuU86LqiFNiPGrV2fSfzq9Vm3b9v2bquP
TbQZ9mvNNZgobn7bk5JMCt4PpW2b/f4kVaQvmn1fI/GlzZeE1hq5FK99yVXa
LPFvrTpNpT8Xr+PCzibfsrj5w8Tc0kcsZdoVZixZSXl66W8u3vvKy7T5VETG
y5HJkLiEfxOSMivH7+gofOnySsXMk78PKd2DljzGaZs0L9rj7/ksnmOTr2Xt
s/76pzm3VTZuPo+gNqvPelz33pTpoPy4eJsxfT0Xr+O0j+Z6VJuVP7fidZx2
mTavTJ4X+zzI6KC+m/zdmBCSBpg75dcaSWZsfKHmMXsdsf2x61BMqrS89B2j
5P6X+b46X297bdJvTDlj85sfNqt8DqWref/D75B/kfKLvxx7RAghCfGXf/mX
eFfn2FBCxgXvTgcePBZwVPbdkeb88R//MdoyL1OXg5DMQJ12cdPXq2Mdl0z8
zcVP7S/+T3rkS5fxvnN3HBtKyNhI3ZYLufibi59Cbv6OxclNtD4nIZmTW52W
i7+5+Cnk5u8YYGwRY2ZCpiG3Oi0Xf3PxU8jN3zHA80RfM+eqETI+udVpufib
i59Cbv4Ojayxz2dKyDTkVqfl4m8ufgq5+Ts0aMdGezZj5h4onvtLch1MUpfc
6rRc/M3FTyE3f4cG479OUxdiCLxO9r5fgF97LPjM/BoexzprdBLiya1Oy8Xf
XPwUcvN3SCRmXk9dkDL8elV2bavQGmGPc/7fe1njsnjuX7ztaHet1qAOrjum
193y6eXfL/npNc8CNqJrg6k8dJlC5ahcF40kQW51Wi7+5uKnkJu/Q3L9gz/4
g2T3oSue+0TIGtRXrbHF+9raj3Neu65qHWtZX/ru7d6K13WwVzXtyr1y39vY
9uJ9n6pj8Vzf++4/H4rn2tc3raHFc39KSb9T11bqPlm/+yT5BZ7bZyzGJ8mQ
W52Wi7+5+Cnk5u9QIOa6H76YuiAhRA9NnIk9GS76euie2Gd/7l6ofZeK515P
pwZ23/aPMOmtNj/8UH7pPSivxeu+V3ofqZe9pbxtfe+mUPstF8+9tSQ/8Y/z
49IltzotF39z8VPIzd+huGBfiy+S7Bf1seDJnBPdkfbettr8Yc59x5kl93TV
5ou5/rKXVCTN2pdLtH2r/S/J7xh4bket5yQ5cqvTcvE3Fz+F3Pwdgu+Y+e/+
7u+S3QuwMPswqvOiU1202fYn6zbrybXZtw/cimfbd9TnQH7SDm6PaHnJ5ORW
p+Xiby5+Crn5OwSnzWaDmDnZfsgJ4uZbyT2jaXPx7M9e2fTFs/26LG6Grr/s
+UySJ7c6LRd/c/FTyM3fvkG9fj+dTtDmZPsgi3Vlf/OqeB8ndQ5pc0DnLsVr
f/NVaVsdu9DS6Bi6jtq817a9Vj/Se90u62/+bp8vOIdrTuRWp+Xiby5+Crn5
2zen9Xp99yS93kjxnAN1KZ7jkrXOHtT1q+iYsSFjmvU47VPxOo753MRu8Vxf
5FrUG6fdRJtl7NateI7Bvilt3qjrF1XGg7F3V9dvxTo8V4skQW51Wi7+5uKn
kJu/ffK9p4WPmWfR/+i1amvbcdV1ad9+zIEKpHncr9qHO9lV97+93xTv85vt
HOqX+0rSrJW9VeC6jMWOvSNsY2UkSZFbnZaLv7n4KeTmb58cVquVxMz7qQsz
BTZmnRv2XaJ4ttsH3zHILMitTsvF31z8FHLzty++97Q4HA6izVn2Ry5Amw+q
Pf7q/53suAFSi9zqtFz8zcVPITd/++I7Zv78/IQu36YuzFQsoY1Xtadn+X61
QMrqNHxXd/76Sp1L/W9f9v7bpg4PPYe1G3+94SZ5lvn54a/J33EOf1MLyqvr
UmpzO24qZk527hQhGVJWp2FcyNm9ahI+t2372XmbfepAyCbGXsb6zdrU4fY5
4Li6dvvnrbydNmNu1g3yjfl58Da0Nqf2N62TB94v9JpG1Obm4Lneb7ebaDP3
LyQkHWJ1GupBzA/QOgBtaDuO8+wP2OyrXydmU/aFD9G0Dg89B4mh24BySZnb
UPbeoYn5ifx1HZza37RJHnjHEL2mNjfnttvt7opZt+kSsjBCdRrqa7Rv3f01
qRO1Lny41zp+417ja4ucL6vH9+41NpIYs43Nsymf0KQOjz0HrQm2zB+uXDtX
3k5Mm0M+b5TNjc+/ipCfB58vfJJxIkP/Ta1N596fmZQjFHuX5bH39zlHbW6K
jZnPlXcsAD8nebZjvsooIntCtrS1Yr/15DTRZt2uKPGkfJZ20irK6nHkqesI
1B91xqfE6u1Ym25XbdYx+d6XceXTfwbKYinTZuftaX0/udd97mNtApq62jz0
33Rnyrt24b2BLyU2Ynls3DPmpzY342pi5izmThWR9bhHyPd7P8iB87j1padq
rZNetJ60IlanhfTDfsZ9qBvxu677vSurx237sfTxtrG5deG22qZ1uH0OIbsX
bxPlPbpqqrTZPk+r91U65lzcT/ushv6bAt2Ovnfhv0sbbZbzgNpcn+/v3+Vy
0dq8iDrYzyWKvmeMpc1+TbGt+vwxZL6+PeBUnXJam6QRXbQZoP5G3avf1y7q
2Jn0VfX4zd+zcs/4SuIjOey74dTaLPGyHqdVVuYqbdaxJTTtZq4Pqc2g77/p
yT3j/qu6f6fKefNp5LPVCmpzf8g+kIL9fiWPXxNrGzgn61nG1uZ60+aqtcB8
mm3J2mKbwDnMl96rNTVXkfvf/PDnH+3TPk1pPOz92sbSR86ty9Y180dZPUWG
pYs247uP37WN67bqqFvHCnjnRfyJels0UPpo5bC/uam1Gd/5T39I2crKXKXN
AM8Az0L0SjOkNg/xN5XnI+8w+v1FbEKz967Z31iXn9pcj+/vnomZ67T1JEHx
XLNar7Gx8deO/rOsKf2mZ1ab1T2xNbRlj4ir5OnPf6j7ZI3rlcrjLvf4c9vi
de3tjbpP/PhQ1w/SDq7LVvJctG0pm2i7vCuE9PrlfKH2rFa+VNU1ZBiaaLON
//BdgXboPtcqQnXsxr1q2t099bkOIZt99Dc7F34Ouv9UtAxlPbvX/vImNoF+
DvidXr1tq4Vt+5ude39WQ/1N1+613FdlO0TV+0bseyPvSdTmepxMzDy7uVPF
+/4TV/W5tM26eN9v4la87j11U9dF00Jx7Spg96g+230rHtrs84F27tX1vT8n
ZZF9KeS9Y10E9rH01zbF+74Zem+uh0+Be6+m3LjvpD6X9hGQQWmizfgbyt8J
3xEdA11dvb5WW8du3bvWnI3tpjbFRqjO6UOb4avoGXyW34XEhVV1Xchm6Dl8
unCMXqcfuK42D/E3lXNa8/eRdEIbbd47jtNuAr6fsqfFg6kL1QavR9Czk4kZ
m2gzNGtnriNuvPl/n4qK/lavuQdv96LOl2nzIw9j61EesRkre6AMNq3o/yPW
j5R/r/yVfTB1HH0oe55kUGJ12jpwXuuCtD/qa0hfpacH9xpP4bP9/p8C55rY
lFg2lrbJdy30HEQTVoG8P1z1/OOQzdBzkHhccwycCxHz05Z3iL8pbNjnvwuc
s9dt+0BZHuCqzlGbq9H7QM5y7pSPH6Ud+NBRm99iYqOhUVs+nbSBN9XmN90N
lK2TNvvzx8LsOR1II3q8Db0zUJsnpWmdFotH22LjJYndyurpKnQsaOmjDodW
aV3oA/scju49Pl677uuChej7b2rzrtue0ATY0rpCbS4nGDN/Uec9Lxm8Fp/V
Z9uPO0rc7O/VbdIvWjpy3Ly2sXHx7Jc/l8XN2k95zzDXjmXaTgalaZ0GXXgb
Y9EBrUf4Dtxd/X7mOjYtfdXha9evNusyoz6Altnn3CTPJn72/TfV/eb4N3xp
0g7SNA9AbS7nEIiZZzd3yuuH7h8Nxc3RfphAbNq2v/kxdsvf9xj35c+99A0X
7fqba2mzym9l0h6tT8q2fm/48Gke48fUNfjVZ91A6pNSnYbvwNB1RUr+xsDv
pm5fe4xU/IQfZe9KfZGKvymCv4HeB1KoM24hKVRb8lU0p3gfo3wv6o/TPhev
47SPJr2MyZLx0hd/fq/yuXkd1Nr8GP+tyq3Lqf0QX2w/bxNtPquY2+r84x2j
eLZhWw2+BfL7jr1D+ZFRyK1Oy8XfXPwUcvO3CXofyFnOndIUag6u/2z7jNeh
WNdf2wR0aa3tleQXzacIrHFZqDnFRXx+8zbyDrGO2AvGLoXqcy4Cc7WlLP7d
xbZ/Sxz/Yc6zr3lacqvTcvE3Fz+F3PxtQihmBmO0Z5CR8HF16ZiOItB/XPz0
C4Ri5kd7P5mE3Oq0XPzNxU8hN3/r8j2GIxAzs62SSH/yWz8zSYLc6rRc/M3F
TyE3f+ti94Gc5dwpMgzFz5hxxsZpkludlou/ufgp5OZvHb5jZrUP5GznThGS
IbnVabn4m4ufQm7+1uESiZkBYyVC0ia3Oi0Xf3PxU8jN3yowzsvuaTHbuVOE
ZEhudVou/ubip5Cbv1WcA3taCHxOhKRPbnVaLv7m4qeQm79lYMzt/Xw+x7SZ
6zwRkj651Wm5+JuLn0Ju/pYR2tNC4NwpQuZBbnVaLv7m4qeQm78xvtfnDOxp
IZymLiAhpBa51Wm5+JuLn0Ju/sbYR9bnFPrcC4wQMhyoz/Auvc3kOGXiby5+
an8PjsTWGhE4d4qQeYD67OZ+9g/O4bhl4m8ufmp/Dy5vMMbrfr1eY7p8mbqA
hJDaHFxedVou/ubip5CbvyFiezQL+2oThJBEyK1Oy8XfXPwUcvM3xOnj46NM
mzl3ipD5kFudlou/ufgp5OZviEtkL0hwm7pwhJBG5Fan5eJvLn4Kufkbokyb
T1MXjhDSiNzqtFz8zcVPITd/Q5RpM+dOETIvcqvTcvE3Fz+F3PwNEdXmqQtG
CGlMbnVaLv7m4qeQm78hYtp8nrpghJDG5Fan5eJvLn4Kufkb4rLf70Pa3Gbu
1No9n+nSj12L50PI0ORWp+Xiby5+Crn5G+IQ2Rdy3cLWFnOlEYcv+cAaau5n
7RpCUiO3Oi0Xf3PxU8jN3xA7rKVtaDt3aluy//NiuFwu1GaSKrnVabn4m4uf
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
zLnLhBBCyLSg3Rp7SVGTCVkY/z9yCVaf
             "], {{0, 446}, {487, 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
            False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSizeRaw -> {487, 446}, PlotRange -> {{0, 487}, {0, 446}}], 
          TraditionalForm]], {189., -189.}, {Center, Center}, {360., 
        360.}]}}, {}}, ImageSize -> 400, PlotRangePadding -> {6, 5}, 
    ContentSelectable -> True, ImageSize -> 400], 
   "\"A morphological operation operates on a binary image by combining all \
pixels in a specified neighborhood\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, BaseStyle -> {FontFamily -> "Ariel", FontSize -> 13}, 
       DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"Ariel\""}], ",", 
             RowBox[{"FontSize", "\[Rule]", "13"}]}], "}"}]}]}], 
     "]"}]& )]], "Output",ExpressionUUID->"6ddbdb0b-0d07-4241-8511-\
c77887b65638"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Erosion and Dilation", "Subsection",
 CellChangeTimes->{{3.55156219582519*^9, 3.5515621967271147`*^9}, {
  3.551611761955303*^9, 3.55161176327455*^9}},
 CellTags->
  "erosion and \
dilation",ExpressionUUID->"47d2c683-a317-42d5-946b-1587d8d54b16"],

Cell[TextData[{
 "Each binary morphological operator is defined by a neighborhood (variously \
called a ",
 StyleBox["structuring element",
  FontSlant->"Italic"],
 ", a ",
 StyleBox["kernel",
  FontSlant->"Italic"],
 ", or a ",
 StyleBox["mask",
  FontSlant->"Italic"],
 ") and a logical operation that combines the elements of the image \
throughout the neighborhood. In the ",
 StyleBox["erosion",
  FontSlant->"Italic"],
 " operation, the elements are combined by logical AND; the output g(x,y) of \
the morphological operation at the point (x,y) is the AND of all the pixel \
values. In words, the output is \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] if every point in the neighborhood is \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] and is zero otherwise. In \
the ",
 StyleBox["dilation",
  FontSlant->"Italic"],
 " operation, the elements are combined by logical OR; the output g(x,y) of \
the morphological operation at the point (x,y) is the OR of all the pixel \
values. In words, the output is \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] if any point in the neighborhood is \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] and is zero otherwise. "
}], "Text",
 CellChangeTimes->{{3.551562217921261*^9, 3.55156222946443*^9}, {
  3.5515623251237793`*^9, 3.5515623308906918`*^9}, {3.5516169367369432`*^9, 
  3.551617184683618*^9}, {3.551621277617983*^9, 3.551621278666205*^9}, {
  3.551659353430175*^9, 3.551659448971959*^9}, {3.5517015461518507`*^9, 
  3.5517015646544647`*^9}},ExpressionUUID->"b057e201-5bb7-43e0-8fd8-\
2ff95813676e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelErodeDilateBW", "=", 
   "\"\<The dilation (left) and erosion (right) of a binary image \
(middle)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoErodeDilateBW", "=", 
   "\"\<Dilation makes the white circles larger; erosion makes them \
smaller.\\n\\nMove the neighborhood size all the way to the left, the \
dilation and erosion are almost indistinguishable.\\n\\nMove the neighborhood \
size all the way to the right: the dilation grows and the erosion shrinks.\\n\
\\nClick 'New Image' a few times to view the effects on a variety of \
synthetic images.\\n\\nChoose the shape to be a horizontalMatrix and observe \
how the dilation and erosion are shaped horizontally.\\n\\nTry the other \
shapes. Can you guess what the CrossMatrix will do?\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"rd", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"setToOne", "=", 
        RowBox[{"Round", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{
              RowBox[{"100", "/", "2"}], ",", 
              RowBox[{"100", "/", "4"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"synImg", "=", 
        RowBox[{"Dilation", "[", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Point", "[", "setToOne", "]"}]}], "}"}], ",", 
            RowBox[{"Background", "\[Rule]", "Black"}]}], "]"}], ",", 
          RowBox[{"DiskMatrix", "[", "60", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RandomInteger", "[", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{"synImg", "=", 
           RowBox[{"RangeFilter", "[", 
            RowBox[{"synImg", ",", "10"}], "]"}]}], ";"}]}], "]"}], ";", 
       RowBox[{"rd", "=", "0"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dilation", "[", 
         RowBox[{"synImg", ",", 
          RowBox[{"neighborhood", "[", "r", "]"}]}], "]"}], ",", "synImg", 
        ",", 
        RowBox[{"Erosion", "[", 
         RowBox[{"synImg", ",", 
          RowBox[{"neighborhood", "[", "r", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rd", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<New Image\>\"", ",", 
        RowBox[{"rd", "=", "1"}]}], "]"}], "&"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "neighborhood", ",", "DiskMatrix", ",", 
           "\"\<neighborhood shape\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "IdentityMatrix", ",", "DiskMatrix", ",", "BoxMatrix", ",", 
           "CrossMatrix", ",", "inverseCrossMatrix", ",", "verticalMatrix", 
           ",", "horizontalMatrix", ",", "DiamondMatrix"}], "}"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Spacer", "[", "30", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", "20", ",", "\"\<neighborhood size\>\""}], "}"}], 
         ",", "1", ",", "60", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoErodeDilateBW", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelErodeDilateBW", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"r", ",", "rd", ",", "neighborhood"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5516174690755053`*^9, 3.5516174746833363`*^9}, {
   3.551617527135717*^9, 3.551617542863142*^9}, {3.551617707516865*^9, 
   3.551617728188422*^9}, {3.5516177796978207`*^9, 3.551617802344297*^9}, {
   3.5516178355958643`*^9, 3.5516179504222727`*^9}, {3.551617982262472*^9, 
   3.5516180611577578`*^9}, {3.551618103144698*^9, 3.551618148592153*^9}, {
   3.551618236891322*^9, 3.5516182809780912`*^9}, {3.551618316189397*^9, 
   3.551618355541202*^9}, {3.551618508235965*^9, 3.551618511355933*^9}, {
   3.5516185829824867`*^9, 3.5516186789819202`*^9}, {3.551618744790051*^9, 
   3.551618775359517*^9}, {3.551618888456949*^9, 3.551618978433556*^9}, {
   3.551619008931736*^9, 3.5516190747907143`*^9}, {3.551619116706895*^9, 
   3.551619137136415*^9}, {3.5516191825965977`*^9, 3.551619291075015*^9}, {
   3.551619397458973*^9, 3.551619486330082*^9}, {3.551619530445784*^9, 
   3.551619553689171*^9}, {3.5516197784595537`*^9, 3.5516198329845667`*^9}, 
   3.55161993465836*^9, {3.551619966662333*^9, 3.551620040540949*^9}, {
   3.551720485374797*^9, 3.551720487180801*^9}, {3.552573606323991*^9, 
   3.552573674418845*^9}, {3.552595730700859*^9, 3.5525957555566463`*^9}, {
   3.5526700422743196`*^9, 3.552670355612523*^9}, 3.552670396062684*^9, {
   3.552759641759603*^9, 3.552759664038877*^9}, {3.5530200256379843`*^9, 
   3.5530200326203747`*^9}, 3.5532615749644537`*^9},
 CellTags->
  "labelErodeDilateBW",ExpressionUUID->"0937552f-696a-4fdb-bdd5-a717a33c1cab"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`neighborhood$$ = 
    DiskMatrix, $CellContext`r$$ = 20, $CellContext`rd$$ = 0, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rd$$], 1, ""}, 
      Dynamic[Button["New Image", $CellContext`rd$$ = 1]& ]}, {{
       Hold[$CellContext`neighborhood$$], DiskMatrix, "neighborhood shape"}, {
      IdentityMatrix, DiskMatrix, BoxMatrix, 
       CrossMatrix, $CellContext`inverseCrossMatrix, \
$CellContext`verticalMatrix, $CellContext`horizontalMatrix, DiamondMatrix}}, {{
       Hold[$CellContext`r$$], 20, "neighborhood size"}, 1, 60, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[30], 
         Manipulate`Place[2], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Dilation makes the white circles larger; erosion makes them \
smaller.\n\nMove the neighborhood size all the way to the left, the dilation \
and erosion are almost indistinguishable.\n\nMove the neighborhood size all \
the way to the right: the dilation grows and the erosion shrinks.\n\nClick \
'New Image' a few times to view the effects on a variety of synthetic images.\
\n\nChoose the shape to be a horizontalMatrix and observe how the dilation \
and erosion are shaped horizontally.\n\nTry the other shapes. Can you guess \
what the CrossMatrix will do?", WindowTitle -> "Notes", WindowFloating -> 
            True]], Appearance -> None, BaseStyle -> {}, 
          DefaultBaseStyle -> {}]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {1000., {196., 202.5128833301099}}, Typeset`update$$ = 0,
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`neighborhood$12434$$ = 0, $CellContext`r$12435$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`neighborhood$$ = 
        DiskMatrix, $CellContext`r$$ = 20, $CellContext`rd$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`neighborhood$$, $CellContext`neighborhood$12434$$, 
         0], 
        Hold[$CellContext`r$$, $CellContext`r$12435$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (If[$CellContext`rd$$ == 1, $CellContext`setToOne = Round[
            Abs[
             RandomVariate[
              NormalDistribution[100/2, 100/4], {8, 
              2}]]]; $CellContext`synImg = Dilation[
            Graphics[{White, 
              Point[$CellContext`setToOne]}, Background -> Black], 
            DiskMatrix[60]]; 
         If[RandomInteger[] == 
           1, $CellContext`synImg = RangeFilter[$CellContext`synImg, 10]; 
           Null]; $CellContext`rd$$ = 0; Null]; GraphicsRow[{
          Dilation[$CellContext`synImg, 
           $CellContext`neighborhood$$[$CellContext`r$$]], \
$CellContext`synImg, 
          Erosion[$CellContext`synImg, 
           $CellContext`neighborhood$$[$CellContext`r$$]]}, ImageSize -> 
         800]), "Specifications" :> {{{$CellContext`rd$$, 1, ""}, 
         Dynamic[
         Button["New Image", $CellContext`rd$$ = 
           1]& ]}, {{$CellContext`neighborhood$$, DiskMatrix, 
          "neighborhood shape"}, {
         IdentityMatrix, DiskMatrix, BoxMatrix, 
          CrossMatrix, $CellContext`inverseCrossMatrix, \
$CellContext`verticalMatrix, $CellContext`horizontalMatrix, DiamondMatrix}, 
         ControlPlacement -> 1}, {{$CellContext`r$$, 20, "neighborhood size"},
          1, 60, 1, ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[30], 
          Manipulate`Place[2], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Dilation makes the white circles larger; erosion makes them \
smaller.\n\nMove the neighborhood size all the way to the left, the dilation \
and erosion are almost indistinguishable.\n\nMove the neighborhood size all \
the way to the right: the dilation grows and the erosion shrinks.\n\nClick \
'New Image' a few times to view the effects on a variety of synthetic images.\
\n\nChoose the shape to be a horizontalMatrix and observe how the dilation \
and erosion are shaped horizontally.\n\nTry the other shapes. Can you guess \
what the CrossMatrix will do?", WindowTitle -> "Notes", WindowFloating -> 
             True]], Appearance -> None, BaseStyle -> {}, 
           DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The dilation (left) and erosion (right) of a binary image \
(middle)", Medium], 
        TrackedSymbols -> {$CellContext`r$$, $CellContext`rd$$, \
$CellContext`neighborhood$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{1058., {278.91754141980783`, 286.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`setToOne = {{82, 95}, {5, 65}, {27, 78}, {
        67, 63}, {54, 57}, {33, 78}, {38, 1}, {49, 25}}, $CellContext`synImg = 
       Image[CompressedData["
1:eJztnUuOLMlxRVPiRENtQbvQlENNKWgBJNQiNGkBTQGCFpD70d5qAU/1e/1e
ZXhEunuYXTMLPwegAKpR/jl96ZWV4WH2T3/5rz/9x9/fbre//cPr//nTn//n
j7/99uf//dd/fP0v//br3/7zr7/+8u//8ut///LXX37757/84fX/+faf//u7
2+2X1//AMS/fDIjeRHaQLADJApAsAMkCkCwAyQKQLADJApAsAMkCkCwAyQKQ
LADJAu4WlqM3kR4kC0CyACQLQLKAEpLvL1+5d/yTTFh8vHBd3jsPE/5ktflP
0qnOK/nekNhHOtFJJd9nBf8kOo/nlJLvJw1/kEezwaFsviITxW+kiXMyyTYh
/kEOzakkWyt+I4Pm8+dFprU0SWA5jWSPGH8QH+bT8bFahpfiN8I1p5DsdFL8
INhyBsnujqMtn92gxQr8HUcfGdGSBTH+INLyyU0GTz9CpOVQyULHoZbP7TNy
7mGqWo6beYZAy1GS5Y4jLZ/ZbNC008RZDpEc4jjQ8on9Rsx5joKWp6eMcvxq
2VDcENOW5ROep96xPDldoOOCB4Z2NiOqWZ6bLNZxuWNZOJUhxf4mmZop2nFg
lKcsq+YxptZXRZpZ7ClleWKSDI4jD4xxy4IpfKj0NGp8hhyOQ6M8+vB4Ynwv
a4MUuiUwPHoWx7FRHrM8PDiSPxk4MsaH9vQ2RPQNuX7NowPncRwe5Vt35HxG
1RAe5d4wDw6ayXGGKPdpHhwSyVuev4w0Op7GXicJzosPnsR5bLBcjrNE+Y3D
OI8NheQD9l91HhsHyU9ov7Q/OESIyn3SHMpfeSwyMfTD2RwnjPJ5kCwAyQKQ
LADJ/qT7cJH248UJ8jm+YJSRLADJApA8yUiVQSRP8rjmI9VInqS98rZoJE+y
v/qtZyRPcriBB81InuTJFr54RvIkz3fxQzOSJ+nZx3fNSJ6kbycflpE8SedW
3jWvIdmhCnz3Zl4nu7rko/rwp1QPbOd+5e+Tn9WHPyV6aEMJJZsZ7pls1vPQ
jq4peeQtmznNjgIUnJY8XB9+Js5Om1dxUvJcndFhzebb1nJK8nwp10HNpluW
c+rDxanf40Mzm+03hBNBPluReCTMRrsNYlqyRdHnfs0GOw1kVrLRJ/5eyyaT
RTF7JJv9VdW5AKPZYpgLsmV9+L4jw2y6CKYkG3850GPZdEIxU6eF+RcwHasw
nlHKTJAdvuR6btl8Sh0zQXb5IvHpQhzmVDER5KAmYC6TahiX7PaF+BPLTrMK
GD8tHB86HC/GbVp3hoPs+mDn0LLjvL4MB9n54dnRelwn9mQ4yO7t7K4nOVuQ
D1fkPLMX+Rwfrcl9ah9GDwvJbYZdy4K5HegI8sNtK82yriW5Q2/Esnb+3Qcs
5Tz7QX5228p7YdeRvOd4+KKKamWxi5piZyeahrhTa4te1QSt/03Gh/iT5oER
vahxGmFJEeIPmlGOXtQw210kUvytHeXoNY3Schy9pi+0ohy9pkE2W8gV4zca
UY5e0hiPjvMpri956zh6RQ0a50X0kkYo4bgV5egVDfDgOONR8c42ytEr6mfj
OHpBu2yibDGm5LvaOo59JAc8dcjseHtemIwpf36W2vE2yjZj+v4S2lwCTu7Y
SbLn7/rtPevsjt0kCy/zpXe8WbPJmN8373D3t6LjTZRNh7TW3Hojo4JjV8mm
Tyh23hSv4NhZslmc914rKhFkf8kGcd4vd1DDsULy7cz9h8M6NEUcP368MBly
z8h+3aTJikpFHD8qsR+xrbpRAWy8NliVIMslW1LGcWHJdYJcV3Ihx3UlF3Js
L1nUtaZSkB0kSxyXCnJVyaWCXFVyKcdIVlBTcq3Twlyy5sNFLcf2khWOiwW5
puRijpEswPr7ZMmRXPu0MJAscFwtyEhWYCyZD3AtrCUrHFc7ko0lE+QWxnfh
+N6ihfGtTiS3sJUseiiyuGSJ42qSbd8Z4eleE9u3nwhyE1PJoiBXk2z6RqrK
cTnJmw2YDobkb8ZVAmRBriZ5uwHTwZD8zVayLsi1JFvWIBI6Lia5sYHZoYSO
S0m2rAsn7S5fSnJrA5NDKYNcSbJhrU6t40KSDavOih1XktzewMxIYsd1JNtV
Apc7LiR5ZwPjA8kdl/k+2aw7Q4DjKlE26zMS4riGZLOOOTGOi0jeX//QMEGO
S0g26mIWpbiEZKN+fHGOC3y8sOksGXZUvJNdskmP1FjF6SWbdPsNVpxdskXf
6ugY35IfygYd2BMovqWOcoefJwPkUJxZco+gw59PYviW97zoU3Tw43kU37JG
uVNR+2eTGb4ljXKvpMcf6yyDpyef5H5Pw1UGo8gmObOraZKdF1dUfMsV5UvG
+I08Ub6s4luWKKf+xXWeDFG+tuE3oi1fPMSfRDawX8PwLSjK2f+AMEcjucrf
Z05Iorye1gcC+isuiLy/4pK4S47eYAaco0yQ33G1jONPHC3j+HfcLOP4J2Tt
WJfGxTKOH3CwjOMN5pZx3MDYMo6bWPZvXvC7tl7MwoziA4ws4/gQiyODo+Ip
ZzWjuItTZwaKO5kPMzEeYE4zige5bxu6PzOM4glG4ozhaTrjTIhP8ub5SPSS
t1U8uH/c/GnoRbAx9zJvwwAAAAAAAAAAAAAAAAAsBg/zXOGxtDNcsPCGq0Lu
cOnNG65vusNFZHe4Uu8PL4e4w2tO7vDCnj+8euoPL1G7QzkAfyhs4Q8lWvyh
2JA/lM3yhwJw/lDK0B+KcvpDeVl/KJQsgJLf/lC83h/aMPhDQxEBotY40dsM
RdTkae0oqxpprRxlWbeyhaMs7Ai3rmVl171VDwxpa8NVo6xtH7lmlMU9OteM
sroP6pJRRrI/8o6+K54X+q7J60U5oDX1elEOaf8dvWk1SPYnppH9YudFhOPl
ooxkAUj2J+RIXu1QjnG8WJSRLADJApAsAMn+BH24WOvjRZTjpaKMZAFIFoBk
AUgWgGQBSBaAZAFIFoBkAUgWgGQBSBaAZAFIFsD3yQp4MiIAyQKQLADJApAs
gLtwCrjVKQDJApAsgHdGFPD2kwAkC+CNVAW8Wy2AKgEKqHchAMkCqEGkgGpa
AqgLp4AKhwKo1amAqrMKqJ8sgErgCqhpL4DuDAroM6KAjjkK6P0kgC5mCujH
p4DOkgrokaqAbr8K6Fvtw/3lKzg25d60am15Ycd3l9Di+Ad3keBXxas6vqsM
LxtjXYiXdSwM8apHBYr94RKLO8TYHRT7o7wjtKhioeNVDeuOimVDrIrxy8KG
HRxvvrV7WVvwzSXHD98/L633HZ50+MMzO394+uwP9yj84UaQP9xtE8AtTX+4
b+wPN+f94R0QAbzN5A/v5QngDVN/eFfaH976F0D9Cn+4xCKAmkL+UB1LAHXe
BCDZH2pvCqCKrD/UQxZAZW8BSPaHbgsC6BsiAMkCkOwPXckE0F9PAJIFIFkA
kgUg2R86qguIcrxUlJEsAMkCkCwAyQKQLADJApAsAMkCkCwAyQKQLADJApAs
AMnQg0lOojeRHSQLQLIAJAtAsgAkC0CyACQLQLIAJAtAsgAkC0CyACQLQLIA
k9u/0ZtID5IFIFkAkgUgWUAJyY8N1e8d/yQTFh8vXJfXbKi+28A+qeq8kucb
qqcTnVTy6V7UqTynlGzT0zCPZoND2XxFZm0j08Q5mWTrxpw5NKeS7NH7NIPm
8+dFprU0SWA5jWS/Fr7xYT4dH6tluLaBi9acQvLVm2dlkHz55llnN2ixAknz
rFDN0ZKX6IZzcpPB048QaTlU8iqNWs7tM3LuYapajpt5hkDLUZKXagpwZrNB
004TZzlE8mq1kU/sN2LOcxS0PD3lgi+nT1uWT3ieesfy5HSBjgseGNrZjKhm
eW6yWMfljmXhVIYU+5tkaqZox5Hlb2Ysq+YxptZXRZpZ7ClleWKSDI5D62UN
WxZM4UOlp1HjM+RwHFv6bfDh8cT4XtYGKXRLYHj0LI6jqxiOWB4eHMmfDBwZ
40N7ehsi+oZcv+bRgfM4Do/yrTtyPqNqCI9yb5gHB83kOEOU+zQPDonkLc9f
RhodT2OvkwTnxQdP4jw2WC7HWaL8xmGcx4ZC8gH7rzqPjYPkJ7Rf2h8cIkTl
PmkO5a88FpkY+uFsjhNG+TxIFoBkAUgWgGR/0n24SPvx4gT5HF8wykgWgGQB
SJ5kpMogkid5XPORaiRP0l55WzSSJ9lf/dYzkic53MCDZiRP8mQLXzwjeZLn
u/ihGcmT9Ozju2YkT9K3kw/LSJ6kcyvvmteQ7FAFvnszr5NdXfJRffhTqge2
c7/y98nP6sOfEj20oYSSzQz3TDbreWhH15Q88pbNnGZHAQpOSx6uDz8TZ6fN
qzgpea7O6LBm821rOSV5vpTroGbTLcs59eHi1O/xoZnN9hvCiSCfrUg8Emaj
3QYxLdmi6HO/ZoOdBjIr2egTf69lk8mimD2Szf6q6lyA0WwxzAXZsj5835Fh
Nl0EU5KNvxzosWw6oZip08L8C5iOVRjPKGUmyA5fcj23bD6ljpkgu3yR+HQh
DnOqmAhyUBMwl0k1jEt2+0L8iWWnWQWMnxaODx2OF+M2rTvDQXZ9sHNo2XFe
X4aD7Pzw7Gg9rhN7Mhxk93Z215OcLciHK3Ke2Yt8jo/W5D61D6OHheQ2w65l
wdwOdAT54baVZlnXktyhN2JZO//uA5Zynv0gP7tt5b2w60jeczx8UUW1sthF
TbGzE01D3Km1Ra9qgtb/JuND/EnzwIhe1DiNsKQI8QfNKEcvapjtLhIp/taO
cvSaRmk5jl7TF1pRjl7TIJst5IrxG40oRy9pjEfH+RTXl7x1HL2iBo3zInpJ
I5Rw3Ipy9IoGeHCc8ah4Zxvl6BX1s3EcvaBdNlG2GFPyXW0dxz6SA546ZHa8
PS9MxpQ/P0vteBtlmzF9fwltLgEnd+wk2fN3/faedXbHbpKFl/nSO96s2WTM
75t3uPtb0fEmyqZDWmtuvZFRwbGrZNMnFDtvildw7CzZLM57rxWVCLK/ZIM4
75c7qOFYIfl25v7DYR2aIo4fP16YDLlnZL9u0mRFpSKOH5XYj9hW3agANl4b
rEqQ5ZItKeO4sOQ6Qa4ruZDjupILObaXLOpaUynIDpIljksFuarkUkGuKrmU
YyQrqCm51mlhLlnz4aKWY3vJCsfFglxTcjHHSBZg/X2y5EiufVoYSBY4rhZk
JCswlswHuBbWkhWOqx3JxpIJcgvju3B8b9HC+FYnklvYShY9FFlcssRxNcm2
74zwdK+J7dtPBLmJqWRRkKtJNn0jVeW4nOTNBkwHQ/I34yoBsiBXk7zdgOlg
SP5mK1kX5FqSLWsQCR0Xk9zYwOxQQselJFvWhZN2ly8lubWByaGUQa4k2bBW
p9ZxIcmGVWfFjitJbm9gZiSx4zqS7SqByx0XkryzgfGB5I7LfJ9s1p0hwHGV
KJv1GQlxXEOyWcecGMdFJO+vf2iYIMclJBt1MYtSXEKyUT++OMcFPl7YdJYM
OyreyS7ZpEdqrOL0kk26/QYrzi7Zom91dIxvyQ9lgw7sCRTfUke5w8+TAXIo
ziy5R9DhzycxfMt7XvQpOvjxPIpvWaPcqaj9s8kM35JGuVfS4491lsHTk09y
v6fhKoNRZJOc2dU0yc6LKyq+5YryJWP8Rp4oX1bxLUuUU//iOk+GKF/b8BvR
li8e4k8iG9ivYfgWFOXsf0CYo5Fc5e8zJyRRXk/rAwH9FRdE3l9xSdwlR28w
A85RJsjvuFrG8SeOlnH8O26WcfwTsnasS+NiGccPOFjG8QZzyzhuYGwZx00s
+zcv+F1bL2ZhRvEBRpZxfIjFkcFR8ZSzmlHcxakzA8WdzIeZGA8wpxnFg9y3
Dd2fGUbxBCNxxvA0nXEmxCd583wkesnbKh7cP27+NPQi2Jh7mbdhAAAAAAAA
AAAAAAAAABaDh3mu8FjaGS5YeMNVIXe49OYN1zfd4SKyO1yp94eXQ9zhNSd3
eGHPH1499YeXqN2hHIA/FLbwhxIt/lBsyB/KZvlDATh/KGXoD0U5/aG8rD8U
ShZAyW9/KF7vD20Y/KGhiABRa5zobYYiavK0dpRVjbRWjrKsW9nCURZ2hFvX
srLr3qoHhrS14apR1raPXDPK4h6da0ZZ3Qd1ySgj2R95R98Vzwt91+T1ohzQ
mnq9KIe0/47etBok+xPTyH6x8yLC8XJRRrIAJPsTciSvdijHOF4sykgWgGQB
SBaAZH+CPlys9fEiyvFSUUayACQLQLIAJAtAsgAkC0CyACQLQLIAJAtAsgAk
C0CyACQL4PtkBTwZEYBkAUgWgGQBSBbAXTgF3OoUgGQBSBbAOyMKePtJAJIF
8EaqAt6tFkCVAAXUuxCAZAHUIFJANS0B1IVTQIVDAdTqVEDVWQXUTxZAJXAF
1LQXQHcGBfQZUUDHHAX0fhJAFzMF9ONTQGdJBfRIVUC3XwX0rfbh/vIVHJty
b1q1tryw47tLaHH8g7tI8KviVR3fVYaXjbEuxMs6FoZ41aMCxf5wicUdYuwO
iv1R3hFaVLHQ8aqGdUfFsiFWxfhlYcMOjjff2r2sLfjmkuOH75+X1vsOTzr8
4ZmdPzx99od7FP5wI8gf7rYJ4JamP9w39oeb8/7wDogA3mbyh/fyBPCGqT+8
K+0Pb/0LoH6FP1xiEUBNIX+ojiWAOm8CkOwPtTcFUEXWH+ohC6CytwAk+0O3
BQH0DRGAZAFI9oeuZALorycAyQKQLADJApDsDx3VBUQ5XirKSBaAZAFIFoBk
AUgWgGQBSBaAZAFIFoBkAUgWgGQBSBaAZOjBJCfRm8gOkgUgWQCSBSBZAJIF
IFkAkgUgWQCSBSBZAJIFIFkAkgUgWYDJ7d/oTaQHyQKQLADJApAsoITkx4bq
945/kgmLjxeuy2s2VN9tYJ9UdV7J8w3V04lOKvl0L+pUnlNKtulpmEezwaFs
viKztpFp4pxMsnVjzhyaU0n26H2aQfP58yLTWpoksJxGsl8L3/gwn46P1TJc
28BFa04h+erNszJIvnzzrLMbtFiBpHlWqOZoyUt0wzm5yeDpR4i0HCp5lUYt
5/YZOfcwVS3HzTxDoOUoyUs1BTiz2aBpp4mzHCJ5tdrIJ/YbMec5ClqennLB
l9OnLcsnPE+9Y3lyukDHBQ8M7WxGVLM8N1ms43LHsnAqQ4r9TTI1U7TjyPI3
M5ZV8xhT66sizSz2lLI8MUkGx6H1soYtC6bwodLTqPEZcjiOLf02+PB4Ynwv
a4MUuiUwPHoWx9FVDEcsDw+O5E8GjozxoT29DRF9Q65f8+jAeRyHR/nWHTmf
UTWER7k3zIODZnKcIcp9mgeHRPKW5y8jjY6nsddJgvPigydxHhssl+MsUX7j
MM5jQyH5gP1XncfGQfIT2i/tDw4RonKfNIfyVx6LTAz9cDbHCaN8HiQLQLIA
JAtAsj/pPlyk/XhxgnyOLxhlJAtAsgAkTzJSZRDJkzyu+Ug1kidpr7wtGsmT
7K9+6xnJkxxu4EEzkid5soUvnpE8yfNd/NCM5El69vFdM5In6dvJh2UkT9K5
lXfNa0h2qALfvZnXya4u+ag+/CnVA9u5X/n75Gf14U+JHtpQQslmhnsmm/U8
tKNrSh55y2ZOs6MABaclD9eHn4mz0+ZVnJQ8V2d0WLP5trWckjxfynVQs+mW
5Zz6cHHq9/jQzGb7DeFEkM9WJB4Js9Fug5iWbFH0uV+zwU4DmZVs9Im/17LJ
ZFHMHslmf1V1LsBothjmgmxZH77vyDCbLoIpycZfDvRYNp1QzNRpYf4FTMcq
jGeUMhNkhy+5nls2n1LHTJBdvkh8uhCHOVVMBDmoCZjLpBrGJbt9If7EstOs
AsZPC8eHDseLcZvWneEguz7YObTsOK8vw0F2fnh2tB7XiT0ZDrJ7O7vrSc4W
5MMVOc/sRT7HR2tyn9qH0cNCcpth17Jgbgc6gvxw20qzrGtJ7tAbsaydf/cB
SznPfpCf3bbyXth1JO85Hr6oolpZ7KKm2NmJpiHu1NqiVzVB63+T8SH+pHlg
RC9qnEZYUoT4g2aUoxc1zHYXiRR/a0c5ek2jtBxHr+kLrShHr2mQzRZyxfiN
RpSjlzTGo+N8iutL3jqOXlGDxnkRvaQRSjhuRTl6RQM8OM54VLyzjXL0ivrZ
OI5e0C6bKFuMKfmuto5jH8kBTx0yO96eFyZjyp+fpXa8jbLNmL6/hDaXgJM7
dpLs+bt+e886u2M3ycLLfOkdb9ZsMub3zTvc/a3oeBNl0yGtNbfeyKjg2FWy
6ROKnTfFKzh2lmwW573XikoE2V+yQZz3yx3UcKyQfDtz/+GwDk0Rx48fL0yG
3DOyXzdpsqJSEcePSuxHbKtuVAAbrw1WJchyyZaUcVxYcp0g15VcyHFdyYUc
20sWda2pFGQHyRLHpYJcVXKpIFeVXMoxkhXUlFzrtDCXrPlwUcuxvWSF42JB
rim5mGMkC7D+PllyJNc+LQwkCxxXCzKSFRhL5gNcC2vJCsfVjmRjyQS5hfFd
OL63aGF8qxPJLWwlix6KLC5Z4riaZNt3Rni618T27SeC3MRUsijI1SSbvpGq
clxO8mYDpoMh+ZtxlQBZkKtJ3m7AdDAkf7OVrAtyLcmWNYiEjotJbmxgdiih
41KSLevCSbvLl5Lc2sDkUMogV5JsWKtT67iQZMOqs2LHlSS3NzAzkthxHcl2
lcDljgtJ3tnA+EByx2W+TzbrzhDguEqUzfqMhDiuIdmsY06M4yKS99c/NEyQ
4xKSjbqYRSkuIdmoH1+c4wIfL2w6S4YdFe9kl2zSIzVWcXrJJt1+gxVnl2zR
tzo6xrfkh7JBB/YEim+po9zh58kAORRnltwj6PDnkxi+5T0v+hQd/Hgexbes
Ue5U1P7ZZIZvSaPcK+nxxzrL4OnJJ7nf03CVwSiySc7sappk58UVFd9yRfmS
MX4jT5Qvq/iWJcqpf3GdJ0OUr234jWjLFw/xJ5EN7NcwfAuKcvY/IMzRSK7y
95kTkiivp/WBgP6KCyLvr7gk7pKjN5gB5ygT5HdcLeP4E0fLOP4dN8s4/glZ
O9alcbGM4wccLON4g7llHDcwtozjJpb9mxf8rq0XszCj+AAjyzg+xOLI4Kh4
ylnNKO7i1JmB4k7mw0yMB5jTjOJB7tuG7s8Mo3iCkThjeJrOOBPik7x5PhK9
5G0VD+4fN38aehFszL3M2zAAAAAAAAAAAAAAAAAAi8HDPFd4LO0MFyy84aqQ
O1x684brm+5wEdkdrtT7w8sh7vCakzu8sOcPr576w0vU7lAOwB8KW/hDiRZ/
KDbkD2Wz/KEAnD+UMvSHopz+UF7WHwolC6Dktz8Ur/eHNgz+0FBEgKg1TvQ2
QxE1eVo7yqpGWitHWdatbOEoCzvCrWtZ2XVv1QND2tpw1Shr20euGWVxj841
o6zug7pklJHsj7yj74rnhb5r8npRDmhNvV6UQ9p/R29aDZL9iWlkv9h5EeF4
uSgjWQCS/Qk5klc7lGMcLxZlJAtAsgAkC0CyP0EfLtb6eBHleKkoI1kAkgUg
WQCSBSBZAJIFIFkAkgUgWQCSBSBZAJIFIFkAkgXwfbICnowIQLIAJAtAsgAk
C+AunAJudQpAsgAkC+CdEQW8/SQAyQJ4I1UB71YLoEqAAupdCECyAGoQKaCa
lgDqwimgwqEAanUqoOqsAuonC6ASuAJq2gugO4MC+owooGOOAno/CaCLmQL6
8Smgs6QCeqQqoNuvAvpW+3B/+QqOTbk3rVpbXtjx3SW0OP7BXST4VfGqju8q
w8vGWBfiZR0LQ7zqUYFif7jE4g4xdgfF/ijvCC2qWOh4VcO6o2LZEKti/LKw
YQfHm2/tXtYWfHPJ8cP3z0vrfYcnHf7wzM4fnj77wz0Kf7gR5A932wRwS9Mf
7hv7w815f3gHRABvM/nDe3kCeMPUH96V9oe3/gVQv8IfLrEIoKaQP1THEkCd
NwFI9ofamwKoIusP9ZAFUNlbAJL9oduCAPqGCECyACT7Q1cyAfTXE4BkAUgW
gGQBSPaHjuoCohwvFWUkC0CyACQLQLIAJAtAsgAkC0CyACQLQLIAJAtAsgAk
C0DyB/8PzYhTrQ==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> 
         False], $CellContext`inverseCrossMatrix[
         Pattern[$CellContext`r, 
          Blank[]]] := 
       1 - CrossMatrix[$CellContext`r], $CellContext`verticalMatrix[
         Pattern[$CellContext`r, 
          Blank[]]] := 
       Module[{}, $CellContext`out = 
          ConstantArray[0, {$CellContext`r, $CellContext`r}]; 
         Part[$CellContext`out, All, 
            Round[($CellContext`r + 1)/2]] = 
          1; $CellContext`out], $CellContext`horizontalMatrix[
         Pattern[$CellContext`r, 
          Blank[]]] := 
       Module[{}, $CellContext`out = 
          ConstantArray[0, {$CellContext`r, $CellContext`r}]; 
         Part[$CellContext`out, 
            Round[($CellContext`r + 1)/2], All] = 1; $CellContext`out]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelErodeDilateBW",ExpressionUUID->"ec73d8c0-18e9-4e8a-9cc9-a16495b4d2b7"]
}, Open  ]],

Cell["\<\
HW: In the code above, the figures are generated (somewhat randomly) by \
placing a set of white points on a black background and then dilating (with a \
DiskMatrix structuring element). Change the code to dilate with one of the \
other neighborhoods (IdentityMatrix, BoxMatrix, CrossMatrix, \
inverseCrossMatrix, verticalMatrix, horizontalMatrix, or DiamondMatrix) and \
explain the differences in the generated figures.\
\>", "Text",
 CellChangeTimes->{{3.551636752785576*^9, 
  3.5516369272998533`*^9}},ExpressionUUID->"5f5ffd45-e62a-40b2-8a0a-\
ed19eb7ab73a"],

Cell["\<\
Dilation tends to make the white blobs larger (and the black areas smaller) \
while erosion tends to make the white areas smaller (and the black areas \
larger). \
\>", "Text",
 CellChangeTimes->{{3.551619624568102*^9, 
  3.5516196874362926`*^9}},ExpressionUUID->"f011b4f7-a877-4c1f-a66f-\
15026c25aaf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Closing and Opening", "Subsection",
 CellChangeTimes->{{3.55156219582519*^9, 3.5515621967271147`*^9}, {
  3.551611761955303*^9, 3.55161176327455*^9}, {3.551621478778838*^9, 
  3.551621486649818*^9}},ExpressionUUID->"4a6dd3b6-15a9-4e77-9a14-\
cb6cd9e659bf"],

Cell[TextData[{
 "It is common to use morphological operations in sequence to accomplish \
various tasks. The simplest sequence, called a ",
 StyleBox["closing",
  FontSlant->"Italic"],
 ", is to use a dilation followed by an erosion. The opposite sequence (an \
erosion followed by a dilation) is called an ",
 StyleBox["opening",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.551636604821464*^9, 3.5516366080845013`*^9}, {
  3.551639232063747*^9, 
  3.5516392330243187`*^9}},ExpressionUUID->"02788ce7-03bd-4fd3-9eec-\
3531d91a239a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelCloseOpenBW", "=", 
   "\"\<The opening (left) and closing (right) of a binary image\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoCloseOpenBW", "=", 
   "\"\<Closing tends to remove small black features (such as the centers of \
the circles).\\n\\nOpening tends to retain white centers (larger than the \
neighborhood) while removing surrounding matter.\\n\\nTry different \
neighborhood shapes.\\n\\nClosing tends to merge together object that are \
close together.\\n\\nOpening tends to separate white objects that are \
narrower than the neighborhood.\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"rd", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"setToOne", "=", 
        RowBox[{"Round", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{
              RowBox[{"100", "/", "2"}], ",", 
              RowBox[{"100", "/", "4"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"synOpImg", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"setToOne", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"RandomInteger", "[", 
                 RowBox[{"{", 
                  RowBox[{"8", ",", "20"}], "}"}], "]"}]}], "]"}], ",", 
              "Black", ",", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"setToOne", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "3"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "setToOne", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "Black"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RandomInteger", "[", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{"synOpImg", "=", 
           RowBox[{"RangeFilter", "[", 
            RowBox[{"synOpImg", ",", "10"}], "]"}]}], ";"}]}], "]"}], ";", 
       RowBox[{"rd", "=", "0"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opening", "[", 
         RowBox[{"synOpImg", ",", 
          RowBox[{"neighborhood", "[", "r", "]"}]}], "]"}], ",", "synOpImg", 
        ",", 
        RowBox[{"Closing", "[", 
         RowBox[{"synOpImg", ",", 
          RowBox[{"neighborhood", "[", "r", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rd", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<New Image\>\"", ",", 
        RowBox[{"rd", "=", "1"}]}], "]"}], "&"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "neighborhood", ",", "DiskMatrix", ",", 
           "\"\<neighborhood shape\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "IdentityMatrix", ",", "DiskMatrix", ",", "BoxMatrix", ",", 
           "CrossMatrix", ",", "inverseCrossMatrix", ",", "verticalMatrix", 
           ",", "horizontalMatrix", ",", "DiamondMatrix"}], "}"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Spacer", "[", "30", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", "20", ",", "\"\<neighborhood size\>\""}], "}"}], 
         ",", "1", ",", "60", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoCloseOpenBW", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelCloseOpenBW", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"r", ",", "rd", ",", "neighborhood"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5516174690755053`*^9, 3.5516174746833363`*^9}, {
   3.551617527135717*^9, 3.551617542863142*^9}, {3.551617707516865*^9, 
   3.551617728188422*^9}, {3.5516177796978207`*^9, 3.551617802344297*^9}, {
   3.5516178355958643`*^9, 3.5516179504222727`*^9}, {3.551617982262472*^9, 
   3.5516180611577578`*^9}, {3.551618103144698*^9, 3.551618148592153*^9}, {
   3.551618236891322*^9, 3.5516182809780912`*^9}, {3.551618316189397*^9, 
   3.551618355541202*^9}, {3.551618508235965*^9, 3.551618511355933*^9}, {
   3.5516185829824867`*^9, 3.5516186789819202`*^9}, {3.551618744790051*^9, 
   3.551618775359517*^9}, {3.551618888456949*^9, 3.551618978433556*^9}, {
   3.551619008931736*^9, 3.5516190747907143`*^9}, {3.551619116706895*^9, 
   3.551619137136415*^9}, {3.5516191825965977`*^9, 3.551619291075015*^9}, {
   3.551619397458973*^9, 3.551619486330082*^9}, {3.551619530445784*^9, 
   3.551619553689171*^9}, {3.5516197784595537`*^9, 3.5516198329845667`*^9}, 
   3.55161993465836*^9, {3.551619966662333*^9, 3.551620040540949*^9}, 
   3.551637390598089*^9, {3.551637435541861*^9, 3.551637442060749*^9}, {
   3.551637479301641*^9, 3.551637484524192*^9}, {3.551637861461647*^9, 
   3.551637881427185*^9}, {3.552573685803843*^9, 3.5525737383107443`*^9}, 
   3.55257420996085*^9, 3.552574289608416*^9, {3.552574334896243*^9, 
   3.552574355060338*^9}, {3.5525957763100224`*^9, 3.552595793663721*^9}, {
   3.552670420700145*^9, 3.552670422037603*^9}, {3.552670542823861*^9, 
   3.552670586728879*^9}, {3.552670667862454*^9, 3.552670678837524*^9}, {
   3.5526707130457706`*^9, 3.552670737566968*^9}, {3.5526708088319597`*^9, 
   3.552670918612946*^9}, {3.5527596880542707`*^9, 3.5527596935579977`*^9}},
 CellTags->
  "labelCloseOpenBW",ExpressionUUID->"8bb32603-ee96-4176-ba6f-4502467f4f03"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`neighborhood$$ = 
    DiskMatrix, $CellContext`r$$ = 1, $CellContext`rd$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rd$$], 1, ""}, 
      Dynamic[Button["New Image", $CellContext`rd$$ = 1]& ]}, {{
       Hold[$CellContext`neighborhood$$], DiskMatrix, "neighborhood shape"}, {
      IdentityMatrix, DiskMatrix, BoxMatrix, 
       CrossMatrix, $CellContext`inverseCrossMatrix, \
$CellContext`verticalMatrix, $CellContext`horizontalMatrix, DiamondMatrix}}, {{
       Hold[$CellContext`r$$], 20, "neighborhood size"}, 1, 60, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[30], 
         Manipulate`Place[2], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Closing tends to remove small black features (such as the centers \
of the circles).\n\nOpening tends to retain white centers (larger than the \
neighborhood) while removing surrounding matter.\n\nTry different \
neighborhood shapes.\n\nClosing tends to merge together object that are close \
together.\n\nOpening tends to separate white objects that are narrower than \
the neighborhood.", WindowTitle -> "Notes", WindowFloating -> True]], 
          Appearance -> None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    1000., {168., 174.9473274478516}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`neighborhood$12545$$ = 0, $CellContext`r$12546$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`neighborhood$$ = 
        DiskMatrix, $CellContext`r$$ = 20, $CellContext`rd$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`neighborhood$$, $CellContext`neighborhood$12545$$, 
         0], 
        Hold[$CellContext`r$$, $CellContext`r$12546$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (If[$CellContext`rd$$ == 1, $CellContext`setToOne = Round[
            Abs[
             RandomVariate[
              NormalDistribution[100/2, 100/4], {8, 
              2}]]]; $CellContext`synOpImg = Graphics[
            Table[{White, 
              Disk[
               Part[$CellContext`setToOne, $CellContext`i], 
               RandomInteger[{8, 20}]], Black, 
              Disk[
               Part[$CellContext`setToOne, $CellContext`i], 
               3]}, {$CellContext`i, 1, 
              Length[$CellContext`setToOne]}], Background -> Black]; 
         If[RandomInteger[] == 
           1, $CellContext`synOpImg = RangeFilter[$CellContext`synOpImg, 10]; 
           Null]; $CellContext`rd$$ = 0; Null]; GraphicsRow[{
          Opening[$CellContext`synOpImg, 
           $CellContext`neighborhood$$[$CellContext`r$$]], \
$CellContext`synOpImg, 
          Closing[$CellContext`synOpImg, 
           $CellContext`neighborhood$$[$CellContext`r$$]]}, ImageSize -> 
         800]), "Specifications" :> {{{$CellContext`rd$$, 1, ""}, 
         Dynamic[
         Button["New Image", $CellContext`rd$$ = 
           1]& ]}, {{$CellContext`neighborhood$$, DiskMatrix, 
          "neighborhood shape"}, {
         IdentityMatrix, DiskMatrix, BoxMatrix, 
          CrossMatrix, $CellContext`inverseCrossMatrix, \
$CellContext`verticalMatrix, $CellContext`horizontalMatrix, DiamondMatrix}, 
         ControlPlacement -> 1}, {{$CellContext`r$$, 20, "neighborhood size"},
          1, 60, 1, ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[30], 
          Manipulate`Place[2], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Closing tends to remove small black features (such as the \
centers of the circles).\n\nOpening tends to retain white centers (larger \
than the neighborhood) while removing surrounding matter.\n\nTry different \
neighborhood shapes.\n\nClosing tends to merge together object that are close \
together.\n\nOpening tends to separate white objects that are narrower than \
the neighborhood.", WindowTitle -> "Notes", WindowFloating -> True]], 
           Appearance -> None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The opening (left) and closing (right) of a binary image", 
          Medium], 
        TrackedSymbols -> {$CellContext`r$$, $CellContext`rd$$, \
$CellContext`neighborhood$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{1058., {250.91754141980783`, 258.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`setToOne = {{30, 23}, {112, 47}, {8, 64}, {
        72, 28}, {41, 34}, {9, 78}, {49, 52}, {41, 
        21}}, $CellContext`synOpImg = Graphics[{{
           GrayLevel[1], 
           Disk[{21, 71}, 18], 
           GrayLevel[0], 
           Disk[{21, 71}, 3]}, {
           GrayLevel[1], 
           Disk[{55, 87}, 8], 
           GrayLevel[0], 
           Disk[{55, 87}, 3]}, {
           GrayLevel[1], 
           Disk[{46, 64}, 8], 
           GrayLevel[0], 
           Disk[{46, 64}, 3]}, {
           GrayLevel[1], 
           Disk[{45, 35}, 13], 
           GrayLevel[0], 
           Disk[{45, 35}, 3]}, {
           GrayLevel[1], 
           Disk[{39, 30}, 8], 
           GrayLevel[0], 
           Disk[{39, 30}, 3]}, {
           GrayLevel[1], 
           Disk[{17, 76}, 19], 
           GrayLevel[0], 
           Disk[{17, 76}, 3]}, {
           GrayLevel[1], 
           Disk[{63, 74}, 15], 
           GrayLevel[0], 
           Disk[{63, 74}, 3]}, {
           GrayLevel[1], 
           Disk[{33, 50}, 20], 
           GrayLevel[0], 
           Disk[{33, 50}, 3]}}, Background -> 
         GrayLevel[0]], $CellContext`inverseCrossMatrix[
         Pattern[$CellContext`r, 
          Blank[]]] := 
       1 - CrossMatrix[$CellContext`r], $CellContext`verticalMatrix[
         Pattern[$CellContext`r, 
          Blank[]]] := 
       Module[{}, $CellContext`out = 
          ConstantArray[0, {$CellContext`r, $CellContext`r}]; 
         Part[$CellContext`out, All, 
            Round[($CellContext`r + 1)/2]] = 
          1; $CellContext`out], $CellContext`horizontalMatrix[
         Pattern[$CellContext`r, 
          Blank[]]] := 
       Module[{}, $CellContext`out = 
          ConstantArray[0, {$CellContext`r, $CellContext`r}]; 
         Part[$CellContext`out, 
            Round[($CellContext`r + 1)/2], All] = 1; $CellContext`out]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelCloseOpenBW",ExpressionUUID->"3002cd7b-049b-41c8-94a1-ed64a47d8dd8"]
}, Open  ]],

Cell["\<\
Closing tends to remove small black features (such as the centers of the \
circles) while opening tends to retain white centers while removing \
surrounding matter.\
\>", "Text",
 CellChangeTimes->{{3.551619624568102*^9, 3.5516196874362926`*^9}, {
   3.551637607129384*^9, 3.551637674672336*^9}, 3.551637709492978*^9, {
   3.551637773942232*^9, 3.551637790733116*^9}, {3.5516391198797913`*^9, 
   3.551639120950355*^9}, {3.5516393684488707`*^9, 
   3.551639370006418*^9}},ExpressionUUID->"b3c376d8-5413-4fd5-ab4b-\
f0d62b9a3e5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grayscale Morphology ", "Subsection",
 CellChangeTimes->{{3.551639613650161*^9, 
  3.551639624030233*^9}},ExpressionUUID->"5c632c62-1df3-41a8-80a2-\
77aa3e761ec0"],

Cell[TextData[{
 "In binary dilation, an output pixel is \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] if any of the elements in its neighborhood are \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] (i.e., logical OR). Another \
way of saying this is that the output pixel takes on the ",
 StyleBox["maximum",
  FontSlant->"Italic"],
 " value of all the (binary) pixels in the neighborhood. Similarly, in binary \
erosion, an output pixel is \[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] \
only when all of the elements in its neighborhood are \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] (i.e., logical AND). An \
equivalent way of saying this is that the output pixel takes on the ",
 StyleBox["minimum",
  FontSlant->"Italic"],
 " value of all the (binary) pixels in the neighborhood. Accordingly, a \
simple way to generalize binary morphological operations to grayscale images \
is to use the MaxFilter[ ] and MinFilter[ ]. In one dimension, the only \
variable is the width of the neighborhood."
}], "Text",
 CellChangeTimes->{{3.55164144040515*^9, 3.551641677445426*^9}, {
   3.55164173581537*^9, 3.5516417440113373`*^9}, {3.551641803100492*^9, 
   3.551641847770213*^9}, {3.5516428554097443`*^9, 3.5516428619420643`*^9}, {
   3.5516429814040813`*^9, 3.5516430070990868`*^9}, 3.551649703108408*^9, {
   3.551651217407118*^9, 3.551651283297917*^9}, {3.5516513702017384`*^9, 
   3.5516514313783903`*^9}},ExpressionUUID->"3caa871d-484c-4cf8-99f9-\
3b72fb3c19fc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelGrayMorph", "=", 
   "\"\<A single row from a thread x-ray is green, the dilation (max filter) \
is blue, the erosion (min filter) is red, the closing is orange and the \
opening is black\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoGrayMorph", "=", 
   "\"\<Consider rows from a thread x-ray as 1D functions (the green cruves).\
\\n\\nSweep through the rows and observe that the red and blue curves (the \
erosion and dilation) form lower and upper bounds for the \
function.\\n\\nSweep through the rows and observe that the black and orange \
curves (the opening and closing) also form lower and upper bounds for the \
function.\\n\\nTurn the neighborhood size down to 4 and observe that the \
bounds tighten: the red and blue always keep a certain horizontal distance \
from green, while the orange and black bounds cling tightly to the green near \
the peaks and valleys.\\n\\nTurn the neighborhood size up, observe the bounds \
loosen.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"imgData", "=", 
   RowBox[{
    RowBox[{"ImageData", "[", 
     RowBox[{"allImagesXray", "[", 
      RowBox[{"[", "f634Tile", "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "100"}], ",", 
      RowBox[{"1", ";;", "100"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"imgRow", "=", 
     RowBox[{"imgData", "[", 
      RowBox[{"[", "thisRow", "]"}], "]"}]}], ";", "\n", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Image", "[", 
          RowBox[{"imgData", ",", 
           RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
            RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"100", "-", "thisRow"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"100", ",", 
                 RowBox[{"100", "-", "thisRow"}]}], "}"}]}], "}"}], "]"}]}], 
           "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"imgRow", ",", " ", 
           RowBox[{"max", "=", 
            RowBox[{"MaxFilter", "[", 
             RowBox[{"imgRow", ",", " ", "neigh"}], "]"}]}], ",", 
           RowBox[{"min", "=", 
            RowBox[{"MinFilter", "[", 
             RowBox[{"imgRow", ",", "neigh"}], "]"}]}]}], "}"}], ",", " ", 
         "\n", "    ", 
         RowBox[{"PlotRange", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Green"}], "}"}], ",", "Blue", ",", 
            "Red"}], "}"}]}], ",", 
         RowBox[{"ImageSize", " ", "->", " ", "300"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"imgRow", ",", 
           RowBox[{"MinFilter", "[", 
            RowBox[{"max", ",", "neigh"}], "]"}], ",", 
           RowBox[{"MaxFilter", "[", 
            RowBox[{"min", ",", "neigh"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Green"}], "}"}], ",", "Orange", ",", 
            "Black"}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], "]"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"thisRow", ",", "27", ",", "\"\<row from canvas\>\""}], 
          "}"}], ",", "1", ",", "100", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"neigh", ",", "12", ",", "\"\<neighborhood size\>\""}], 
          "}"}], ",", " ", "1", ",", "  ", "21", ",", " ", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoGrayMorph", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelGrayMorph", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"thisRow", ",", "neigh"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellTags->
  "labelGrayMorph",ExpressionUUID->"4919b145-e985-49cd-a09e-7ed9c5e89b9a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`neigh$$ = 9, $CellContext`thisRow$$ = 66, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`thisRow$$], 27, "row from canvas"}, 1, 100, 1}, {{
       Hold[$CellContext`neigh$$], 12, "neighborhood size"}, 1, 21, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Manipulate`Place[2], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Consider rows from a thread x-ray as 1D functions (the green \
cruves).\n\nSweep through the rows and observe that the red and blue curves \
(the erosion and dilation) form lower and upper bounds for the function.\n\n\
Sweep through the rows and observe that the black and orange curves (the \
opening and closing) also form lower and upper bounds for the function.\n\n\
Turn the neighborhood size down to 4 and observe that the bounds tighten: the \
red and blue always keep a certain horizontal distance from green, while the \
orange and black bounds cling tightly to the green near the peaks and \
valleys.\n\nTurn the neighborhood size up, observe the bounds loosen.", 
            WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
          None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    750., {107., 113.76694571968676`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`thisRow$12729$$ = 0, $CellContext`neigh$12730$$ = 0}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`neigh$$ = 12, $CellContext`thisRow$$ = 27},
       "ControllerVariables" :> {
        Hold[$CellContext`thisRow$$, $CellContext`thisRow$12729$$, 0], 
        Hold[$CellContext`neigh$$, $CellContext`neigh$12730$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`imgRow = 
        Part[$CellContext`imgData, $CellContext`thisRow$$]; GraphicsRow[{
          Show[
           Image[$CellContext`imgData, ImageSize -> 250], 
           Graphics[{Green, 
             Opacity[0.4], 
             Thickness[0.02], 
             
             Line[{{0, 100 - $CellContext`thisRow$$}, {
               100, 100 - $CellContext`thisRow$$}}]}]], 
          
          ListLinePlot[{$CellContext`imgRow, $CellContext`max = 
            MaxFilter[$CellContext`imgRow, $CellContext`neigh$$], \
$CellContext`min = MinFilter[$CellContext`imgRow, $CellContext`neigh$$]}, 
           PlotRange -> {0, 1}, PlotStyle -> {{Thick, Green}, Blue, Red}, 
           ImageSize -> 300], 
          ListLinePlot[{$CellContext`imgRow, 
            MinFilter[$CellContext`max, $CellContext`neigh$$], 
            MaxFilter[$CellContext`min, $CellContext`neigh$$]}, 
           PlotRange -> {0, 1}, PlotStyle -> {{Thick, Green}, Orange, Black}, 
           ImageSize -> 300]}]), 
      "Specifications" :> {{{$CellContext`thisRow$$, 27, "row from canvas"}, 
         1, 100, 1, ControlPlacement -> 
         1}, {{$CellContext`neigh$$, 12, "neighborhood size"}, 1, 21, 1, 
         Appearance -> "Labeled", ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Manipulate`Place[2], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Consider rows from a thread x-ray as 1D functions (the green \
cruves).\n\nSweep through the rows and observe that the red and blue curves \
(the erosion and dilation) form lower and upper bounds for the function.\n\n\
Sweep through the rows and observe that the black and orange curves (the \
opening and closing) also form lower and upper bounds for the function.\n\n\
Turn the neighborhood size down to 4 and observe that the bounds tighten: the \
red and blue always keep a certain horizontal distance from green, while the \
orange and black bounds cling tightly to the green near the peaks and \
valleys.\n\nTurn the neighborhood size up, observe the bounds loosen.", 
             WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
           None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["A single row from a thread x-ray is green, the dilation (max \
filter) is blue, the erosion (min filter) is red, the closing is orange and \
the opening is black", Medium], 
        TrackedSymbols -> {$CellContext`thisRow$$, $CellContext`neigh$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1001., {172.91754141980783`, 180.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`imgData = CompressedData["
1:eJzN3dnPbWddwPHGv8B5HuJ/4Dzd7H/BeR4So9fWWe+47CVo1QoVG2PICTEG
SiktAkIpUCjD6elIx9P2tEWuFBDRK7PX2p9nZ33fPu73PadtXMnJyj7v3ms9
z2+en+//7d/72d/9uptuuul3Dv9+ebme2H3+ieXafctyPbr7xeV6bPddy/Xg
7vuW63O771muz+y+e7k+vfvrv9pfj+7+7vb99fTu79++v57dXX1uuXY/uFzP
775puV7c/dFyXTu856Xdf35lf13b/dWt++va7keX66Xdty7Xy4d1vLz7+eW6
tvut5Xru8PmR3bct1ycOz3vvYX0f3H3Hcn1y973L9dndY48u1+5vb9tfT4zn
3PqX++vF3R8v10u7xx/bXy/v7nnf/npl9xPL9YXdny3XF3YrvL4w/v+Jx/fX
K7tfWq5Xdu+7e3+9vLv7vfvrpd2PLNe13R8s1wu7n16uq7u3/93+euawvmd3
737X/rq6+4u37K/nd3e+e389v3vo8v66Ov7u/kPL9cLuD5frxd2jj+yva4d9
vrT7seV6eeznv766v47wtF/r+/3len7g8VeX68ndlYeWa/fty/XA7pGHl2vQ
yw8s19Xxfu/9k+V6ecDjT5frld3X/mt/vXJ43hF+P75crwx6+NJ/7K/nB/2A
w0qHz+3e9tb99eTh94/v3vq3++vzg+7ec+f+emHgF/2Bl317H/jA421/s79e
Gft9y5v31+UD/Tyw+5u/3l8fP9Ddxw54+8jhd5/Y3fH3++tzB7g8svv15Xp6
rG993tUBd+sER/yA7r95ua4N/oFnfOLv63ufO3x+5PCc+w909s8Hvrh37AM/
+wzf4IxurQNdwyt4wd/Kj0c+QG/4+ueW68WB119brqcGf37jcl3Z/cxyPXTg
l8uD3+GbfLLPlc4fO+zv84d9PTP47S//Yn+9MPBO/oCjdaLbwvUbluu43pXe
PnmQg7cfnn/fkDvkKnygu1VevrT76n/ur+N7wQ3dVa74HvzjD/vDh88+s1yD
3tbfPz7gQn7A6w8v15E/Vno/K6fBpfJk3f/TQx6scLhy0AOfHfRFDq98fPlA
l4/sfmW5jnxL7lkfuJFXK9+dlWP4BT9Xf+ArdIfeVrx+ZHfT4Vo/v3vwyUqP
9w3+Ro/0B7pCJ9YDXtZrPfBvneCM/8l/evThK8u1+87l+tSgs1V+3jPuq9z+
9OBjetv60aX1u6/fe2rQEbmJDsDVvmZ6mTxb6fjxw/fuPtDHP+2+frnuOKzn
zmE3oNdV7jw/8D2jw/KP9Vk3PfH0U8s17Jn1/ZcHnFb98akBv3W9H9/9wnI9
OvSf9T337HKN58OT9971nv314pBz5Ir9rPt+YcAJ/fzmcj078O3u7/j1Z5fr
qM/AHTzwJfnBfiFXwMudnnZ/713769ruP/59f109POfx0NO/HOj8Hwc+V/jd
Nv6O339juZ4Z/AFP9EL1hXWs8H9p8BN9Yf/kMLyQb94Lv+gdXtHb+ryHh3zy
PfxOb9ND5D19SO6WP0qf8O/v6GZdz2PDTl3hd8uO3Fnl5IcOnx8a9iG6AQd3
dAXOq7x4YdiHK56uDr25/u7KkCPret5x+N6bx926yMX1/28e+m7Fz13D7mb3
sIfo49vftr+e2t28XFfP8Au8syvIGfLxK1/eXy+O71cu4AOf0Y/n4Qv6lP2J
P2q3k9fktzv84ntyzn7xyQqnDx/ubxrwJQfZNexses7z2cnsY+u0D/LX9+3/
y1/aX2flH72P/slD63/y88s17IWnnlyug5x5eOgR9i+7C/95Hzokn8gTeKi9
Yx++5/fsenC7Kde6jg8f7JWHh5yBF3BAZ54Lzj7jixXfj4Xv3n343j+cef95
L3Jxfc+7hp1BfrIn2EvwRO6Tw+Rk/RJys3IG34D3DP7oCb3xZ0t3/o4/yhee
h+/InWeeXq5BZ+z0lQ4/NuTIFl73jO+hL3jzfPvnh698d3bd4GOf9l9+YW/S
K+Qs+kDf/k4PiCO4k3e1C8ml2k/kDDvaeqsXrZseBBdyhFwBx/XzB0a8pnBk
59MT4ODue/bLj1ntz/cPP7L0jm9O8QW+IjfJF/Ek+on9QU7yb/jL6KzxGfId
v4AzviA34QN869+ge3rDe9Cdu/f5PvzV/2UX0GP8HfKXHbPlj386yNOPjvjL
iocnhz6FN/xRfr73nv11hI87fnH3O3Cgl8kXdi27jF1L3tPT6Af/kAP0C/uJ
P1Z+qB+Mn3vHN/Dn/exl9LP1Pz804iHiOvwefrD9wRO+s0/75q+gz61ddWXY
d9679SfvPMMn7DF+yoqXJ8bz8TF7EP7ZgfZPn6J38tH9lD3h9+UP368eKn94
D7qb8YnnwTt6Iy/pafsmZ9nv4gjgzV/DV+QDe9F+rN+6q0fwh/24V56gU3SI
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
jn4a+wB/NJ9Wv5c907j9Nv5z+tzu8170T/u40Hvtavq45zKgV3G/i66DfLNv
/CFugK7Ag/9Aj75W8LjRi93KHgHP1jGC+3nt4Yte8jnokrzlL5Hj7vAMn/w2
dRfXW/eu7lR8sPELdkj7I1s30nMe2Vnkjjr619qfc7FPmx/BD7O+WPDcxuv/
5TrjMp84o7fgk93KDqBX3+g57acu9A6e/BXyYzu//KEzccbX6mI384/oh55/
1PMU3Ld9i49e+PwPdp3+OPzR88/ZT81jnopfdW4EuuEXqicSB7pReLL/2c/g
2bobeqP5XvIGPC76fvOy6ffaw+2nEM/WT/Ja9fXc6MVe7Xk68OaunkFc5dRz
T8lFdh1+I7fZSeKd5E37fFvnw34mL9GH9506l5Oc0LfKLkbXnWvRPtXWkbQO
Bl9ZJzoUb9z20Xz2uukCPNmp2/qLp4f+7TkD/E7yCN2qG76of84eIQfaZ9nz
AfGP+NKNximu90KX9Cb5wp7iN4Gn/JD7tk/nSuZCXBrxenkrcmSFy+XxO/wm
3uT95Ejjap1T1fnj/r49f/Azo2+avse3+tA6F0a/leeg59a/tB5VnrL1iK2P
aT0Red4+JOsQt8S/7OHe2fv4DB7xA7pEj81LWkfXw544xR/+jq7lhT2fvsIX
7YvAn36n7tb+Xiv6p5e28LtrrHub97w06i/EHcHTusk5dMKOZH/wF8QRyavO
3ScnwYfcat85ONH3s/On0Ju8A/9AnJA9i++2cZzPjLpPcpYdiT63510c50l1
DuWsPrF1Wq1D9jx8Qj+Cv/wP+SLu4G4uub/bJ7oTN+sccvaiOH7nHZJH5Lk4
HvpHX/Sx+AJ6Zn/AQ+3T1s+442f2CrmLXi9qb5Er7HbzCrZy5JMjzidOR39b
h3rh8kHnM7R+DXz9vfPSm6+QR2ld0GxeYfsKZ3XZ/OKeL4D/8Cf91zk17Gzf
6zky/HP2VOsUZ3Me1bvjl+qXnn/VuZnW3zki/Hp63N977mbnFbY+sH1avud3
7ctCZ53Hxl8gZ9SvbecbHvut2v9J3sIDPxedomdyQBxn66d8YPyd38l+ACd5
NHKz9YP81vYNnjpXFNzQAzpF1/zjzmFtvXv7olon17rX9uW5Vz7zj5v3Jffx
6bZP9djvWX1J7rb+pvly9IZPra9z2LrezmmtvWXd/Hjr51+jI/xtX/RA5+R0
vlTnFLdu0Gf0sD1X+PKZOWD8d34DfmW/oQ/82PO2xNHI5/a59Fw4n+lP/ip7
pfNhwK9xz87baP9w55NZf+faFf/+Xj0AH8V7+zz8njwlZ8ndzm/vHHffV98G
7+UP+22cpPzQeW2doww+zWv4f/u1nvZJ4QtwrB6uPOo5UtZVe7TzGzvnitxA
9/QefvW5dfrkVfsF2BmtA/T/6No6Z3X27ZMkN+mVyrdZfzo+gFfvBS+/97zO
l2kfMfi3fw+9glPPOeh5B/bXep3aQZ1H4DO+69zLnk9hPmzP/ejce/Kc3iL/
wZH84yeRv/RH5+7Wbrf+zv31//COvsq/+KLzna3b79tf3/nU7JDyCb3R+nXy
x7rAuedFzPjZOmdzZAo3dOn7nbfbesTZ/OSeo9s4vv/vHE780LnJfd6sv7H9
wJ17Cj6V3+gUHOEPf+B/+y099Ly7nnfbufHw6H3w2zms9glO8EOfis+2Tlw9
J39dPIE9yo5hH9vfrF+r/QzWbV8958W+Gw9unxL4tj6FnPYZf5w6N6L6GX/4
f9+zbvtDl+iPvvK550awF9Bf++vLH/6OTkrX7bPtnZ4lR8g1fNr6stYV1j+r
fTObw9FzVPw/e6bzFmrH9nyp1if5fevwPafyFh/AT/Xstk/+OJ+anSqeq15C
HHrV3x85k39p3KJzJK2n/NP+qPbVzvqoeh4vvLIvxNvxc+d1sYfAvXxSv6h+
ne/h3+rlzuuy/84zaX1u5XPPJS19dO5R693Zzey+zqUlT+hbeq/n+LTvCV2S
/41T1q6iP5wL4Xs9dw1ewHMWX+p5Mo0rWnfr5bpfdEsfbOf5vedMfYK8QeP3
2/8/1suohxYHEd9kn8mLdI5c4ds+kfJJz20AN3q2/XviLz3nQlwX3cJHz7Gr
PKze6vwNdgr6Yte1P6L+rXW0f7rnNpDjM/+r/lnP8yUf2Xve3/l46AYcm5/s
uTXouPxBzzoPwrkpP7VcXxz2dOfpkBe1f8G/55v4HblAP9q/uCC9QG6Ki4jX
iYvL77xW+SOXeCb9o95WXJxfY734un0ilRflC/8PTvQqeWn/2/zqnSOfiW/Q
a+2KWfzc59bhd04lO1S8VR2rvBl9Lc9Lfsh34avmH/ERuDVPgj/wE3nPrmz/
O3+ycQL81H719t96Pnixk9A9/xh/4IvVfv/imfOU2zfdOIXn1w/x/eanOk8L
HNSLwAe6OFUvcqPX9ryDu0f9pv4EdEsOwTu5C849b7DnBbWusfVk7Eb8Ic8r
T0h/wG/noVbPdz4ivhIPBW91RJ1327z99v/vGnkI/GL9PQe19S3Na/YcSHqB
Xylf0XkH3tP+ZXxAnrjjF+voXAnyjd6lR3qOLL3QPkh4qD9Ru7Pnhvkd/dF5
1daLT/Sbbvvgr7+Ojx3V/4df9gu+ZF/hC/SLv3teBDizG2ZzVHveud8Xn9v5
ovcMvYkOe+5Vz9doP1f9OXQsn8wfu2i9tnwdPd98HPjV/um8bvoTPPAPPIiz
tA8Cn4AffhS3xPfyN+Rd+xzhr3GvnovWOGrPQ2rd3mxec/vtyyez8y9aD1S9
z/4h3/nf5Cz5t9L9Owddrfr9vuFnqAvrfFV4a97E+npuADnQfFD9kp4v5jO9
0/5vdo36MXEF+d/yB7h2jim4Nx8Jvvhxm58+fx8fuaXPjN6DL/FE/lvrr9w7
1x8e+J3y9fKWPe8LneBLduC6ng+P+lXrwmfNK+FL68K37J/WKczibc2HzObK
dk4c/d9zXTvXEr7hH9ysHz3Lu4rvkA/qFNGZujv0xZ+YnSPfOCF+6LnvnXNC
P3eucP1l/EG+sAu283suj/kx6FY+uXk58K3f1zwCf4WdRY6yX7b9NB840/+N
L1a6e/OwR/UBqk/B5/BTu6b1dz77e+eZ0U/8IvVa8M5P9P32zfEv6WV8Qo+C
A73Dz6HfGtcsP/Sc5M4zFX+a+WHNG1auzvzX8g9+LZ57zgY7zT7r19lv/cRZ
nJJ+7Tys+uGdl9i5kM0Lei/8oC9zF+hHdMpOsA/w75zXzoVuHzD4gYPnoWN+
CXlDv9DH5DH7DH2qW2UX8R/gY3YuEvzBk7g2+8hzt3M4Pj3kn/ordgV/iXwR
3/c7cKZvrE+9QP362hW1g8C38Vp80Lgsuq3/Rb51Dm/pjZxuX9IsTu+94N+5
OrO5dfbROoTO47Le5lnRf+cF189o/BI8rJscE7+e+Uv8EfZFz42ijzoP2+fa
yz3/rnAUH+XPk+s9B1i+tnMAZ3U8rZfb1o8e6Rsc6Al6jn3Mf3Rnf+tvUNdL
znQuIH4Qd2mdcev3xOnwQ+PVrUdqnQv+6TxG9nvzSe3rbr4QvTWvAr7NG6oT
6jxun3s+S/uz2SvoDRyaX+i8v+a9Gg+vnYgu+D/0PrvmVH03PiFnxQG9v/UK
9FnnOjYv3blx1tt6nOqt1gk3rtw5MOjH88jpLRyO+wcXeope4+/QY/SJumP2
mP4j/M0+Jy9bZ1S5gc7I254XVv9kZl/V/gLvzsGsf1t/djbvG16tlx9GLtCf
7HdxD/JCfIVdjK/AqXM9ek5x5+jSC61j8Ln9Ht5Dr6vnJufO6xe7yMvtObcv
jPW1Trrz9eAF3iof2rdOX4OT/XYedc9JbxzP+zv3BVzYQ90v/mC/0Svu7DD2
E34g/9F752w3DtjzTuzb7zsPgb1iH+RK85j8Z/rJ762j58eDK/iRe/xZdTDw
63ueK77BPqePxS3IF/46u4Qf1nPKZnZK7UCf20/buaitbwRnenub5zl9/ksv
/rHn0Jfg3H751hOXPlsXC7/sKHqX/+A9zXdVXrYeDx7xj++Rz+IQ6iPEJdlX
9C4/gd3Q/h7rbf9d67HY6/DUuFL9Ov5i/dueDwDPPtdOs050CK740voa1yKn
e14N+JJn7HZ9NOKN7uK6/k6ukD/Wix6aT53ViczmZJbfO38evOmT5ssvyh/k
Ar/FvtB77dmZXcwO6Hlt6M1z6eueO9O56OQrOQou9dN6vgz+oA/U1+jPYiew
A+RLm1/vuYHojn61zsZpG8/A981n4VNw6Tnx1mWd7Bd2Xj/Tm/gF/Gr3Wt+p
OmF4aZycPH11OfuO4f+J+8M/fYR+4bFxqMbVrFfcr/tonqhzkeEPHNnR6kpO
8Yc4EruD3YjO2w/Rer/Wh6Mjdso2D3OUM/DveY1v0kOdx9v8JXiAH3zQh/wO
7+Vniyfzy9kH4sD62uUR0V3P9eg5HLWzmickn+VTxQnY8fII6l7lna0TfcrP
sY/5S/xJ62x9Zec4Vv6R0/Dbvnjvm+WBrYu8hg/2g+c3XtC8Jzxbn7gPfc6+
qN9mX+iKnBOPx7/mXVo3flEHw2/BV+wM9q31gC95wo6sndRzNsRV1UXLd1iX
PAn5hN/JGfuCp+IRP1qnvM82j3LXDc/9EZfG5/QS/Vg/ovGH5r/QAT5FR/Kj
/KbOC1mfc//IY23p8M1jTh67Ej+3n6/naNZf9HdyV3wOf4jrzez5bb3u8XxT
/No4dPNtjS/Qw/DceY/12+wTP7JjwQUc2YfgOONv+oJd0jqY1jWBd+ec+D27
Hv/N6I4+2dZvHZ9HbnkufLJvrEMcid5kL14vP5z3sn72m/mW9Kb1k2Pt18S/
jZPhD/HFrX64d/BD6xS2fz/itflr9NP5V/iDPIQH9Mi+sm/v3c73vuWMPNrG
CY99+T1HEV/0nADrQm/kOTu9+Sd8A/7oi362fvUy4Imf2RvyZH5P7oNj59tZ
N7lYviBP2QWn5Da4smP4ceRM4zTgw18kD8jdG9UTN3rJt4C7eh77I+foE3aS
vDx8uNNTPY+GnUhf6NOAZ/YDO01+tedjty8HvtEv+bud0/vgyOtu6+HvH3Hf
7byLDw65QZ+xi8QpxA16jjt+wcf8QnRun+Jl/HD6Dh/xN9mn4D3Do7k17Fp1
MvwN8q7nV+CTng9mXeAIPqfoSVyJvY//2VOd78ufx8/b+SMXn/f7Rl3gzA4H
P/b71v68POI/+Iq84R/yq+R50Ct+BH/fwx/te8EfrYfant9zdcT9xXPhDV+g
V+vkT8GL/dPznt+4Rfvh2Fc9RxI/kIvggv7Y2eDHjq+/ceoiD9iHjQ82TlP4
9ZwBc27OO38X//sdedW+N3jd9nVdGXZI7cf/b5c6LnQKfv6OntEZ/NOT7Ady
sXUI9Cg6ZKeJj7XOuXFq8q/z0clLcSj8wP+wr609+MR4r7/zQ8k3722/0+w8
3faNo3/+YPsi+NHb+MqD557TvLW73jX8enBs3UzPiWp+z7o9Z5aX68XvpL/I
tZ4HTX+gD3JxG0e5+Dllr/fF7gEP+yS34cs+0DW7iv/QPEznIJOr7G18Q1+1
H6/1jOyZ5rPoD+vAH+Q2+aaej9xCt+iSXrFe7xPX1U8mvtt5NfgX3fGHGm+1
X/zBP9nWy3562OHsYXhQPytPJs7A72o/Q88JBk/+Uu1V/IouZnQj7gGO8OC5
8NR8C7rYzuG7MuyK9Tnnn/f7el30ATkq3so/Q6fgRa6Ia7R+hX9HDlWv82fE
oTo33J3fSO75Xefj0CPgTL+TS61rZ9+Lj6iL9j37gN/O7+k8xJ7PzA+xb3b4
rI9H3HMrdx9K3uO+YZfiB3zEbsV/8lLotPN26jeBH/tRvHl7XvhZ/wffsmO9
lzztvGL5QPq1fAIe5Fbr59+oSxwJn9Lzzd+gT3Kn56W70xPsodm5mu1HAC+f
Z/ncnmeLDtEteuw8TvlI+qLn+rVPsHGJzgPBH50bSo+wu/AtOgBP9ho7sHXN
2/Oanhzrp5/ZsZVj6Ji9wn/wXnqhc2JaH+XOL9n6zWf9AXFXfqj31h7t3LDW
bcIzP97+6Xvxh9ebL+hneT52OrnbeXfu9tF5Ke1/bL9t66lm/U/+v+f6wif9
DK7tb/d9ceCeK4WO6BV0R4+wa+CXHY6+4RV/6NPvnN3aXdZZP2nWf+a96AQf
la98dm98iL5vHVT7GNvHxY+yHnwn/sg/46/r2+NPiTeSh62bA5f288z6eNAl
fUtf3qhemeWJ6cHt3NSnhrxHD9Zdvu9cMHAEf/Blb7ReqfNkKrf8vn29nbvX
+Sh+hy6aByEH2OWVv/wgeqNzadCVulf8oT/fPKTOlVIfVj3X+U7kCXiCL36f
+c+d+9R1t36t/QGFJzmDb8WXyBH+QeOW4CxeVf6YzVXuXOL2+aDHxl/UJ523
3kZegh/hju/ljzy35/3Sh+QzumsdeePXPceJHAB/z5nNmSZX2CWtb21fRftS
faaf0BM7sHqC/mCHyE+0roW/Q/6iL+/t/Ap3fNM5hJUH7YcCR3zROCu7a1bf
2Thf56eUH8oXjcPhD/4A/cr+5B+QM/w1dmL5A190zv1svn35FbzKJ/jzFH+I
H7DT+G/y4u2Hp9+9dzaHl72APtFN6xTYQegZ/Xee7kzegl/77lo/3rpZ72O/
4Fv4ap1Y8/P43X7a30Dft569c4PxS/fTOYTWie863wh/4wd5Ondy2v5m9ff1
M1pX2fMZwBcd0FP4g9+NT9hT4v/0denKc9FDz0nx/+BZ/rAe/Ib/2ZPbutaH
hr8iXsmfmPGNuD89iT/EC3pOGbldOmz/TOvKyH1yoHN733/v/jrOmfb3zr3u
POfZeR/tz0Mf7A32knx8z8Pt/JhZ/w+9WPnRPpTZuQv1QxqHQM/sCHrE+upv
9HyG9gfO5jR2DgT+LX/QH/aPT/lx9IX8VvmU/0nuez494Q7f1tHzg9BT56y2
H4X+JPfIj22c8MEz9Vvi4PKv8hTy/vbXfv7OM7POzmUufmf8gS/wif/HJ/ij
9jp51/Mr4M/7yTl0xG7iX6nTVBdGj8gLtr/W3f+zu9g98MSeAw98Wz+recTG
bzrviNwhv6wDHdgffUIe0Es9B7F6Aj1WX9e+bf2x9/YcQ/YpvwN87KvnKczk
SPtoZn0g3gMe6FicrXHL1gGqDxPHpzfIHfzV85PAgdyo3Uou/S8CEhOX
        "]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelGrayMorph",ExpressionUUID->"e06ff959-cd89-4ed7-ae5a-0d895686287a"]
}, Open  ]],

Cell[TextData[{
 "HW: Yet another way to implement the application of morphological \
operations to grayscale images is to use ListConvolve[ ]. Using ",
 ButtonBox["these ideas",
  BaseStyle->"Hyperlink",
  ButtonData->{
   "vvNonlinearFilters.nb", "listconvolve for erosion & dilation"}],
 ", reimplement the above demonstration using ListConvolve[ ] and/or \
ListCorrelate[ ]. (In fact, this shows how many seemingly disparate functions \
such as MaxFilter[ ], MinFilter[ ], Erosion[ ], Dilation[ ], and ImageFilter[ \
] are all just specific calls to ListConvolve[ ] and/or ListCorrelate[ ]). \
Describe your observations, and show how MaxFilter can be "
}], "Text",
 CellChangeTimes->{{3.551697865934094*^9, 3.55169790764795*^9}, {
  3.551699408036339*^9, 3.551699437561905*^9}, {3.5517016049986057`*^9, 
  3.551701605211067*^9}, {3.5517016802893963`*^9, 3.55170185117481*^9}, {
  3.551702227998521*^9, 3.5517022588287497`*^9}, {3.552671523574786*^9, 
  3.5526715255632772`*^9}, {3.555105455558341*^9, 3.555105460410686*^9}, {
  3.55510551779809*^9, 
  3.555105553271055*^9}},ExpressionUUID->"7b527760-5c40-482c-bae4-\
21974e135db4"],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.554562384076624*^9, 
  3.554562385042796*^9}},ExpressionUUID->"4271a69b-f7f9-4d44-9361-\
33153dfd2693"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"035a810c-cbaf-4482-b61b-\
ff15bcfb96d3"]
}, Open  ]],

Cell["\<\
In one dimension, a neighborhood is just a distance along the axis. In two \
dimensions there is more flexibility in the shape of the neighborhoods.\
\>", "Text",
 CellChangeTimes->{{3.552671689939972*^9, 
  3.5526716909856443`*^9}},ExpressionUUID->"5037c76a-6862-4e28-8d17-\
0fb4ad1b448a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelXRayMorph", "=", 
   "\"\<Applying various morpholological operations to x-ray images\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "infoXRayMorph", "=", 
   "\"\<When looking at individual threads, it makes sense to keep the \
neighborhood size small (since once the neighborhood is larger than the \
feature, important details are invariably lost).\\n\\nObserve that dilation \
of the positive image is the same as the negative of the eroded negative \
image.\\n\\nWhat is the same as erosion operating on the positive image? Can \
you explain why?\\n\\nSet the shape to verticalMatrix and the size to 40. Now \
all four operators emphasize the vertical stripes.\\n\\nFind a way to \
emphasize the horizontal stripes.\\n\\nUse the crossMatrix to bring out both \
vertical and horizontal features simultaneously.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "img", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"invert", "\[Equal]", "\"\<negative\>\""}], ",", 
        RowBox[{"img", "=", 
         RowBox[{"allImagesXray", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"img", "=", 
         RowBox[{"ColorNegate", "[", 
          RowBox[{"allImagesXray", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ImageAdjust", "[", 
       RowBox[{"operation", "[", 
        RowBox[{"img", ",", 
         RowBox[{"neighborhood", "[", "rad", "]"}]}], "]"}], "]"}]}]}], "]"}],
    ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "f634Tile", ",", "\"\<image\>\""}], "}"}], ",", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Range", "[", "numFilesX", "]"}], "\[Rule]", 
           "imageNamesX"}], "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"invert", ",", "\"\<negative\>\"", ",", "\"\<\>\""}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"\"\<negative\>\"", ",", "\"\<positive\>\""}], "}"}]}], 
        "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"operation", ",", "Dilation", ",", "\"\<operation\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Dilation", "\[Rule]", "\"\<dilation\>\""}], ",", 
       RowBox[{"Erosion", "\[Rule]", "\"\<erosion\>\""}], ",", 
       RowBox[{"Opening", "\[Rule]", "\"\<opening\>\""}], ",", 
       RowBox[{"Closing", "\[Rule]", "\"\<closing\>\""}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "neighborhood", ",", "IdentityMatrix", ",", 
       "\"\<neighborhood shape\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "IdentityMatrix", ",", "DiskMatrix", ",", "BoxMatrix", ",", 
       "CrossMatrix", ",", "inverseCrossMatrix", ",", "verticalMatrix", ",", 
       "horizontalMatrix", ",", "DiamondMatrix"}], "}"}]}], "}"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rad", ",", "5", ",", "\"\<neighborhood size\>\""}], "}"}], 
         ",", "1", ",", "80", ",", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Spacer", "[", "10", "]"}], ",", 
      RowBox[{"info", "[", "infoXRayMorph", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelXRayMorph", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "i", ",", "invert", ",", "operation", ",", "rad", ",", "neighborhood"}], 
     "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "saveDef"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.55163945260086*^9, 3.5516395203024187`*^9}, {
   3.551640501343384*^9, 3.5516405260936832`*^9}, 3.551640597471327*^9, {
   3.551641049003593*^9, 3.5516410528389606`*^9}, {3.551641098073258*^9, 
   3.551641149579988*^9}, {3.551641210977277*^9, 3.551641246049521*^9}, {
   3.5516412841721907`*^9, 3.5516412850968437`*^9}, {3.551651522448311*^9, 
   3.551651548400457*^9}, {3.551652576056426*^9, 3.551652602901245*^9}, {
   3.5525746605956783`*^9, 3.5525747312927637`*^9}, 3.552574977790134*^9, {
   3.552575259974646*^9, 3.552575374782022*^9}, {3.55257541185714*^9, 
   3.55257550910721*^9}, {3.552595848732602*^9, 3.5525958708661423`*^9}, {
   3.552671740197138*^9, 3.552671832584114*^9}, {3.5526718940251303`*^9, 
   3.5526719816427298`*^9}, {3.5526720649256983`*^9, 
   3.5526720874777737`*^9}, {3.5526721221595793`*^9, 3.552672230762204*^9}, {
   3.553351046520338*^9, 3.55335110487668*^9}, 3.5537045971822023`*^9, {
   3.553795091416683*^9, 3.553795101174979*^9}},
 CellTags->
  "labelXRayMorph",ExpressionUUID->"acbdf8ce-78b4-46f6-8c9f-61ba15543ad3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 7, $CellContext`invert$$ = 
    "negative", $CellContext`neighborhood$$ = 
    IdentityMatrix, $CellContext`operation$$ = Dilation, $CellContext`rad$$ = 
    5, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 7, "image"}, {
      1 -> "F458Diagonal12", 2 -> "F458Diagonal13", 3 -> "F458Diagonal29", 4 -> 
       "F458Diagonal33", 5 -> "F458Diagonal36", 6 -> "F458Diagonal45", 7 -> 
       "F634Tile", 8 -> "F659Diagonal13", 9 -> "L07 Patch 1408-1731", 10 -> 
       "L07 Patch 3283-1151", 11 -> "L10histEq", 12 -> "L10Tile", 13 -> 
       "L11Diagonal05", 14 -> "L11Diagonal24", 15 -> "L17Diagonal05", 16 -> 
       "rectModel", 17 -> "sinModel"}}, {{
       Hold[$CellContext`invert$$], "negative", ""}, {
      "negative", "positive"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`operation$$], Dilation, "operation"}, {
      Dilation -> "dilation", Erosion -> "erosion", Opening -> "opening", 
       Closing -> "closing"}}, {{
       Hold[$CellContext`neighborhood$$], IdentityMatrix, 
       "neighborhood shape"}, {
      IdentityMatrix, DiskMatrix, BoxMatrix, 
       CrossMatrix, $CellContext`inverseCrossMatrix, \
$CellContext`verticalMatrix, $CellContext`horizontalMatrix, DiamondMatrix}}, {{
       Hold[$CellContext`rad$$], 5, "neighborhood size"}, 1, 80, 1}, {
      Hold[
       Row[{
         Manipulate`Place[3], 
         Spacer[10], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "When looking at individual threads, it makes sense to keep the \
neighborhood size small (since once the neighborhood is larger than the \
feature, important details are invariably lost).\n\nObserve that dilation of \
the positive image is the same as the negative of the eroded negative image.\n\
\nWhat is the same as erosion operating on the positive image? Can you \
explain why?\n\nSet the shape to verticalMatrix and the size to 40. Now all \
four operators emphasize the vertical stripes.\n\nFind a way to emphasize the \
horizontal stripes.\n\nUse the crossMatrix to bring out both vertical and \
horizontal features simultaneously.", WindowTitle -> "Notes", WindowFloating -> 
            True]], Appearance -> None, BaseStyle -> {}, 
          DefaultBaseStyle -> {}]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {663.7439119338989, {4., 12.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$12958$$ = False, $CellContext`invert$12959$$ = 
    False, $CellContext`operation$12960$$ = 
    False, $CellContext`neighborhood$12961$$ = 0, $CellContext`rad$12962$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 7, $CellContext`invert$$ = 
        "negative", $CellContext`neighborhood$$ = 
        IdentityMatrix, $CellContext`operation$$ = 
        Dilation, $CellContext`rad$$ = 5}, "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$12958$$, False], 
        Hold[$CellContext`invert$$, $CellContext`invert$12959$$, False], 
        Hold[$CellContext`operation$$, $CellContext`operation$12960$$, False], 
        Hold[$CellContext`neighborhood$$, $CellContext`neighborhood$12961$$, 
         0], 
        Hold[$CellContext`rad$$, $CellContext`rad$12962$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`img$}, 
        If[$CellContext`invert$$ == "negative", $CellContext`img$ = 
          Part[$CellContext`allImagesXray, $CellContext`i$$], \
$CellContext`img$ = ColorNegate[
            Part[$CellContext`allImagesXray, $CellContext`i$$]]]; 
        ImageAdjust[
          $CellContext`operation$$[$CellContext`img$, 
           $CellContext`neighborhood$$[$CellContext`rad$$]]]], 
      "Specifications" :> {{{$CellContext`i$$, 7, "image"}, {
         1 -> "F458Diagonal12", 2 -> "F458Diagonal13", 3 -> "F458Diagonal29", 
          4 -> "F458Diagonal33", 5 -> "F458Diagonal36", 6 -> "F458Diagonal45",
           7 -> "F634Tile", 8 -> "F659Diagonal13", 9 -> "L07 Patch 1408-1731",
           10 -> "L07 Patch 3283-1151", 11 -> "L10histEq", 12 -> "L10Tile", 
          13 -> "L11Diagonal05", 14 -> "L11Diagonal24", 15 -> "L17Diagonal05",
           16 -> "rectModel", 17 -> "sinModel"}, ControlType -> PopupMenu, 
         ControlPlacement -> 1}, {{$CellContext`invert$$, "negative", ""}, {
         "negative", "positive"}, ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Manipulate`Place[2]}], {{$CellContext`operation$$, Dilation, 
          "operation"}, {
         Dilation -> "dilation", Erosion -> "erosion", Opening -> "opening", 
          Closing -> "closing"}}, {{$CellContext`neighborhood$$, 
          IdentityMatrix, "neighborhood shape"}, {
         IdentityMatrix, DiskMatrix, BoxMatrix, 
          CrossMatrix, $CellContext`inverseCrossMatrix, \
$CellContext`verticalMatrix, $CellContext`horizontalMatrix, 
          DiamondMatrix}}, {{$CellContext`rad$$, 5, "neighborhood size"}, 1, 
         80, 1, Appearance -> "Labeled", ControlPlacement -> 3}, 
        Row[{
          Manipulate`Place[3], 
          Spacer[10], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "When looking at individual threads, it makes sense to keep the \
neighborhood size small (since once the neighborhood is larger than the \
feature, important details are invariably lost).\n\nObserve that dilation of \
the positive image is the same as the negative of the eroded negative image.\n\
\nWhat is the same as erosion operating on the positive image? Can you \
explain why?\n\nSet the shape to verticalMatrix and the size to 40. Now all \
four operators emphasize the vertical stripes.\n\nFind a way to emphasize the \
horizontal stripes.\n\nUse the crossMatrix to bring out both vertical and \
horizontal features simultaneously.", WindowTitle -> "Notes", WindowFloating -> 
             True]], Appearance -> None, BaseStyle -> {}, 
           DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["Applying various morpholological operations to x-ray images", 
          Medium], 
        TrackedSymbols -> {$CellContext`i$$, $CellContext`invert$$, \
$CellContext`operation$$, $CellContext`rad$$, $CellContext`neighborhood$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{722., {116.91754141980782`, 124.08245858019218`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelXRayMorph",ExpressionUUID->"328995d8-98a2-42d2-b62a-f9a0050857ea"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 3, 1, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733320246479*^9},
 CellTags->"labelXRayMorph",
 CellLabel->"",ExpressionUUID->"7a181ef4-91a1-4dcd-81cf-172a4e8f42f8"],

Cell[BoxData[
 TemplateBox[{
  "Dilation", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
neither a rectangular array nor an image.\"", 2, 3, 2, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733328748268*^9},
 CellTags->"labelXRayMorph",
 CellLabel->"",ExpressionUUID->"87f9db8f-8d17-45d9-ac33-34db5d275e4b"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Dilation\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"FE`neighborhood$$368\\\", \\\"[\\\", \\\"FE`rad$$368\\\", \
\\\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 3, 3, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333291425743`*^9},
 CellTags->"labelXRayMorph",
 CellLabel->"",ExpressionUUID->"c6a28fa6-e0f1-4602-b786-4d9710585c59"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 43, 2, 31986344842962652840, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757854046488323`*^9},
 CellTags->"labelXRayMorph",
 CellLabel->"",ExpressionUUID->"c6bee696-2273-4a44-9dc6-294b531d4afc"],

Cell[BoxData[
 TemplateBox[{
  "Dilation", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
neither a rectangular array nor an image.\"", 2, 43, 3, 31986344842962652840, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757854053240747`*^9},
 CellTags->"labelXRayMorph",
 CellLabel->"",ExpressionUUID->"4247c8d9-3a9c-4e84-a3b9-9065723c51f9"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Dilation\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"FE`neighborhood$$347\\\", \\\"[\\\", \\\"FE`rad$$347\\\", \
\\\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 43, 4, 31986344842962652840, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757854057724557`*^9},
 CellTags->"labelXRayMorph",
 CellLabel->"",ExpressionUUID->"59b472d7-ebef-46bf-8c0e-ba53c1841bf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.554562393549609*^9, 
  3.5545623946597147`*^9}},ExpressionUUID->"4a1f9d93-05ea-43e4-9afc-\
cf33be38c042"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"1f4724c7-42b6-46fc-acdd-\
31f670c7821a"]
}, Open  ]],

Cell["\<\
When applying the morphological operations to color images, the simplest \
approach is to apply the filters to each of the red, green, and blue channels \
separately. This may have the effect of changing the colors. \
\>", "Text",
 CellChangeTimes->{{3.5516537090888777`*^9, 
  3.551653781811694*^9}},ExpressionUUID->"46bb5d97-6c3d-428e-b4cf-\
1fea5d431507"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelColorMorph", "=", 
   "\"\<Applying various morphological operations to color images\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoColorMorph", "=", 
   "\"\<Unpredictable color changes are one of the reasons morphological \
operators tend to find most use in binary and grayscale images.\\n\\nExample: \
observe the blanket in the bedroom scene.\\n\\nAs expected, dilation tends to \
brighten while erosion tends to darken the image (try increasing the \
neighborhood to emphasize these effects).\\n\\nThe neighborhood shape \
influences the way the colors smear (compare box to cross to \
horizontal).\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "img", "}"}], ",", 
     RowBox[{
      RowBox[{"img", "=", 
       RowBox[{"allImagesColor", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"ImageAdjust", "[", 
         RowBox[{"operation", "[", 
          RowBox[{"img", ",", 
           RowBox[{"neighborhood", "[", "nRad", "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "vanPlough", ",", "\"\<image\>\""}], "}"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Range", "[", "numFilesC", "]"}], "\[Rule]", "imageNamesC"}], 
      "]"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"operation", ",", "Dilation", ",", "\"\<operation\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Dilation", "\[Rule]", "\"\<dilation\>\""}], ",", 
       RowBox[{"Erosion", "\[Rule]", "\"\<erosion\>\""}], ",", 
       RowBox[{"Opening", "\[Rule]", "\"\<opening\>\""}], ",", 
       RowBox[{"Closing", "\[Rule]", "\"\<closing\>\""}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "neighborhood", ",", "CrossMatrix", ",", "\"\<neighborhood shape\>\""}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "IdentityMatrix", ",", "DiskMatrix", ",", "BoxMatrix", ",", 
       "CrossMatrix", ",", "inverseCrossMatrix", ",", "verticalMatrix", ",", 
       "horizontalMatrix", ",", "DiamondMatrix"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nRad", ",", "19", ",", "\"\<neighborhood size\>\""}], 
          "}"}], ",", "1", ",", "80", ",", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Spacer", "[", "10", "]"}], ",", 
      RowBox[{"info", "[", "infoColorMorph", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelColorMorph", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "i", ",", "invert", ",", "operation", ",", "nRad", ",", "neighborhood"}],
      "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "saveDef"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.551651820408436*^9, 3.551651916782713*^9}, {
   3.55165199858985*^9, 3.5516520008221083`*^9}, {3.551652108170733*^9, 
   3.5516521846590967`*^9}, {3.55165229463205*^9, 3.551652296037588*^9}, {
   3.551652610264205*^9, 3.551652616189437*^9}, {3.551652722133431*^9, 
   3.551652722903495*^9}, {3.552575072140458*^9, 3.552575249288685*^9}, {
   3.552595879409108*^9, 3.5525958986562357`*^9}, {3.55267495611421*^9, 
   3.5526750214191504`*^9}, 3.552675059746863*^9, {3.552675103822113*^9, 
   3.55267512488175*^9}, {3.5526751592053957`*^9, 3.552675178232359*^9}, {
   3.552675282481537*^9, 3.552675309206614*^9}, {3.552675403874592*^9, 
   3.552675441370234*^9}, {3.552945150468889*^9, 3.552945150738649*^9}, {
   3.553351119792273*^9, 3.553351129043253*^9}, {3.553702490845461*^9, 
   3.553702498075564*^9}},
 CellTags->
  "labelColorMorph",ExpressionUUID->"7a1d1f83-eed5-421c-a8c2-0d37b1308e85"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 5, $CellContext`neighborhood$$ = 
    CrossMatrix, $CellContext`nRad$$ = 19, $CellContext`operation$$ = 
    Dilation, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 5, "image"}, {
      1 -> "F205OldManWithBeard", 2 -> "F260HousesInSnow", 3 -> 
       "F458Sunflowers", 4 -> "F482BedroomAtArles", 5 -> 
       "F632PloughAndHarrow", 6 -> "F634SheepShearer", 7 -> 
       "F651FallingLeaves", 8 -> "F659Garden", 9 -> "F816TreeRoots", 10 -> 
       "L07Milkmaid", 11 -> "L11LittleStreet", 12 -> "L17WomanInBlue", 13 -> 
       "L30LoveLetter", 14 -> "vanGoghStrokes1", 15 -> "vanGoghStrokes2", 16 -> 
       "vanGoghStrokes3"}}, {{
       Hold[$CellContext`operation$$], Dilation, "operation"}, {
      Dilation -> "dilation", Erosion -> "erosion", Opening -> "opening", 
       Closing -> "closing"}}, {{
       Hold[$CellContext`neighborhood$$], CrossMatrix, 
       "neighborhood shape"}, {
      IdentityMatrix, DiskMatrix, BoxMatrix, 
       CrossMatrix, $CellContext`inverseCrossMatrix, \
$CellContext`verticalMatrix, $CellContext`horizontalMatrix, DiamondMatrix}}, {{
       Hold[$CellContext`nRad$$], 19, "neighborhood size"}, 1, 80, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[10], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Unpredictable color changes are one of the reasons morphological \
operators tend to find most use in binary and grayscale images.\n\nExample: \
observe the blanket in the bedroom scene.\n\nAs expected, dilation tends to \
brighten while erosion tends to darken the image (try increasing the \
neighborhood to emphasize these effects).\n\nThe neighborhood shape \
influences the way the colors smear (compare box to cross to horizontal).", 
            WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
          None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    886.637105369568, {4., 12.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$13010$$ = 
    False, $CellContext`operation$13011$$ = 
    False, $CellContext`neighborhood$13012$$ = 0, $CellContext`nRad$13013$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 5, $CellContext`neighborhood$$ = 
        CrossMatrix, $CellContext`nRad$$ = 19, $CellContext`operation$$ = 
        Dilation}, "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13010$$, False], 
        Hold[$CellContext`operation$$, $CellContext`operation$13011$$, False], 
        Hold[$CellContext`neighborhood$$, $CellContext`neighborhood$13012$$, 
         0], 
        Hold[$CellContext`nRad$$, $CellContext`nRad$13013$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`img$}, $CellContext`img$ = 
         Part[$CellContext`allImagesColor, $CellContext`i$$]; Image[
          ImageAdjust[
           $CellContext`operation$$[$CellContext`img$, 
            $CellContext`neighborhood$$[$CellContext`nRad$$]]], ImageSize -> 
          400]], "Specifications" :> {{{$CellContext`i$$, 5, "image"}, {
         1 -> "F205OldManWithBeard", 2 -> "F260HousesInSnow", 3 -> 
          "F458Sunflowers", 4 -> "F482BedroomAtArles", 5 -> 
          "F632PloughAndHarrow", 6 -> "F634SheepShearer", 7 -> 
          "F651FallingLeaves", 8 -> "F659Garden", 9 -> "F816TreeRoots", 10 -> 
          "L07Milkmaid", 11 -> "L11LittleStreet", 12 -> "L17WomanInBlue", 13 -> 
          "L30LoveLetter", 14 -> "vanGoghStrokes1", 15 -> "vanGoghStrokes2", 
          16 -> "vanGoghStrokes3"}, ControlType -> 
         PopupMenu}, {{$CellContext`operation$$, Dilation, "operation"}, {
         Dilation -> "dilation", Erosion -> "erosion", Opening -> "opening", 
          Closing -> "closing"}}, {{$CellContext`neighborhood$$, CrossMatrix, 
          "neighborhood shape"}, {
         IdentityMatrix, DiskMatrix, BoxMatrix, 
          CrossMatrix, $CellContext`inverseCrossMatrix, \
$CellContext`verticalMatrix, $CellContext`horizontalMatrix, 
          DiamondMatrix}}, {{$CellContext`nRad$$, 19, "neighborhood size"}, 1,
          80, 1, Appearance -> "Labeled", ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[10], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Unpredictable color changes are one of the reasons morphological \
operators tend to find most use in binary and grayscale images.\n\nExample: \
observe the blanket in the bedroom scene.\n\nAs expected, dilation tends to \
brighten while erosion tends to darken the image (try increasing the \
neighborhood to emphasize these effects).\n\nThe neighborhood shape \
influences the way the colors smear (compare box to cross to horizontal).", 
             WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
           None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["Applying various morphological operations to color images", 
          Medium], 
        TrackedSymbols -> {$CellContext`i$$, $CellContext`invert, \
$CellContext`operation$$, $CellContext`nRad$$, $CellContext`neighborhood$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{945., {116.91754141980782`, 124.08245858019218`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelColorMorph",ExpressionUUID->"d465af6e-f200-401e-845c-3888a19a2a9a"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 3, 4, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333294844894`*^9},
 CellTags->"labelColorMorph",
 CellLabel->"",ExpressionUUID->"ce87efe8-81c1-429e-b648-b8978f8eda2e"],

Cell[BoxData[
 TemplateBox[{
  "Dilation", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
neither a rectangular array nor an image.\"", 2, 3, 5, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87573332973326*^9},
 CellTags->"labelColorMorph",
 CellLabel->"",ExpressionUUID->"f126658d-8a53-4bd8-b3ce-b27378220c9a"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Dilation\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"FE`neighborhood$$370\\\", \\\"[\\\", \\\"FE`nRad$$370\\\", \\\
\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 3, 6, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87573332996347*^9},
 CellTags->"labelColorMorph",
 CellLabel->"",ExpressionUUID->"af7405b6-525a-416e-b82e-947659bfee09"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"ImageAdjust\\\", \\\"[\\\", \
RowBox[{\\\"Dilation\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allImagesColor\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", RowBox[{\\\"FE`neighborhood$$370\\\", \\\"[\\\", \
\\\"FE`nRad$$370\\\", \\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\) should be an \
array of rank 2 or 3 with machine-sized numbers.\"", 2, 3, 7, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733330270534*^9},
 CellTags->"labelColorMorph",
 CellLabel->"",ExpressionUUID->"51708d01-d10e-4d14-89a1-40d0bc360989"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 43, 5, 31986344842962652840, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757854064271245`*^9},
 CellTags->"labelColorMorph",
 CellLabel->"",ExpressionUUID->"6d9a8f2f-ac38-4f01-b372-f2479d2a8af3"],

Cell[BoxData[
 TemplateBox[{
  "Dilation", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
neither a rectangular array nor an image.\"", 2, 43, 6, 31986344842962652840, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875785407032772*^9},
 CellTags->"labelColorMorph",
 CellLabel->"",ExpressionUUID->"c6934935-d0d5-44a0-8b3d-1ec2c6ab178a"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Dilation\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"FE`neighborhood$$349\\\", \\\"[\\\", \\\"FE`nRad$$349\\\", \\\
\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 43, 7, 31986344842962652840, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757854075191364`*^9},
 CellTags->"labelColorMorph",
 CellLabel->"",ExpressionUUID->"a7b8bf81-9863-4906-9b62-3bda2aec8bfb"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"ImageAdjust\\\", \\\"[\\\", \
RowBox[{\\\"Dilation\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allImagesColor\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", RowBox[{\\\"FE`neighborhood$$349\\\", \\\"[\\\", \
\\\"FE`nRad$$349\\\", \\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\) should be an \
array of rank 2 or 3 with machine-sized numbers.\"", 2, 43, 8, 
   31986344842962652840, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875785407968981*^9},
 CellTags->"labelColorMorph",
 CellLabel->"",ExpressionUUID->"037efc30-62ae-48bc-bd98-b845d103753d"]
}, Open  ]],

Cell["\<\
HW: It is sometimes advantageous to conduct morphological operations on color \
images in the HSB colorspace. Generally, one applies the filters to the \
brightness channels, leaving the hue and saturation unchanged. Create a \
demonstration like the above that operates only on the brightness channel.\
\>", "Text",
 CellChangeTimes->{{3.5516537901550617`*^9, 
  3.551653892494549*^9}},ExpressionUUID->"6cfc39bc-019f-4980-9326-\
0baa90b62bd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combining Morphological Operations", "Subsection",
 CellChangeTimes->{{3.479587544375*^9, 3.47958754984375*^9}, {
   3.494107697101871*^9, 3.4941076974468117`*^9}, {3.497821897490428*^9, 
   3.497821904741086*^9}, 
   3.498071000835759*^9},ExpressionUUID->"fc8d0a16-66f1-4726-b219-\
1fc2ac157610"],

Cell["\<\
The fundamental operators of mathematical morphology can be combined and \
iterated to implement several useful image processing tasks, from edge and \
zero crossing detection, thinning and pruning, to filling and reconstruction. \
\>", "Text",
 CellChangeTimes->{{3.479587555484375*^9, 3.479587556984375*^9}, {
   3.4796456133125*^9, 3.479645653796875*^9}, {3.479645689125*^9, 
   3.479645772796875*^9}, {3.479645812046875*^9, 3.47964584234375*^9}, {
   3.494107621607419*^9, 3.49410762265291*^9}, {3.494115442625342*^9, 
   3.494115449409699*^9}, {3.551653926521112*^9, 3.5516539354227543`*^9}, 
   3.551659275548934*^9},ExpressionUUID->"1cffd746-c228-46d1-ac13-\
8063a97a8177"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Borders and Edges", "Subsection",
 CellChangeTimes->{{3.47958755971875*^9, 3.47958756159375*^9}, {
  3.479645854484375*^9, 3.479645854578125*^9}, {3.4941076874454327`*^9, 
  3.4941076939284763`*^9}, {3.551702324014193*^9, 3.551702325013782*^9}},
 CounterAssignments->{{"Section", 2}, {"Subsection", 0}, {
   "Subsubsection", 0}, {
   "NumberedEquation", 
    0}},ExpressionUUID->"010f35a0-98fb-47bc-a7ef-848324afa075"],

Cell[TextData[{
 "Borders of objects in binary images and edges in grayscale images are \
commonly of interest in image processing. The morphological operations of \
erosion and dilation may be used to detect borders and edges in a \
straightforward way. Recall that dilation expands the edges of a binary shape \
by an amount proportional to the size of the structuring element. Taking the \
dilated image and subtracting the original leaves only the expanded area; \
this is called the ",
 StyleBox["outer boundary",
  FontSlant->"Italic"],
 ". Similarly, erosion shrinks all edges of a binary shape. Subtracting the \
erosion from the original leaves an inner border called the ",
 StyleBox["inner boundary",
  FontSlant->"Italic"],
 ". A third variation is to subtract the erosion from the dilation to get the \
",
 StyleBox["double boundary",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{
  3.4951401499516783`*^9, {3.551702336818129*^9, 3.5517023591910543`*^9}, {
   3.5517024492096643`*^9, 3.5517026292496157`*^9}, {3.551702688457947*^9, 
   3.5517027552738123`*^9}, 
   3.551910212130095*^9},ExpressionUUID->"f2c45d83-3c55-412a-8722-\
3886feb146a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelBorders", "=", 
   "\"\<The image (top left), outer boundary (top right), inner boundary \
(bottom left) and double boundary\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoBorders", "=", 
   "\"\<Change the neighborhood size to make the boundaries thicker or \
thinner.\\n\\nThe double bounday is thicker than either the inner or outer \
boundary.\\n\\nTry several 'new images' to see the fidelity of the \
boundaries.\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"rd", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"setToOne", "=", 
        RowBox[{"Round", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{
              RowBox[{"100", "/", "2"}], ",", 
              RowBox[{"100", "/", "4"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"synBorImg", "=", 
        RowBox[{"Dilation", "[", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Point", "[", "setToOne", "]"}]}], "}"}], ",", 
            RowBox[{"Background", "\[Rule]", "Black"}]}], "]"}], ",", 
          RowBox[{"DiskMatrix", "[", "60", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RandomInteger", "[", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{"synBorImg", "=", 
           RowBox[{"RangeFilter", "[", 
            RowBox[{"synBorImg", ",", "10"}], "]"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rd", "=", "0"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"synBorImg", ",", 
          RowBox[{"ImageSubtract", "[", 
           RowBox[{
            RowBox[{"Dilation", "[", 
             RowBox[{"synBorImg", ",", "bRad"}], "]"}], ",", "synBorImg"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ImageSubtract", "[", 
           RowBox[{"synBorImg", ",", 
            RowBox[{"Erosion", "[", 
             RowBox[{"synBorImg", ",", "bRad"}], "]"}]}], "]"}], ",", 
          RowBox[{"ImageSubtract", "[", 
           RowBox[{
            RowBox[{"Dilation", "[", 
             RowBox[{"synBorImg", ",", "bRad"}], "]"}], ",", 
            RowBox[{"Erosion", "[", 
             RowBox[{"synBorImg", ",", "bRad"}], "]"}]}], "]"}]}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rd", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{"\"\<New Image\>\"", ",", 
            RowBox[{"rd", "=", "1"}]}], "]"}], "&"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "30", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"bRad", ",", "3", ",", "\"\<neighborhood size\>\""}], "}"}],
          ",", "1", ",", "6", ",", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoBorders", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelBorders", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"rd", ",", "bRad"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], "\n"}], "Input",
 CellChangeTimes->{
  3.551703619731689*^9, {3.551703653837843*^9, 3.551703708079378*^9}, {
   3.55170375325027*^9, 3.551703772556554*^9}, {3.551703837097252*^9, 
   3.551703888237934*^9}, {3.5517039316439457`*^9, 3.551704092118372*^9}, {
   3.5525755252506313`*^9, 3.552575570337426*^9}, {3.552579936148527*^9, 
   3.5525799467620373`*^9}, {3.552595908201902*^9, 3.552595927345306*^9}, {
   3.5526755483322773`*^9, 3.552675639316733*^9}, {3.5527597024290037`*^9, 
   3.552759711276039*^9}, {3.553351137773563*^9, 3.553351151587001*^9}},
 CellTags->
  "labelBorders",ExpressionUUID->"58532ff0-d532-41cf-93cf-2da5ac733938"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bRad$$ = 3, $CellContext`rd$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rd$$], 1, ""}, 
      Dynamic[Button["New Image", $CellContext`rd$$ = 1]& ]}, {{
       Hold[$CellContext`bRad$$], 3, "neighborhood size"}, 1, 6, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[30], 
         Manipulate`Place[2], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Change the neighborhood size to make the boundaries thicker or \
thinner.\n\nThe double bounday is thicker than either the inner or outer \
boundary.\n\nTry several 'new images' to see the fidelity of the boundaries.",
             WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
          None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    625., {380., 387.0454545454545}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`bRad$13060$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`bRad$$ = 3, $CellContext`rd$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`bRad$$, $CellContext`bRad$13060$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (If[$CellContext`rd$$ == 1, $CellContext`setToOne = Round[
            Abs[
             RandomVariate[
              NormalDistribution[100/2, 100/4], {8, 
              2}]]]; $CellContext`synBorImg = Dilation[
            Graphics[{White, 
              Point[$CellContext`setToOne]}, Background -> Black], 
            DiskMatrix[60]]; 
         If[RandomInteger[] == 
           1, $CellContext`synBorImg = 
            RangeFilter[$CellContext`synBorImg, 10]; Null]; $CellContext`rd$$ = 
          0; Null]; GraphicsGrid[{{$CellContext`synBorImg, 
           ImageSubtract[
            
            Dilation[$CellContext`synBorImg, $CellContext`bRad$$], \
$CellContext`synBorImg]}, {
           ImageSubtract[$CellContext`synBorImg, 
            Erosion[$CellContext`synBorImg, $CellContext`bRad$$]], 
           ImageSubtract[
            Dilation[$CellContext`synBorImg, $CellContext`bRad$$], 
            Erosion[$CellContext`synBorImg, $CellContext`bRad$$]]}}, 
         ImageSize -> 500]), "Specifications" :> {{{$CellContext`rd$$, 1, ""}, 
         Dynamic[Button["New Image", $CellContext`rd$$ = 1]& ], 
         ControlPlacement -> 
         1}, {{$CellContext`bRad$$, 3, "neighborhood size"}, 1, 6, 1, 
         Appearance -> "Labeled", ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[30], 
          Manipulate`Place[2], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Change the neighborhood size to make the boundaries thicker or \
thinner.\n\nThe double bounday is thicker than either the inner or outer \
boundary.\n\nTry several 'new images' to see the fidelity of the boundaries.",
              WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
           None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The image (top left), outer boundary (top right), inner \
boundary (bottom left) and double boundary", Medium], 
        TrackedSymbols -> {$CellContext`rd$$, $CellContext`bRad$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{683., {447.91754141980783`, 455.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`setToOne = {{49, 60}, {32, 44}, {56, 78}, {
        41, 48}, {67, 36}, {61, 45}, {40, 35}, {65, 
        34}}, $CellContext`synBorImg = Image[CompressedData["
1:eJztnUFuM8mVhDX2Zpa+gm/hrZeztTH7seG24U0P0DYw8AF4n7nbfwC5Kakl
sn6pWJX1Il9EVHxAG3C3KGZ+CD0WqzJf/vbP//uHv/7q6enpH//58//84U//
9/uffvrTv/74m5//z3//+I+//+3HH/7yXz/+84e//fDT7/7865//5fWf//+P
p6f/+fkfd749d/Gte+pTiF8s8YslfrHEL5b4xRK/WOIXS/xiiV8s8YslfrHE
L5b4xRK/WC5dgr9duqc+hza/3ROfRPxiiV8s8YslfrE0XUCc5fKhK8BniW/8
oolfLC0F+L38frvHsSq3+P3lzZf/3tAyk9+3/2rluKFAfNj7+kd8FDf4fX/v
1Z8yMTw9wDfeHvygh+Lpfj/e+vHPGhhm9utgeHKBuPW1+wWSTPZ7884bXyFu
eGqA71xtfpG24al+b994x8uUBU8M8L2n4ReKMU3wwtKulyobnub3/m13vlhX
8KQALw0dfLkQk/wu2P16WcFTArxf6He/IYKxRDAYXcEafnUFiwQ4gtFEMBjZ
5RMigmUDHMFoIhiMiuBuT8NoCNYNsIrgbk3jXI7fh8EjHGCNCEcwGOEKIVEj
pAOsYFg6wE/8RUI8wPwRVg8wu2F9vy+GaRXLF4hXeEPsEOArrCE2CfCVy8h6
EDguAX7l8umqm07tXn5fuRxd5VTp16dAfEXvtxDHAN/TW5TtA9z9JVp62fVj
uvW6G+7X++xcJAjie8VWMIde2xpBEt8rloJ59HoKZvJrKJioPFyxE8yl104w
WXyf3QTT6TUTTOjXSTBfebjiI5hSr9EdYVa/LgEm9esimLP8XvEQTKvXpAQz
+3UIMLFfiwBT+zUIMLNfA8G8lw8vyFcIbr36ASb3Kx9ger/iAWb3qx7g+MXC
71e7QND7FQ+wgF/pAPP71Q5w/GJR8KtcIAT8Sgc4frHELxYJv8IFmPz+7ysJ
MJb4xRK/WBr8Lne/D38ExO+Cr7o3DFqW8DvrAuJR95EBx7mA+DCxqQfGXsXx
+8Ke7k+7DMfvQOOnHSGO37HGZVsNKxRgpN/xtnAbDZ/b76F4bRJ8Zr9Hexpu
ibBAgQD5regYucHwWf0WBeuhYP4AQ/yWTfuh4DP6rewm+6hGnNBv8d/sumD6
AlHut3zG64LP5hcQqFXB7AEu9guZ7qpgbr/F939BaVobJXeAa+MLm6us4FK/
wJmuCT6LX2iQVgQzB7jQL3iaK4LP4Rc9y6+HyhvgwssH+CQVK0RdfCdMUVBw
md8pE9QrwWV+58xPrQSXld9J01OrEGLxXR0wo+Aqv9PmpvU9uao8TJyZlOCq
+M6c19qYyQQLxlfqZrtifB+Mmkpwkd/Jc5J53llVHmbPaD0WPEfNapaHx+Mm
ibDkp9umgXMIVo3vhpEz1AjZ+G4aervhsjs7HfPY8qfXXCTk7uzsHnxrhNVu
TA6NvtGwdHy3D3/35rCq8ZU91uT2+9QT4sKnxvR+G0Ks9FC+ZgaPNpcXj65M
b9tj24EpfN4cATG2wiWpQn7vLL8DGFrlil85v0vqR1a6oDp+lwOrXa8ev4tx
SWwHmDgP0mG90fcNvyrAtYOqbmYUv3djKu8VFb+3Q6pvxRW/HwNCdDrT9ztt
o3/r6AbmUzSDWY0qxtD3O6vRyhgGfuc0ChrEwu+MRleDmPjFN2obxMUvutHg
KD5+sY0yR3Hy+wRs9DqKmV9Yo+JR7Pw+QRptHxjLNKGLSWJnWNwofhz55xdr
lB10MI61XwLiF0v8YolfLCLrz3QRWD8pTfxiiV8szPsvLKDdP2RC/GLh3L9p
BOH+Yyv49s+bwdb/wY34xULVf8cRov5RlvD0PzOFpX+fKyT9J32h6J/qDEH/
X2v6+1eb091/3Z3u8wPs6T3/4gR0nt9yCvrOHzoHfednnYSu899OQ9P5hWqM
rytuOX9TiMPr4hvOj1WhZl/H/POPJajblzT7/G4FSvfVTT5/np7yfaHFgrX1
IvY1V7bcbdkVVQZqX35ZhKXtAvtKcLe1mQO0Lwp1W5sZwAUQt7WZwIw/YNq2
NnjmfACxtrVBM+8CirOtDZipXwAY29pgmf4Flq6tDZSOGzBkbW2QdN1AZGpr
A6T1BjhNWxsYDA9wCNraoMgDSCh5gA4lC0CwZAETlCzAg5IFpFCyABpLFvBD
yQYULNlABSUbAKFkAyuWbMCGkgYCWNIAA0oauGBJAyIs8QslDeCwpIEhlDTg
xJIGsljiF0oaeGNJA3os8YslfqHkABssOYAJS/xiiV8s8YslfqG4HqDLguMB
0EzEL5b4xRK/WOIXS/xiiV8s8YslfrHEL5b4xRK/WOIXS/xiiV8suf8LJs8v
sMQvlvjFEr9Y4hdL1p+ByfpJLPGLJX6xZP8FmOwfwhK/WLJ/E0z2H2PJ/nkw
6f+AJX6xpP8OmPSPwpL+Z2DSvw9L+k+CSf9UMOn/iyX9q8Gk/zqWnB8AJudf
gMn5LWBy/hCWnJ8FJue/gcn5hWAYzt+0pvX82DPQdf7xaeg4v/tUTD9//mwU
C47eJZfVk+B32o3eTyiL8B67xgejf0eR4I2O3swuX+xsuaJGbJJz+cTs0rKl
46OGt2i5rLu9ceyo+FCR2GZ3+69zNDwe4cc6Nkb39lcaKh4zvMku5PfqgcgZ
8u9CkOo6ia7relR+zs+4LhGk6Dp12nW1Ise/Z839XqjJgfsELfc1TkPuy0HJ
fWUoeS4CJc/1oOS5NJSsq4CSdUFQsq4NStZlQsm6YixZFw8l+zqgZF8SlOyr
w5J9oVCyrxlL9uVDSV8JKOmLgiV9faCkLxWW9FWDkr6AWNLXEknlYof4vefR
WjWQ33MUiN0LhusEd099AvPLwo1f9wD3RfdNcLcAKJ3R9ffbb9e6QLSdlHqH
a4AZwnvF0y+LXVO/HKXhBccCTKTXMMA8teEFN79U4X2288um18wvnV4vv3x6
rS4gCPU6BZhSr49fTr02fkn1uvhl1evil1WviV/a+Hr45dVr4ZdYr4VfYr0O
fpnj6+CXWa+BX+r46vvl1qvvl1uvvF/2+Krf/+XWm/iCUfdLrjd+wYj7ZS8P
6n7p9WpfPiS+WNj1xi8Ybb/85UG7/LLrFY9v/IJh9yteHvjLb7ehY9Dr1Y4v
v99uQQeJXyzkftXLA73fbj8HIb98SHyxqMeX3K98fLn96usl99tt5zjMfg3i
y+23W04BxH4d4kvs10Ivr18PvcR+u83UwOrXJL6sfl30kvq10cvp10cvpV8j
vT00NmvunvoU4hdL/GKJXyzxiyV+scQvlvjFEr9Y4hdL/GKJXyzxiyV+scQv
lrZFsWe5s9zmt3vik4hfLPGLJX6xxC+WpguIs1w+dAX4LPGNXzTxi6WlAL+X
32/3OFblFr+/vPny3xtaZvL79l+tHDcUiA97X/+Ij+IGv+/vvfpTJoanB/jG
24Mf9FA83e/HWz/+WQPDzH4dDE8uELe+dr9Aksl+b9554yvEDU8N8J2rzS/S
NjzV7+0b73iZsuCJAb73NPxCMaYJXlja9VJlw9P83r/tzhfrCp4U4KWhgy8X
YpLfBbtfLyt4SoD3C/3uN0QwlggGoytYw6+uYJEARzCaCAYju3xCRLBsgCMY
TQSDURHc7WkYDcG6AVYR3K1pnMvx+zB4hAOsEeEIBiNcISRqhHSAFQxLB/iJ
v0iIB5g/wuoBZjes7/fFMK1i+QLxCm+IHQJ8hTXEJgG+chlZDwLHJcCvXD5d
ddOp3cvvK5ejq5wq/foUiK/o/RbiGOB7eouyfYC7v0RLL7t+TLded8P9ep+d
iwRBfK/YCubQa1sjSOJ7xVIwj15PwUx+DQUTlYcrdoK59NoJJovvs5tgOr1m
ggn9OgnmKw9XfART6jW6I8zq1yXApH5dBHOW3ysegmn1mpRgZr8OASb2axFg
ar8GAWb2ayCY9/LhBfkKwa1XP8DkfuUDTO9XPMDsftUDHL9Y+P1qFwh6v+IB
FvArHWB+v9oBjl8sCn6VC4SAX+kAxy+W+MUi4Ve4AJPf/30lAcYSv1jiF0uD
3+Xu9+GPgPhd8FX3hkHLEn5nXUA86j4y4DgXEB8mNvXA2Ks4fl/Y0/1pl+H4
HWj8tCPE8TvWuGyrYYUCjPQ73hZuo+Fz+z0Ur02Cz+z3aE/DLREWKBAgvxUd
IzcYPqvfomA9FMwfYIjfsmk/FHxGv5XdZB/ViBP6Lf6bXRdMXyDK/ZbPeF3w
2fwCArUqmD3AxX4h010VzO23+P4vKE1ro+QOcG18YXOVFVzqFzjTNcFn8QsN
0opg5gAX+gVPc0XwOfyiZ/n1UHkDXHj5AJ+kYoWoi++EKQoKLvM7ZYJ6JbjM
75z5qZXgsvI7aXpqFUIsvqsDZhRc5Xfa3LS+J1eVh4kzkxJcFd+Z81obM5lg
wfhK3WxXjO+DUVMJLvI7eU4yzzurysPsGa3HgueoWc3y8HjcJBGW/HTbNHAO
warx3TByhhohG99NQ283XHZnp2MeW/70mouE3J2d3YNvjbDajcmh0Tcalo7v
9uHv3hxWNb6yx5rcfp96Qlz41Jjeb0OIlR7K18zg0eby4tGV6W17bDswhc+b
IyDGVrgkVcjvneV3AEOrXPEr53dJ/chKF1TH73JgtevV43cxLontABPnQTqs
N/q+4VcFuHZQ1c2M4vduTOW9ouL3dkj1rbji92NAiE5n+n6nbfRvHd3AfIpm
MKtRxRj6fmc1WhnDwO+cRkGDWPid0ehqEBO/+EZtg7j4RTcaHMXHL7ZR5ihO
fp+AjV5HMfMLa1Q8ip3fJ0ij7QNjmSZ0MUnsDIsbxY8j//xijbKDDsax9ktA
/GKJXyzxi0Vk/ZkuAusnpYlfLPGLhXn/hQW0+4dMiF8snPs3jSDcf2wF3/55
M9j6P7gRv1io+u84QtQ/yhKe/memsPTvc4Wk/6QvFP1TnSHo/2tNf/9qc7r7
r7vTfX6APb3nX5yAzvNbTkHf+UPnoO/8rJPQdf7baWg6v1CN8XXFLedvCnF4
XXzD+bEq1OzrmH/+sQR1+5Jmn9+tQOm+usnnz9NTvi+0WLC2XsS+5sqWuy27
ospA7csvi7C0XWBfCe62NnOA9kWhbmszA7gA4rY2E5jxB0zb1gbPnA8g1rY2
aOZdQHG2tQEz9QsAY1sbLNO/wNK1tYHScQOGrK0Nkq4biExtbYC03gCnaWsD
g+EBDkFbGxR5AAklD9ChZAEIlixggpIFeFCygBRKFkBjyQJ+KNmAgiUbqKBk
AyCUbGDFkg3YUNJAAEsaYEBJAxcsaUCEJX6hpAEcljQwhJIGnFjSQBZL/EJJ
A28saUCPJX6xxC+UHGCDJQcwYYlfLPGLJX6xxC8U1wN0WXA8AJqJ+MUSv1ji
F0v8YolfLPGLJX6xxC+W+MUSv1jiF0v8YolfLPGLJfd/weT5BZb4xRK/WOIX
S/xiyfozMFk/iSV+scQvluy/AJP9Q1jiF0v2b4LJ/mMs2T8PJv0fsMQvlvTf
AZP+UVjS/wxM+vdhSf9JMOmfCib9f7GkfzWY9F/HkvMDwOT8CzA5vwVMzh/C
kvOzwOT8NzA5vxAMw/mb1rSeH3sGus4/Pg0d53efiunnz5+NYsHRu+SyehL8
TrvR+wllEd5j1/hg9O8oErzR0ZvZ5YudLVfUiE1yLp+YXVq2dHzU8BYtl3W3
N44dFR8qEtvsbv91jobHI/xYx8bo3v5KQ8VjhjfZhfxePRA5Q/5dCFJdJ9F1
XY/Kz/kZ1yWCFF2nTruuVuT496y53ws1OXCfoOW+xmnIfTkoua8MJc9FoOS5
HpQ8l4aSdRVQsi4ISta1Qcm6TChZV4wl6+KhZF8HlOxLgpJ9dViyLxRK9jVj
yb58KOkrASV9UbCkrw+U9KXCkr5qUNIXEEv6WiKpXOwQv/c8WqsG8nuOArF7
wXCd4O6pT2B+Wbjx6x7gvui+Ce4WAKUzuv5+++1aF4i2k1LvcA0wQ3ivePpl
sWvql6M0vOBYgIn0GgaYpza84OaXKrzPdn7Z9Jr5pdPr5ZdPr9UFBKFepwBT
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
         "], "Byte", ColorSpace -> "RGB", Interleaving -> False]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelBorders",ExpressionUUID->"c75e5be9-5eae-46cb-9120-80fa354d9bbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.554562408056106*^9, 
  3.554562409069146*^9}},ExpressionUUID->"1ddf71f8-f03d-4310-8eaa-\
6d7e50addab1"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"71e8e34e-00e6-4b9a-aa4b-\
871125d79aa1"]
}, Open  ]],

Cell["\<\
The boundary finding operations can be used to find boundaries of grayscale \
and color images in the same way. While all three boundaries are basically \
the same in the binary case (except for the width) the boundaries can vary \
substantially when applied to grayscale and color images.\
\>", "Text",
 CellChangeTimes->{{3.551706557864779*^9, 3.5517066015249434`*^9}, {
  3.5517067934132223`*^9, 3.55170683115248*^9}, {3.5526768584724483`*^9, 
  3.5526769183082457`*^9}},ExpressionUUID->"4e702c33-643f-44c4-80ae-\
518f3b10aa89"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelBordersBW", "=", 
   "\"\<The three boundary operations applied to binary, grayscale and color \
images\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoBordersBW", "=", 
   "\"\<Compare the boundaries of binary, grayscale, and color \
images.\\n\\nThe threshold only has effect in the binary case. Observe how \
different threshold values bring out different portions of the \
image.\\n\\nThe identity/invert button inverts the output to show black edges \
on a white background (rather than white edges on a black \
background).\\n\\nFor grayscale, the double boundary is brighter than the \
inner or outer, but may have a ghosting effect.\\n\\nWhen applied to color \
images, the boundaries may take on the color of the surrounding image. What \
does this suggest about the implementation?\\n\\nMake the bedroom scene look \
like a pencil sketch (color/invert/size=8)\\n\\nMake the bedroom scene look \
like a watercolor (color/identity/size=25)\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "img", "}"}], ",", 
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"color", "\[Equal]", "\"\<color\>\""}], ",", 
        RowBox[{
         RowBox[{"img", "=", 
          RowBox[{"allImagesColor", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"color", "\[Equal]", "\"\<grayscale\>\""}], ",", 
        RowBox[{
         RowBox[{"img", "=", 
          RowBox[{"ColorConvert", "[", 
           RowBox[{
            RowBox[{"allImagesColor", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<Grayscale\>\""}], 
           "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{"color", "\[Equal]", "\"\<binary\>\""}], ",", 
        RowBox[{"img", "=", 
         RowBox[{"Binarize", "[", 
          RowBox[{
           RowBox[{"allImagesColor", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}]}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"invert", "\[Equal]", "\"\<identity\>\""}], ",", 
        RowBox[{"negate", "=", "Identity"}], ",", 
        RowBox[{"negate", "=", "ColorNegate"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"img", ",", 
            RowBox[{"negate", "[", 
             RowBox[{"ImageSubtract", "[", 
              RowBox[{
               RowBox[{"Dilation", "[", 
                RowBox[{"img", ",", "bRadius"}], "]"}], ",", "img"}], "]"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"negate", "[", 
             RowBox[{"ImageSubtract", "[", 
              RowBox[{"img", ",", 
               RowBox[{"Erosion", "[", 
                RowBox[{"img", ",", "bRadius"}], "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"negate", "[", 
             RowBox[{"ImageSubtract", "[", 
              RowBox[{
               RowBox[{"Dilation", "[", 
                RowBox[{"img", ",", "bRadius"}], "]"}], ",", 
               RowBox[{"Erosion", "[", 
                RowBox[{"img", ",", "bRadius"}], "]"}]}], "]"}], "]"}]}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "vermeerMilk", ",", "\"\<image\>\""}], "}"}], ",", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Range", "[", "numFilesC", "]"}], "\[Rule]", 
           "imageNamesC"}], "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], " ", ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"color", ",", "\"\<grayscale\>\"", ",", "\"\<\>\""}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<binary\>\"", ",", "\"\<grayscale\>\"", ",", "\"\<color\>\""}], 
          "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"invert", ",", "\"\<identity\>\"", ",", "\"\<\>\""}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"\"\<identity\>\"", ",", "\"\<invert\>\""}], "}"}]}], "}"}],
        "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoBordersBW", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", "0.5", ",", "\"\<binarization threshold\>\""}], 
          "}"}], ",", "0", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"bRadius", ",", "3", ",", "\"\<neighborhood size\>\""}], 
          "}"}], ",", "1", ",", "30", ",", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
       "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelBordersBW", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "color", ",", "bRadius", ",", "t", ",", "invert"}], 
     "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "saveDef"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.55170538343515*^9, 3.551705409349*^9}, {
   3.551705448230732*^9, 3.551705492946061*^9}, {3.551705563098418*^9, 
   3.551705581921534*^9}, {3.5517056130668383`*^9, 3.551705637822633*^9}, 
   3.551705689018153*^9, {3.551706106124497*^9, 3.551706164831531*^9}, {
   3.551706223859435*^9, 3.5517063676721563`*^9}, {3.551706404629099*^9, 
   3.551706425303754*^9}, {3.5517065232070312`*^9, 3.551706524333445*^9}, {
   3.551706618642296*^9, 3.5517066363962*^9}, {3.552579957093696*^9, 
   3.552579996640499*^9}, {3.552595951442895*^9, 3.552595969492674*^9}, {
   3.5526769809590387`*^9, 3.552677280021953*^9}, {3.5526817602460537`*^9, 
   3.552682069878913*^9}, {3.55268213046305*^9, 3.552682136289535*^9}, {
   3.552682184480315*^9, 3.5526822805929728`*^9}, {3.552682327592971*^9, 
   3.5526823378086243`*^9}, {3.552682397036574*^9, 3.55268239890518*^9}, {
   3.552682578225822*^9, 3.552682635534226*^9}, {3.552682676655918*^9, 
   3.552682677927153*^9}, {3.552682710655767*^9, 3.552682740479533*^9}, {
   3.5533511617575483`*^9, 3.5533511747623796`*^9}},
 CellTags->
  "labelBordersBW",ExpressionUUID->"7c411ce2-054b-4095-95b8-651b88f0fa87"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bRadius$$ = 3, $CellContext`color$$ = 
    "grayscale", $CellContext`i$$ = 10, $CellContext`invert$$ = 
    "identity", $CellContext`t$$ = 0.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 10, "image"}, {
      1 -> "F205OldManWithBeard", 2 -> "F260HousesInSnow", 3 -> 
       "F458Sunflowers", 4 -> "F482BedroomAtArles", 5 -> 
       "F632PloughAndHarrow", 6 -> "F634SheepShearer", 7 -> 
       "F651FallingLeaves", 8 -> "F659Garden", 9 -> "F816TreeRoots", 10 -> 
       "L07Milkmaid", 11 -> "L11LittleStreet", 12 -> "L17WomanInBlue", 13 -> 
       "L30LoveLetter", 14 -> "vanGoghStrokes1", 15 -> "vanGoghStrokes2", 16 -> 
       "vanGoghStrokes3"}}, {{
       Hold[$CellContext`color$$], "grayscale", ""}, {
      "binary", "grayscale", "color"}}, {{
       Hold[$CellContext`invert$$], "identity", ""}, {"identity", "invert"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Manipulate`Place[2], 
         Spacer[20], 
         Manipulate`Place[3], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Compare the boundaries of binary, grayscale, and color images.\n\n\
The threshold only has effect in the binary case. Observe how different \
threshold values bring out different portions of the image.\n\nThe \
identity/invert button inverts the output to show black edges on a white \
background (rather than white edges on a black background).\n\nFor grayscale, \
the double boundary is brighter than the inner or outer, but may have a \
ghosting effect.\n\nWhen applied to color images, the boundaries may take on \
the color of the surrounding image. What does this suggest about the \
implementation?\n\nMake the bedroom scene look like a pencil sketch \
(color/invert/size=8)\n\nMake the bedroom scene look like a watercolor \
(color/identity/size=25)", WindowTitle -> "Notes", WindowFloating -> True]], 
          Appearance -> None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 0.5, "binarization threshold"}, 0, 1}, {{
       Hold[$CellContext`bRadius$$], 3, "neighborhood size"}, 1, 30, 1}, {
      Hold[
       Row[{
         Manipulate`Place[4], 
         Spacer[20], 
         Manipulate`Place[5]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {875., {3., 8.8456678700361}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$13197$$ = False, $CellContext`color$13198$$ = 
    0, $CellContext`invert$13199$$ = False, $CellContext`t$13200$$ = 
    0, $CellContext`bRadius$13201$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`bRadius$$ = 3, $CellContext`color$$ = 
        "grayscale", $CellContext`i$$ = 10, $CellContext`invert$$ = 
        "identity", $CellContext`t$$ = 0.5}, "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13197$$, False], 
        Hold[$CellContext`color$$, $CellContext`color$13198$$, 0], 
        Hold[$CellContext`invert$$, $CellContext`invert$13199$$, False], 
        Hold[$CellContext`t$$, $CellContext`t$13200$$, 0], 
        Hold[$CellContext`bRadius$$, $CellContext`bRadius$13201$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`img$}, 
        Which[$CellContext`color$$ == 
          "color", $CellContext`img$ = 
           Part[$CellContext`allImagesColor, $CellContext`i$$]; 
          Null, $CellContext`color$$ == 
          "grayscale", $CellContext`img$ = ColorConvert[
             Part[$CellContext`allImagesColor, $CellContext`i$$], 
             "Grayscale"]; Null, $CellContext`color$$ == 
          "binary", $CellContext`img$ = Binarize[
            
            Part[$CellContext`allImagesColor, $CellContext`i$$], \
$CellContext`t$$]]; 
        If[$CellContext`invert$$ == "identity", $CellContext`negate = 
          Identity, $CellContext`negate = ColorNegate]; 
        GraphicsGrid[{{$CellContext`img$, 
            $CellContext`negate[
             ImageSubtract[
              
              Dilation[$CellContext`img$, $CellContext`bRadius$$], \
$CellContext`img$]]}, {
            $CellContext`negate[
             ImageSubtract[$CellContext`img$, 
              Erosion[$CellContext`img$, $CellContext`bRadius$$]]], 
            $CellContext`negate[
             ImageSubtract[
              Dilation[$CellContext`img$, $CellContext`bRadius$$], 
              Erosion[$CellContext`img$, $CellContext`bRadius$$]]]}}, 
          ImageSize -> 700]], 
      "Specifications" :> {{{$CellContext`i$$, 10, "image"}, {
         1 -> "F205OldManWithBeard", 2 -> "F260HousesInSnow", 3 -> 
          "F458Sunflowers", 4 -> "F482BedroomAtArles", 5 -> 
          "F632PloughAndHarrow", 6 -> "F634SheepShearer", 7 -> 
          "F651FallingLeaves", 8 -> "F659Garden", 9 -> "F816TreeRoots", 10 -> 
          "L07Milkmaid", 11 -> "L11LittleStreet", 12 -> "L17WomanInBlue", 13 -> 
          "L30LoveLetter", 14 -> "vanGoghStrokes1", 15 -> "vanGoghStrokes2", 
          16 -> "vanGoghStrokes3"}, ControlType -> PopupMenu, 
         ControlPlacement -> 1}, {{$CellContext`color$$, "grayscale", ""}, {
         "binary", "grayscale", "color"}, ControlPlacement -> 
         2}, {{$CellContext`invert$$, "identity", ""}, {"identity", "invert"},
          ControlPlacement -> 3}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Manipulate`Place[2], 
          Spacer[20], 
          Manipulate`Place[3], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Compare the boundaries of binary, grayscale, and color images.\n\
\nThe threshold only has effect in the binary case. Observe how different \
threshold values bring out different portions of the image.\n\nThe \
identity/invert button inverts the output to show black edges on a white \
background (rather than white edges on a black background).\n\nFor grayscale, \
the double boundary is brighter than the inner or outer, but may have a \
ghosting effect.\n\nWhen applied to color images, the boundaries may take on \
the color of the surrounding image. What does this suggest about the \
implementation?\n\nMake the bedroom scene look like a pencil sketch \
(color/invert/size=8)\n\nMake the bedroom scene look like a watercolor \
(color/identity/size=25)", WindowTitle -> "Notes", WindowFloating -> True]], 
           Appearance -> None, BaseStyle -> {}, 
           DefaultBaseStyle -> {}]}], {{$CellContext`t$$, 0.5, 
          "binarization threshold"}, 0, 1, ControlPlacement -> 
         4}, {{$CellContext`bRadius$$, 3, "neighborhood size"}, 1, 30, 1, 
         Appearance -> "Labeled", ControlPlacement -> 5}, 
        Row[{
          Manipulate`Place[4], 
          Spacer[20], 
          Manipulate`Place[5]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The three boundary operations applied to binary, grayscale and \
color images", Medium], 
        TrackedSymbols -> {$CellContext`i$$, $CellContext`color$$, \
$CellContext`bRadius$$, $CellContext`t$$, $CellContext`invert$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{933., {83.91754141980782, 91.08245858019218}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelBordersBW",ExpressionUUID->"cea20827-675c-444e-8d4f-dbc59f34e43f"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 3, 8, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733331036907*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"d07f18c2-9cbe-4b89-b34f-0d008f2c8267"],

Cell[BoxData[
 TemplateBox[{
  "ColorConvert", "ccvinput", 
   "\"\\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) should be a valid image, a \
color directive, a list of machine-sized real numbers of length up to 5, or a \
list of such objects.\"", 2, 3, 9, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733331340046*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"c5a89aa3-8ea2-4a04-a8e5-ad9b40c54a2a"],

Cell[BoxData[
 TemplateBox[{
  "Dilation", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorConvert\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"\\\\\\\"Grayscale\
\\\\\\\"\\\"}], \\\"]\\\"}]\\) is neither a rectangular array nor an \
image.\"", 2, 3, 10, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333319050016`*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"e2e58fde-4858-42de-8d37-2543549d8ed1"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Dilation\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorConvert\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"\\\\\\\"Grayscale\
\\\\\\\"\\\"}], \\\"]\\\"}], \\\",\\\", \\\"FE`bRadius$$374\\\"}], \
\\\"]\\\"}]\\).\"", 2, 3, 11, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333321787434`*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"462c9f1b-2244-4623-9058-f8168853eb46"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorConvert\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"\\\\\\\"Grayscale\
\\\\\\\"\\\"}], \\\"]\\\"}]\\) is neither a rectangular array nor an \
image.\"", 2, 3, 12, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733332442542*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"9da168ec-8e37-471f-832a-87f6fc7abd65"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ColorConvert\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"\\\\\\\"Grayscale\
\\\\\\\"\\\"}], \\\"]\\\"}]\\).\"", 2, 3, 13, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333327438745`*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"0f89a7b1-ac0b-4faf-a3a7-59b4302b2fca"],

Cell[BoxData[
 TemplateBox[{
  "Dilation", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorConvert\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"\\\\\\\"Grayscale\
\\\\\\\"\\\"}], \\\"]\\\"}]\\) is neither a rectangular array nor an \
image.\"", 2, 3, 14, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733333012108*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"9fcbcd07-7756-4a51-a999-d7603d4a49b5"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorConvert\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"\\\\\\\"Grayscale\
\\\\\\\"\\\"}], \\\"]\\\"}]\\) is neither a rectangular array nor an \
image.\"", 2, 3, 15, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333332954893`*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"d2c33eab-6aac-4602-b210-b688d8aa7808"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Dilation\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorConvert\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"\\\\\\\"Grayscale\
\\\\\\\"\\\"}], \\\"]\\\"}], \\\",\\\", \\\"FE`bRadius$$374\\\"}], \
\\\"]\\\"}]\\).\"", 2, 3, 16, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333336000967`*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"486f6e6d-c6d9-41cc-9bee-13101066ba49"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageSubtract\\\", \
\\\"::\\\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 3, 17, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333339136925`*^9},
 CellTags->"labelBordersBW",
 CellLabel->"",ExpressionUUID->"24b0e96e-4140-4517-8307-cfd27a8083d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.554562422353691*^9, 
  3.554562423400103*^9}},ExpressionUUID->"54a71009-b3f6-422b-9782-\
7996523e5b98"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"e83c1a1f-1702-463b-b3f7-\
da682e29ab8c"]
}, Open  ]],

Cell[TextData[{
 "The three boundary operations are also called the ",
 StyleBox["morphological gradients",
  FontSlant->"Italic"],
 " because they are large when the signal changes rapidly and small when the \
signal changes only slightly. It is perhaps easier to see the qualitative \
relationship with the gradient (derivative) when the signal is \
one-dimensional. "
}], "Text",
 CellChangeTimes->{
  3.4777843629375*^9, {3.479559443625*^9, 3.47955948121875*^9}, {
   3.494107971530699*^9, 3.494107992656952*^9}, {3.4951403336898212`*^9, 
   3.4951403373513603`*^9}, {3.4951403706158237`*^9, 
   3.4951404320562487`*^9}, {3.5516592879562798`*^9, 
   3.5516592903933697`*^9}, {3.5517076622048597`*^9, 3.551707802558743*^9}, {
   3.5525800177361298`*^9, 3.552580018361925*^9}, 
   3.552682788415079*^9},ExpressionUUID->"c29087e3-ddad-4b5d-a67b-\
25ff5443ddfe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelBoundary1D", "=", 
   "\"\<A single row from a thread x-ray is green, the outer boundary in \
blue, inner boundary in red, and double boundary in black\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoBoundary1D", "=", 
   "\"\<For small neighborhood sizes, morphological boundaries are similar to \
gradients (derivatives) because they are large when the signal varies and \
small when it is constant.\\n\\nLook at a number of rows and observe that the \
double boundary is the sum of the inner and the outer boundaries.\\n\\nWhich \
of the boundaries is closest to the actual gradient (actually, to the Abs[] \
of the gradient)? What neighborhood size is needed?\\n\\nFor large sizes, the \
double boundary has large flat regions. Why is this?\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"imgData", "=", 
   RowBox[{
    RowBox[{"ImageData", "[", 
     RowBox[{"allImagesXray", "[", 
      RowBox[{"[", "f634Tile", "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "100"}], ",", 
      RowBox[{"1", ";;", "100"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"imgRow", "=", 
     RowBox[{"imgData", "[", 
      RowBox[{"[", "thisRow", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Image", "[", 
          RowBox[{"imgData", ",", 
           RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
            RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"100", "-", "thisRow"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"100", ",", 
                 RowBox[{"100", "-", "thisRow"}]}], "}"}]}], "}"}], "]"}]}], 
           "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"imgRow", ",", 
           RowBox[{"outerB", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MaxFilter", "[", 
               RowBox[{"imgRow", ",", "r"}], "]"}], "-", "imgRow"}], ")"}]}], 
           ",", 
           RowBox[{"innerB", " ", 
            RowBox[{"(", 
             RowBox[{"imgRow", "-", 
              RowBox[{"MinFilter", "[", 
               RowBox[{"imgRow", ",", "r"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"doubleB", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MaxFilter", "[", 
               RowBox[{"imgRow", ",", "r"}], "]"}], "-", 
              RowBox[{"MinFilter", "[", 
               RowBox[{"imgRow", ",", "r"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"grad", " ", 
            RowBox[{"Abs", "[", 
             RowBox[{"Differences", "[", "imgRow", "]"}], "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Green"}], "}"}], ",", "Blue", ",", "Red", 
            ",", "Black", ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Orange"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], "]"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"thisRow", ",", "27", ",", "\"\<row from canvas\>\""}], "}"}], 
      ",", "1", ",", "100", ",", "1"}], "}"}], "]"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"innerB", ",", "1", ",", "\"\<display inner boundary\>\""}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"outerB", ",", "1", ",", "\"\<   outer boundary\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"doubleB", ",", "1", ",", "\"\<   double boundary\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"grad", ",", "0", ",", "\"\<   gradient\>\""}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", "5", ",", "\"\<neighborhood size\>\""}], "}"}], 
         ",", "1", ",", "21", ",", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoBoundary1D", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelBoundary1D", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "thisRow", ",", "r", ",", "grad", ",", "innerB", ",", "outerB", ",", 
      "doubleB"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellTags->{
  "morphological gradient", 
   "labelBoundary1D"},ExpressionUUID->"bc6f203e-bea7-4550-b765-078bf7ea2f0c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`doubleB$$ = 1, $CellContext`grad$$ = 
    0, $CellContext`innerB$$ = 1, $CellContext`outerB$$ = 
    1, $CellContext`r$$ = 5, $CellContext`thisRow$$ = 27, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`thisRow$$], 27, "row from canvas"}, 1, 100, 1}, {{
       Hold[$CellContext`innerB$$], 1, "display inner boundary"}, {0, 1}}, {{
       Hold[$CellContext`outerB$$], 1, "   outer boundary"}, {0, 1}}, {{
       Hold[$CellContext`doubleB$$], 1, "   double boundary"}, {0, 1}}, {{
       Hold[$CellContext`grad$$], 0, "   gradient"}, {0, 1}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`r$$], 5, "neighborhood size"}, 1, 21, 1}, {
      Hold[
       Row[{
         Manipulate`Place[5], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "For small neighborhood sizes, morphological boundaries are \
similar to gradients (derivatives) because they are large when the signal \
varies and small when it is constant.\n\nLook at a number of rows and observe \
that the double boundary is the sum of the inner and the outer boundaries.\n\n\
Which of the boundaries is closest to the actual gradient (actually, to the \
Abs[] of the gradient)? What neighborhood size is needed?\n\nFor large sizes, \
the double boundary has large flat regions. Why is this?", WindowTitle -> 
            "Notes", WindowFloating -> True]], Appearance -> None, 
          BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    687.5, {184., 189.22522271714922`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`thisRow$13307$$ = 0, $CellContext`innerB$13308$$ = 
    False, $CellContext`outerB$13309$$ = False, $CellContext`doubleB$13310$$ =
     False, $CellContext`grad$13311$$ = False, $CellContext`r$13312$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`doubleB$$ = 1, $CellContext`grad$$ = 
        0, $CellContext`innerB$$ = 1, $CellContext`outerB$$ = 
        1, $CellContext`r$$ = 5, $CellContext`thisRow$$ = 27}, 
      "ControllerVariables" :> {
        Hold[$CellContext`thisRow$$, $CellContext`thisRow$13307$$, 0], 
        Hold[$CellContext`innerB$$, $CellContext`innerB$13308$$, False], 
        Hold[$CellContext`outerB$$, $CellContext`outerB$13309$$, False], 
        Hold[$CellContext`doubleB$$, $CellContext`doubleB$13310$$, False], 
        Hold[$CellContext`grad$$, $CellContext`grad$13311$$, False], 
        Hold[$CellContext`r$$, $CellContext`r$13312$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`imgRow = 
        Part[$CellContext`imgData, $CellContext`thisRow$$]; GraphicsRow[{
          Show[
           Image[$CellContext`imgData, ImageSize -> 250], 
           Graphics[{Green, 
             Opacity[0.4], 
             Thickness[0.02], 
             
             Line[{{0, 100 - $CellContext`thisRow$$}, {
               100, 100 - $CellContext`thisRow$$}}]}]], 
          
          ListLinePlot[{$CellContext`imgRow, $CellContext`outerB$$ (
             MaxFilter[$CellContext`imgRow, $CellContext`r$$] - \
$CellContext`imgRow), $CellContext`innerB$$ ($CellContext`imgRow - 
             
             MinFilter[$CellContext`imgRow, $CellContext`r$$]), \
$CellContext`doubleB$$ (MaxFilter[$CellContext`imgRow, $CellContext`r$$] - 
             MinFilter[$CellContext`imgRow, $CellContext`r$$]), \
$CellContext`grad$$ Abs[
              Differences[$CellContext`imgRow]]}, PlotRange -> {0, 1}, 
           PlotStyle -> {{Thick, Green}, Blue, Red, Black, {Thick, Orange}}, 
           AspectRatio -> 1, ImageSize -> 300]}]), 
      "Specifications" :> {{{$CellContext`thisRow$$, 27, "row from canvas"}, 
         1, 100, 1}, {{$CellContext`innerB$$, 1, "display inner boundary"}, {
         0, 1}, ControlPlacement -> 
         1}, {{$CellContext`outerB$$, 1, "   outer boundary"}, {0, 1}, 
         ControlPlacement -> 
         2}, {{$CellContext`doubleB$$, 1, "   double boundary"}, {0, 1}, 
         ControlPlacement -> 3}, {{$CellContext`grad$$, 0, "   gradient"}, {0,
          1}, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}], {{$CellContext`r$$, 5, "neighborhood size"}, 
         1, 21, 1, Appearance -> "Labeled", ControlPlacement -> 5}, 
        Row[{
          Manipulate`Place[5], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "For small neighborhood sizes, morphological boundaries are \
similar to gradients (derivatives) because they are large when the signal \
varies and small when it is constant.\n\nLook at a number of rows and observe \
that the double boundary is the sum of the inner and the outer boundaries.\n\n\
Which of the boundaries is closest to the actual gradient (actually, to the \
Abs[] of the gradient)? What neighborhood size is needed?\n\nFor large sizes, \
the double boundary has large flat regions. Why is this?", WindowTitle -> 
             "Notes", WindowFloating -> True]], Appearance -> None, 
           BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["A single row from a thread x-ray is green, the outer boundary \
in blue, inner boundary in red, and double boundary in black", Medium], 
        TrackedSymbols -> {$CellContext`thisRow$$, $CellContext`r$$, \
$CellContext`grad$$, $CellContext`innerB$$, $CellContext`outerB$$, \
$CellContext`doubleB$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{832., {270.91754141980783`, 278.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`imgRow = CompressedData["
1:eJx10skuBFEYBeDyCmJaiMQjGGN3XkEQViIR1iLCc+gZ0e0NLHQb9sRKhEY3
SQ/VNVqautuS/1T918qXVG4qual7/lN3dHVjbr3Hsqy132eTWkgmRAuzZKOQ
F3UMUw3LVMcINbBCTYxRC+PkoHgiHGyRi3RKuJgnF6WicNH+Eh4WKcD5mQhQ
rYgAnbbwkUkLz5zzXCU8lAm5rLiOcx3D+kf0nSvs5UQViV1ho5ccTJGPaQqw
RCG+uyLEDL1iiP7Wi3MRmlX3RzlDDFKIAQrQR16c38EEufj8EI7pS+fWnrIZ
4ZtedNX+9BzNofmieUMz1zb5mCTP9LBAj/H5l9C+jgriFvlDcYNUUpRRr5Hp
77QkPDOn5tHztQ99j/5bgMqT8NFPfpzDM/fIbhIO9sVLnKdh7sP7m7Bxfyds
M5d+v9sRgcmlveo+7XeHAtOn5vkBZ+6RFw==
        "], $CellContext`imgData = CompressedData["
1:eJzN3dnPbWddwPHGv8B5HuJ/4Dzd7H/BeR4So9fWWe+47CVo1QoVG2PICTEG
SiktAkIpUCjD6elIx9P2tEWuFBDRK7PX2p9nZ33fPu73PadtXMnJyj7v3ms9
z2+en+//7d/72d/9uptuuul3Dv9+ebme2H3+ieXafctyPbr7xeV6bPddy/Xg
7vuW63O771muz+y+e7k+vfvrv9pfj+7+7vb99fTu79++v57dXX1uuXY/uFzP
775puV7c/dFyXTu856Xdf35lf13b/dWt++va7keX66Xdty7Xy4d1vLz7+eW6
tvut5Xru8PmR3bct1ycOz3vvYX0f3H3Hcn1y973L9dndY48u1+5vb9tfT4zn
3PqX++vF3R8v10u7xx/bXy/v7nnf/npl9xPL9YXdny3XF3YrvL4w/v+Jx/fX
K7tfWq5Xdu+7e3+9vLv7vfvrpd2PLNe13R8s1wu7n16uq7u3/93+euawvmd3
737X/rq6+4u37K/nd3e+e389v3vo8v66Ov7u/kPL9cLuD5frxd2jj+yva4d9
vrT7seV6eeznv766v47wtF/r+/3len7g8VeX68ndlYeWa/fty/XA7pGHl2vQ
yw8s19Xxfu/9k+V6ecDjT5frld3X/mt/vXJ43hF+P75crwx6+NJ/7K/nB/2A
w0qHz+3e9tb99eTh94/v3vq3++vzg+7ec+f+emHgF/2Bl317H/jA421/s79e
Gft9y5v31+UD/Tyw+5u/3l8fP9Ddxw54+8jhd5/Y3fH3++tzB7g8svv15Xp6
rG993tUBd+sER/yA7r95ua4N/oFnfOLv63ufO3x+5PCc+w909s8Hvrh37AM/
+wzf4IxurQNdwyt4wd/Kj0c+QG/4+ueW68WB119brqcGf37jcl3Z/cxyPXTg
l8uD3+GbfLLPlc4fO+zv84d9PTP47S//Yn+9MPBO/oCjdaLbwvUbluu43pXe
PnmQg7cfnn/fkDvkKnygu1VevrT76n/ur+N7wQ3dVa74HvzjD/vDh88+s1yD
3tbfPz7gQn7A6w8v15E/Vno/K6fBpfJk3f/TQx6scLhy0AOfHfRFDq98fPlA
l4/sfmW5jnxL7lkfuJFXK9+dlWP4BT9Xf+ArdIfeVrx+ZHfT4Vo/v3vwyUqP
9w3+Ro/0B7pCJ9YDXtZrPfBvneCM/8l/evThK8u1+87l+tSgs1V+3jPuq9z+
9OBjetv60aX1u6/fe2rQEbmJDsDVvmZ6mTxb6fjxw/fuPtDHP+2+frnuOKzn
zmE3oNdV7jw/8D2jw/KP9Vk3PfH0U8s17Jn1/ZcHnFb98akBv3W9H9/9wnI9
OvSf9T337HKN58OT9971nv314pBz5Ir9rPt+YcAJ/fzmcj078O3u7/j1Z5fr
qM/AHTzwJfnBfiFXwMudnnZ/713769ruP/59f109POfx0NO/HOj8Hwc+V/jd
Nv6O339juZ4Z/AFP9EL1hXWs8H9p8BN9Yf/kMLyQb94Lv+gdXtHb+ryHh3zy
PfxOb9ND5D19SO6WP0qf8O/v6GZdz2PDTl3hd8uO3Fnl5IcOnx8a9iG6AQd3
dAXOq7x4YdiHK56uDr25/u7KkCPret5x+N6bx926yMX1/28e+m7Fz13D7mb3
sIfo49vftr+e2t28XFfP8Au8syvIGfLxK1/eXy+O71cu4AOf0Y/n4Qv6lP2J
P2q3k9fktzv84ntyzn7xyQqnDx/ubxrwJQfZNexses7z2cnsY+u0D/LX9+3/
y1/aX2flH72P/slD63/y88s17IWnnlyug5x5eOgR9i+7C/95Hzokn8gTeKi9
Yx++5/fsenC7Kde6jg8f7JWHh5yBF3BAZ54Lzj7jixXfj4Xv3n343j+cef95
L3Jxfc+7hp1BfrIn2EvwRO6Tw+Rk/RJys3IG34D3DP7oCb3xZ0t3/o4/yhee
h+/InWeeXq5BZ+z0lQ4/NuTIFl73jO+hL3jzfPvnh698d3bd4GOf9l9+YW/S
K+Qs+kDf/k4PiCO4k3e1C8ml2k/kDDvaeqsXrZseBBdyhFwBx/XzB0a8pnBk
59MT4ODue/bLj1ntz/cPP7L0jm9O8QW+IjfJF/Ek+on9QU7yb/jL6KzxGfId
v4AzviA34QN869+ge3rDe9Cdu/f5PvzV/2UX0GP8HfKXHbPlj386yNOPjvjL
iocnhz6FN/xRfr73nv11hI87fnH3O3Cgl8kXdi27jF1L3tPT6Af/kAP0C/uJ
P1Z+qB+Mn3vHN/Dn/exl9LP1Pz804iHiOvwefrD9wRO+s0/75q+gz61ddWXY
d9679SfvPMMn7DF+yoqXJ8bz8TF7EP7ZgfZPn6J38tH9lD3h9+UP368eKn94
D7qb8YnnwTt6Iy/pafsmZ9nv4gjgzV/DV+QDe9F+rN+6q0fwh/24V56gU3SI
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
jn4a+wB/NJ9Wv5c907j9Nv5z+tzu8170T/u40Hvtavq45zKgV3G/i66DfLNv
/CFugK7Ag/9Aj75W8LjRi93KHgHP1jGC+3nt4Yte8jnokrzlL5Hj7vAMn/w2
dRfXW/eu7lR8sPELdkj7I1s30nMe2Vnkjjr619qfc7FPmx/BD7O+WPDcxuv/
5TrjMp84o7fgk93KDqBX3+g57acu9A6e/BXyYzu//KEzccbX6mI384/oh55/
1PMU3Ld9i49e+PwPdp3+OPzR88/ZT81jnopfdW4EuuEXqicSB7pReLL/2c/g
2bobeqP5XvIGPC76fvOy6ffaw+2nEM/WT/Ja9fXc6MVe7Xk68OaunkFc5dRz
T8lFdh1+I7fZSeKd5E37fFvnw34mL9GH9506l5Oc0LfKLkbXnWvRPtXWkbQO
Bl9ZJzoUb9z20Xz2uukCPNmp2/qLp4f+7TkD/E7yCN2qG76of84eIQfaZ9nz
AfGP+NKNximu90KX9Cb5wp7iN4Gn/JD7tk/nSuZCXBrxenkrcmSFy+XxO/wm
3uT95Ejjap1T1fnj/r49f/Azo2+avse3+tA6F0a/leeg59a/tB5VnrL1iK2P
aT0Red4+JOsQt8S/7OHe2fv4DB7xA7pEj81LWkfXw544xR/+jq7lhT2fvsIX
7YvAn36n7tb+Xiv6p5e28LtrrHub97w06i/EHcHTusk5dMKOZH/wF8QRyavO
3ScnwYfcat85ONH3s/On0Ju8A/9AnJA9i++2cZzPjLpPcpYdiT63510c50l1
DuWsPrF1Wq1D9jx8Qj+Cv/wP+SLu4G4uub/bJ7oTN+sccvaiOH7nHZJH5Lk4
HvpHX/Sx+AJ6Zn/AQ+3T1s+442f2CrmLXi9qb5Er7HbzCrZy5JMjzidOR39b
h3rh8kHnM7R+DXz9vfPSm6+QR2ld0GxeYfsKZ3XZ/OKeL4D/8Cf91zk17Gzf
6zky/HP2VOsUZ3Me1bvjl+qXnn/VuZnW3zki/Hp63N977mbnFbY+sH1avud3
7ctCZ53Hxl8gZ9SvbecbHvut2v9J3sIDPxedomdyQBxn66d8YPyd38l+ACd5
NHKz9YP81vYNnjpXFNzQAzpF1/zjzmFtvXv7olon17rX9uW5Vz7zj5v3Jffx
6bZP9djvWX1J7rb+pvly9IZPra9z2LrezmmtvWXd/Hjr51+jI/xtX/RA5+R0
vlTnFLdu0Gf0sD1X+PKZOWD8d34DfmW/oQ/82PO2xNHI5/a59Fw4n+lP/ip7
pfNhwK9xz87baP9w55NZf+faFf/+Xj0AH8V7+zz8njwlZ8ndzm/vHHffV98G
7+UP+22cpPzQeW2doww+zWv4f/u1nvZJ4QtwrB6uPOo5UtZVe7TzGzvnitxA
9/QefvW5dfrkVfsF2BmtA/T/6No6Z3X27ZMkN+mVyrdZfzo+gFfvBS+/97zO
l2kfMfi3fw+9glPPOeh5B/bXep3aQZ1H4DO+69zLnk9hPmzP/ejce/Kc3iL/
wZH84yeRv/RH5+7Wbrf+zv31//COvsq/+KLzna3b79tf3/nU7JDyCb3R+nXy
x7rAuedFzPjZOmdzZAo3dOn7nbfbesTZ/OSeo9s4vv/vHE780LnJfd6sv7H9
wJ17Cj6V3+gUHOEPf+B/+y099Ly7nnfbufHw6H3w2zms9glO8EOfis+2Tlw9
J39dPIE9yo5hH9vfrF+r/QzWbV8958W+Gw9unxL4tj6FnPYZf5w6N6L6GX/4
f9+zbvtDl+iPvvK550awF9Bf++vLH/6OTkrX7bPtnZ4lR8g1fNr6stYV1j+r
fTObw9FzVPw/e6bzFmrH9nyp1if5fevwPafyFh/AT/Xstk/+OJ+anSqeq15C
HHrV3x85k39p3KJzJK2n/NP+qPbVzvqoeh4vvLIvxNvxc+d1sYfAvXxSv6h+
ne/h3+rlzuuy/84zaX1u5XPPJS19dO5R693Zzey+zqUlT+hbeq/n+LTvCV2S
/41T1q6iP5wL4Xs9dw1ewHMWX+p5Mo0rWnfr5bpfdEsfbOf5vedMfYK8QeP3
2/8/1suohxYHEd9kn8mLdI5c4ds+kfJJz20AN3q2/XviLz3nQlwX3cJHz7Gr
PKze6vwNdgr6Yte1P6L+rXW0f7rnNpDjM/+r/lnP8yUf2Xve3/l46AYcm5/s
uTXouPxBzzoPwrkpP7VcXxz2dOfpkBe1f8G/55v4HblAP9q/uCC9QG6Ki4jX
iYvL77xW+SOXeCb9o95WXJxfY734un0ilRflC/8PTvQqeWn/2/zqnSOfiW/Q
a+2KWfzc59bhd04lO1S8VR2rvBl9Lc9Lfsh34avmH/ERuDVPgj/wE3nPrmz/
O3+ycQL81H719t96Pnixk9A9/xh/4IvVfv/imfOU2zfdOIXn1w/x/eanOk8L
HNSLwAe6OFUvcqPX9ryDu0f9pv4EdEsOwTu5C849b7DnBbWusfVk7Eb8Ic8r
T0h/wG/noVbPdz4ivhIPBW91RJ1327z99v/vGnkI/GL9PQe19S3Na/YcSHqB
Xylf0XkH3tP+ZXxAnrjjF+voXAnyjd6lR3qOLL3QPkh4qD9Ru7Pnhvkd/dF5
1daLT/Sbbvvgr7+Ojx3V/4df9gu+ZF/hC/SLv3teBDizG2ZzVHveud8Xn9v5
ovcMvYkOe+5Vz9doP1f9OXQsn8wfu2i9tnwdPd98HPjV/um8bvoTPPAPPIiz
tA8Cn4AffhS3xPfyN+Rd+xzhr3GvnovWOGrPQ2rd3mxec/vtyyez8y9aD1S9
z/4h3/nf5Cz5t9L9Owddrfr9vuFnqAvrfFV4a97E+npuADnQfFD9kp4v5jO9
0/5vdo36MXEF+d/yB7h2jim4Nx8Jvvhxm58+fx8fuaXPjN6DL/FE/lvrr9w7
1x8e+J3y9fKWPe8LneBLduC6ng+P+lXrwmfNK+FL68K37J/WKczibc2HzObK
dk4c/d9zXTvXEr7hH9ysHz3Lu4rvkA/qFNGZujv0xZ+YnSPfOCF+6LnvnXNC
P3eucP1l/EG+sAu283suj/kx6FY+uXk58K3f1zwCf4WdRY6yX7b9NB840/+N
L1a6e/OwR/UBqk/B5/BTu6b1dz77e+eZ0U/8IvVa8M5P9P32zfEv6WV8Qo+C
A73Dz6HfGtcsP/Sc5M4zFX+a+WHNG1auzvzX8g9+LZ57zgY7zT7r19lv/cRZ
nJJ+7Tys+uGdl9i5kM0Lei/8oC9zF+hHdMpOsA/w75zXzoVuHzD4gYPnoWN+
CXlDv9DH5DH7DH2qW2UX8R/gY3YuEvzBk7g2+8hzt3M4Pj3kn/ordgV/iXwR
3/c7cKZvrE+9QP362hW1g8C38Vp80Lgsuq3/Rb51Dm/pjZxuX9IsTu+94N+5
OrO5dfbROoTO47Le5lnRf+cF189o/BI8rJscE7+e+Uv8EfZFz42ijzoP2+fa
yz3/rnAUH+XPk+s9B1i+tnMAZ3U8rZfb1o8e6Rsc6Al6jn3Mf3Rnf+tvUNdL
znQuIH4Qd2mdcev3xOnwQ+PVrUdqnQv+6TxG9nvzSe3rbr4QvTWvAr7NG6oT
6jxun3s+S/uz2SvoDRyaX+i8v+a9Gg+vnYgu+D/0PrvmVH03PiFnxQG9v/UK
9FnnOjYv3blx1tt6nOqt1gk3rtw5MOjH88jpLRyO+wcXeope4+/QY/SJumP2
mP4j/M0+Jy9bZ1S5gc7I254XVv9kZl/V/gLvzsGsf1t/djbvG16tlx9GLtCf
7HdxD/JCfIVdjK/AqXM9ek5x5+jSC61j8Ln9Ht5Dr6vnJufO6xe7yMvtObcv
jPW1Trrz9eAF3iof2rdOX4OT/XYedc9JbxzP+zv3BVzYQ90v/mC/0Svu7DD2
E34g/9F752w3DtjzTuzb7zsPgb1iH+RK85j8Z/rJ762j58eDK/iRe/xZdTDw
63ueK77BPqePxS3IF/46u4Qf1nPKZnZK7UCf20/buaitbwRnenub5zl9/ksv
/rHn0Jfg3H751hOXPlsXC7/sKHqX/+A9zXdVXrYeDx7xj++Rz+IQ6iPEJdlX
9C4/gd3Q/h7rbf9d67HY6/DUuFL9Ov5i/dueDwDPPtdOs050CK740voa1yKn
e14N+JJn7HZ9NOKN7uK6/k6ukD/Wix6aT53ViczmZJbfO38evOmT5ssvyh/k
Ar/FvtB77dmZXcwO6Hlt6M1z6eueO9O56OQrOQou9dN6vgz+oA/U1+jPYiew
A+RLm1/vuYHojn61zsZpG8/A981n4VNw6Tnx1mWd7Bd2Xj/Tm/gF/Gr3Wt+p
OmF4aZycPH11OfuO4f+J+8M/fYR+4bFxqMbVrFfcr/tonqhzkeEPHNnR6kpO
8Yc4EruD3YjO2w/Rer/Wh6Mjdso2D3OUM/DveY1v0kOdx9v8JXiAH3zQh/wO
7+Vniyfzy9kH4sD62uUR0V3P9eg5HLWzmickn+VTxQnY8fII6l7lna0TfcrP
sY/5S/xJ62x9Zec4Vv6R0/Dbvnjvm+WBrYu8hg/2g+c3XtC8Jzxbn7gPfc6+
qN9mX+iKnBOPx7/mXVo3flEHw2/BV+wM9q31gC95wo6sndRzNsRV1UXLd1iX
PAn5hN/JGfuCp+IRP1qnvM82j3LXDc/9EZfG5/QS/Vg/ovGH5r/QAT5FR/Kj
/KbOC1mfc//IY23p8M1jTh67Ej+3n6/naNZf9HdyV3wOf4jrzez5bb3u8XxT
/No4dPNtjS/Qw/DceY/12+wTP7JjwQUc2YfgOONv+oJd0jqY1jWBd+ec+D27
Hv/N6I4+2dZvHZ9HbnkufLJvrEMcid5kL14vP5z3sn72m/mW9Kb1k2Pt18S/
jZPhD/HFrX64d/BD6xS2fz/itflr9NP5V/iDPIQH9Mi+sm/v3c73vuWMPNrG
CY99+T1HEV/0nADrQm/kOTu9+Sd8A/7oi362fvUy4Imf2RvyZH5P7oNj59tZ
N7lYviBP2QWn5Da4smP4ceRM4zTgw18kD8jdG9UTN3rJt4C7eh77I+foE3aS
vDx8uNNTPY+GnUhf6NOAZ/YDO01+tedjty8HvtEv+bud0/vgyOtu6+HvH3Hf
7byLDw65QZ+xi8QpxA16jjt+wcf8QnRun+Jl/HD6Dh/xN9mn4D3Do7k17Fp1
MvwN8q7nV+CTng9mXeAIPqfoSVyJvY//2VOd78ufx8/b+SMXn/f7Rl3gzA4H
P/b71v68POI/+Iq84R/yq+R50Ct+BH/fwx/te8EfrYfant9zdcT9xXPhDV+g
V+vkT8GL/dPznt+4Rfvh2Fc9RxI/kIvggv7Y2eDHjq+/ceoiD9iHjQ82TlP4
9ZwBc27OO38X//sdedW+N3jd9nVdGXZI7cf/b5c6LnQKfv6OntEZ/NOT7Ady
sXUI9Cg6ZKeJj7XOuXFq8q/z0clLcSj8wP+wr609+MR4r7/zQ8k3722/0+w8
3faNo3/+YPsi+NHb+MqD557TvLW73jX8enBs3UzPiWp+z7o9Z5aX68XvpL/I
tZ4HTX+gD3JxG0e5+Dllr/fF7gEP+yS34cs+0DW7iv/QPEznIJOr7G18Q1+1
H6/1jOyZ5rPoD+vAH+Q2+aaej9xCt+iSXrFe7xPX1U8mvtt5NfgX3fGHGm+1
X/zBP9nWy3562OHsYXhQPytPJs7A72o/Q88JBk/+Uu1V/IouZnQj7gGO8OC5
8NR8C7rYzuG7MuyK9Tnnn/f7el30ATkq3so/Q6fgRa6Ia7R+hX9HDlWv82fE
oTo33J3fSO75Xefj0CPgTL+TS61rZ9+Lj6iL9j37gN/O7+k8xJ7PzA+xb3b4
rI9H3HMrdx9K3uO+YZfiB3zEbsV/8lLotPN26jeBH/tRvHl7XvhZ/wffsmO9
lzztvGL5QPq1fAIe5Fbr59+oSxwJn9Lzzd+gT3Kn56W70xPsodm5mu1HAC+f
Z/ncnmeLDtEteuw8TvlI+qLn+rVPsHGJzgPBH50bSo+wu/AtOgBP9ho7sHXN
2/Oanhzrp5/ZsZVj6Ji9wn/wXnqhc2JaH+XOL9n6zWf9AXFXfqj31h7t3LDW
bcIzP97+6Xvxh9ebL+hneT52OrnbeXfu9tF5Ke1/bL9t66lm/U/+v+f6wif9
DK7tb/d9ceCeK4WO6BV0R4+wa+CXHY6+4RV/6NPvnN3aXdZZP2nWf+a96AQf
la98dm98iL5vHVT7GNvHxY+yHnwn/sg/46/r2+NPiTeSh62bA5f288z6eNAl
fUtf3qhemeWJ6cHt3NSnhrxHD9Zdvu9cMHAEf/Blb7ReqfNkKrf8vn29nbvX
+Sh+hy6aByEH2OWVv/wgeqNzadCVulf8oT/fPKTOlVIfVj3X+U7kCXiCL36f
+c+d+9R1t36t/QGFJzmDb8WXyBH+QeOW4CxeVf6YzVXuXOL2+aDHxl/UJ523
3kZegh/hju/ljzy35/3Sh+QzumsdeePXPceJHAB/z5nNmSZX2CWtb21fRftS
faaf0BM7sHqC/mCHyE+0roW/Q/6iL+/t/Ap3fNM5hJUH7YcCR3zROCu7a1bf
2Thf56eUH8oXjcPhD/4A/cr+5B+QM/w1dmL5A190zv1svn35FbzKJ/jzFH+I
H7DT+G/y4u2Hp9+9dzaHl72APtFN6xTYQegZ/Xee7kzegl/77lo/3rpZ72O/
4Fv4ap1Y8/P43X7a30Dft569c4PxS/fTOYTWie863wh/4wd5Ondy2v5m9ff1
M1pX2fMZwBcd0FP4g9+NT9hT4v/0denKc9FDz0nx/+BZ/rAe/Ib/2ZPbutaH
hr8iXsmfmPGNuD89iT/EC3pOGbldOmz/TOvKyH1yoHN733/v/jrOmfb3zr3u
POfZeR/tz0Mf7A32knx8z8Pt/JhZ/w+9WPnRPpTZuQv1QxqHQM/sCHrE+upv
9HyG9gfO5jR2DgT+LX/QH/aPT/lx9IX8VvmU/0nuez494Q7f1tHzg9BT56y2
H4X+JPfIj22c8MEz9Vvi4PKv8hTy/vbXfv7OM7POzmUufmf8gS/wif/HJ/ij
9jp51/Mr4M/7yTl0xG7iX6nTVBdGj8gLtr/W3f+zu9g98MSeAw98Wz+recTG
bzrviNwhv6wDHdgffUIe0Es9B7F6Aj1WX9e+bf2x9/YcQ/YpvwN87KvnKczk
SPtoZn0g3gMe6FicrXHL1gGqDxPHpzfIHfzV85PAgdyo3Uou/S8CEhOX
        "]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->{
  "morphological gradient", 
   "labelBoundary1D"},ExpressionUUID->"49582a19-a7b9-4813-adeb-3b1fd1951948"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detecting Peaks and Valleys", "Subsection",
 CellChangeTimes->{{3.479587579140625*^9, 3.479587581078125*^9}, {
  3.479645861109375*^9, 3.47964586121875*^9}, {3.494107703102181*^9, 
  3.4941077119592752`*^9}},ExpressionUUID->"27ee1ae6-39fa-4490-832d-\
2fe328e62634"],

Cell[TextData[{
 "Morphological filters can be used to detect peaks and valleys in grayscale \
images. The ",
 StyleBox["tophat filter",
  FontSlant->"Italic"],
 ", which enhances positive peaks, is the difference between the original \
image and its opening. The tophat filter extracts white peaks that are \
smaller than the size of the structuring element. "
}], "Text",
 CellChangeTimes->{
  3.4941123950693703`*^9, {3.5517115094551487`*^9, 3.551711532782894*^9}, {
   3.551711865432167*^9, 3.5517118746245747`*^9}, {3.55171215320195*^9, 
   3.551712160413823*^9}},ExpressionUUID->"4ddd5934-f0cd-43ad-8181-\
d223a171dafb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelPeaks", "=", 
   "\"\<The image (left), its opening (middle), and the tophat filter \
(difference between the image and its opening)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "infoPeaks", "=", 
   "\"\<Compare the opening and the tophat filter of binary, grayscale, and \
color images.\\n\\nThe threshold only has effect in the binary case. Observe \
how different threshold values bring out different portions of the \
image.\\n\\nThe opening is boxy because the structuring element is (by \
default) a square.\\n\\nFor example, in the bedroom, (color, size=25) the \
walls of the room take on interesting color variations.\\n\\nAs the \
neighborhood increases, the effect approaches that of the difference between \
the image and its mean. For smaller sizes, it is like the difference between \
the image and its local mean.\>\""}], ";", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "img", "}"}], ",", 
      RowBox[{
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"color", "\[Equal]", "\"\<color\>\""}], ",", 
         RowBox[{
          RowBox[{"img", "=", 
           RowBox[{"allImagesColor", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";"}], ",", 
         RowBox[{"color", "\[Equal]", "\"\<grayscale\>\""}], ",", 
         RowBox[{
          RowBox[{"img", "=", 
           RowBox[{"ColorConvert", "[", 
            RowBox[{
             RowBox[{"allImagesColor", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<Grayscale\>\""}], 
            "]"}]}], ";"}], ",", 
         RowBox[{"color", "\[Equal]", "\"\<binary\>\""}], ",", 
         RowBox[{"img", "=", 
          RowBox[{"Binarize", "[", 
           RowBox[{
            RowBox[{"allImagesColor", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Image", "[", 
           RowBox[{"img", ",", 
            RowBox[{"ImageSize", "\[Rule]", "150"}]}], "]"}], ",", 
          RowBox[{"Image", "[", 
           RowBox[{
            RowBox[{"Opening", "[", 
             RowBox[{"img", ",", "pRad"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
          RowBox[{"Image", "[", 
           RowBox[{
            RowBox[{"ImageAdjust", "[", 
             RowBox[{"TopHatTransform", "[", 
              RowBox[{"img", ",", "pRad"}], "]"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], 
        "]"}]}]}], "]"}], ",", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "vermeerMilk", ",", "\"\<image\>\""}], "}"}], 
          ",", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Range", "[", "numFilesC", "]"}], "\[Rule]", 
            "imageNamesC"}], "]"}], ",", 
          RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], 
       ",", 
       RowBox[{"Spacer", "[", "20", "]"}], ",", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"color", ",", "\"\<color\>\"", ",", "\"\<\>\""}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<binary\>\"", ",", "\"\<grayscale\>\"", ",", "\"\<color\>\""}],
            "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Spacer", "[", "20", "]"}], ",", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"pRad", ",", "13", ",", "\"\<neighborhood size\>\""}], 
           "}"}], ",", "1", ",", "50", ",", "1", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", "0.5", ",", "\"\<binarization threshold\>\""}], 
           "}"}], ",", "0", ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"Spacer", "[", "20", "]"}], ",", 
       RowBox[{"info", "[", "infoPeaks", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"labelPeaks", ",", "Medium"}], "]"}]}], ",", 
    RowBox[{"TrackedSymbols", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "color", ",", "pRad", ",", "t"}], "}"}]}], ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "saveDef"}]}], "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQPcHO4l1E2SvHNcVeH0F07rxNjJFAekHtG3YQ/eTU
j/Ug+qVr23YQvS/29mEQbaC38zyI3pTCcgVEF7gKXgfRu3IEnoLo/9Eir8Di
B+79AtE1gfb/QbTh5iLBKCCtf8BCBERHCN9XB9FMn6/rgOhHk9INQbRLwHtL
EP2ZX82RqeKVo8KFGa4gOqCLjZsLSC9p38QLovdMW2pkCqR97rEbg+j5AgFW
IHqL2yQw3X73kyOI5gjjcgPRKfLR5WZA2unO5moQLcG1tBFE37PcNAVE35pj
PBNEz+RvnweiUw7tWAyiKxUZl4PomDu2W0C0yoRoMJ0ffuJgVeUrx7KfMYdB
NACDTaLV
  "],
 CellTags->
  "labelPeaks",ExpressionUUID->"44f8c23e-8b8a-4d74-9a56-f253e4acdbea"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`color$$ = "color", $CellContext`i$$ = 
    10, $CellContext`pRad$$ = 13, $CellContext`t$$ = 0.5, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 10, "image"}, {
      1 -> "F205OldManWithBeard", 2 -> "F260HousesInSnow", 3 -> 
       "F458Sunflowers", 4 -> "F482BedroomAtArles", 5 -> 
       "F632PloughAndHarrow", 6 -> "F634SheepShearer", 7 -> 
       "F651FallingLeaves", 8 -> "F659Garden", 9 -> "F816TreeRoots", 10 -> 
       "L07Milkmaid", 11 -> "L11LittleStreet", 12 -> "L17WomanInBlue", 13 -> 
       "L30LoveLetter", 14 -> "vanGoghStrokes1", 15 -> "vanGoghStrokes2", 16 -> 
       "vanGoghStrokes3"}}, {{
       Hold[$CellContext`color$$], "color", ""}, {
      "binary", "grayscale", "color"}}, {{
       Hold[$CellContext`pRad$$], 13, "neighborhood size"}, 1, 50, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Manipulate`Place[2], 
         Spacer[20], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 0.5, "binarization threshold"}, 0, 1}, {
      Hold[
       Row[{
         Manipulate`Place[4], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Compare the opening and the tophat filter of binary, grayscale, \
and color images.\n\nThe threshold only has effect in the binary case. \
Observe how different threshold values bring out different portions of the \
image.\n\nThe opening is boxy because the structuring element is (by default) \
a square.\n\nFor example, in the bedroom, (color, size=25) the walls of the \
room take on interesting color variations.\n\nAs the neighborhood increases, \
the effect approaches that of the difference between the image and its mean. \
For smaller sizes, it is like the difference between the image and its local \
mean.", WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> None, 
          BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    938.1435760498047, {27.86224365234375, 14.94873046875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$13412$$ = False, $CellContext`color$13413$$ = 
    0, $CellContext`pRad$13414$$ = 0, $CellContext`t$13415$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`color$$ = "color", $CellContext`i$$ = 
        10, $CellContext`pRad$$ = 13, $CellContext`t$$ = 0.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13412$$, False], 
        Hold[$CellContext`color$$, $CellContext`color$13413$$, 0], 
        Hold[$CellContext`pRad$$, $CellContext`pRad$13414$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$13415$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`img$}, 
        Which[$CellContext`color$$ == 
          "color", $CellContext`img$ = 
           Part[$CellContext`allImagesColor, $CellContext`i$$]; 
          Null, $CellContext`color$$ == 
          "grayscale", $CellContext`img$ = ColorConvert[
             Part[$CellContext`allImagesColor, $CellContext`i$$], 
             "Grayscale"]; Null, $CellContext`color$$ == 
          "binary", $CellContext`img$ = Binarize[
            
            Part[$CellContext`allImagesColor, $CellContext`i$$], \
$CellContext`t$$]]; Row[{
           Image[$CellContext`img$, ImageSize -> 150], 
           Image[
            Opening[$CellContext`img$, $CellContext`pRad$$], ImageSize -> 
            350], 
           Image[
            ImageAdjust[
             TopHatTransform[$CellContext`img$, $CellContext`pRad$$]], 
            ImageSize -> 350]}]], 
      "Specifications" :> {{{$CellContext`i$$, 10, "image"}, {
         1 -> "F205OldManWithBeard", 2 -> "F260HousesInSnow", 3 -> 
          "F458Sunflowers", 4 -> "F482BedroomAtArles", 5 -> 
          "F632PloughAndHarrow", 6 -> "F634SheepShearer", 7 -> 
          "F651FallingLeaves", 8 -> "F659Garden", 9 -> "F816TreeRoots", 10 -> 
          "L07Milkmaid", 11 -> "L11LittleStreet", 12 -> "L17WomanInBlue", 13 -> 
          "L30LoveLetter", 14 -> "vanGoghStrokes1", 15 -> "vanGoghStrokes2", 
          16 -> "vanGoghStrokes3"}, ControlType -> PopupMenu, 
         ControlPlacement -> 1}, {{$CellContext`color$$, "color", ""}, {
         "binary", "grayscale", "color"}, ControlPlacement -> 
         2}, {{$CellContext`pRad$$, 13, "neighborhood size"}, 1, 50, 1, 
         Appearance -> "Labeled", ControlPlacement -> 3}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Manipulate`Place[2], 
          Spacer[20], 
          Manipulate`Place[3]}], {{$CellContext`t$$, 0.5, 
          "binarization threshold"}, 0, 1, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[4], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Compare the opening and the tophat filter of binary, grayscale, \
and color images.\n\nThe threshold only has effect in the binary case. \
Observe how different threshold values bring out different portions of the \
image.\n\nThe opening is boxy because the structuring element is (by default) \
a square.\n\nFor example, in the bedroom, (color, size=25) the walls of the \
room take on interesting color variations.\n\nAs the neighborhood increases, \
the effect approaches that of the difference between the image and its mean. \
For smaller sizes, it is like the difference between the image and its local \
mean.", WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> None, 
           BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The image (left), its opening (middle), and the tophat filter \
(difference between the image and its opening)", Medium], 
        TrackedSymbols -> {$CellContext`i$$, $CellContext`color$$, \
$CellContext`pRad$$, $CellContext`t$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{997., {98.91754141980782, 106.08245858019218`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelPeaks",ExpressionUUID->"fb84783b-b07b-46cb-9e6a-54cd7fe170c4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 3, 18, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333348216753`*^9},
 CellTags->"labelPeaks",
 CellLabel->"",ExpressionUUID->"a4cb68f0-07b2-4837-9eb9-7c9c43b5d68c"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) \
should be an array of rank 2 or 3 with machine-sized numbers.\"", 2, 3, 19, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333352437363`*^9},
 CellTags->"labelPeaks",
 CellLabel->"",ExpressionUUID->"dcea3472-8b85-44bf-a933-d396eb85de7b"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
neither a rectangular array nor an image.\"", 2, 3, 20, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733335679761*^9},
 CellTags->"labelPeaks",
 CellLabel->"",ExpressionUUID->"fd247ef6-0ee3-4c9a-94fe-ce2b9378f186"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"FE`pRad$$380\\\"}], \\\"]\\\"}]\\) should be an array of rank 2 or 3 with \
machine-sized numbers.\"", 2, 3, 21, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333362941637`*^9},
 CellTags->"labelPeaks",
 CellLabel->"",ExpressionUUID->"3aab116b-1df8-4bfb-9416-2063b422feba"],

Cell[BoxData[
 TemplateBox[{
  "TopHatTransform", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
neither a rectangular array nor an image.\"", 2, 3, 22, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733336740012*^9},
 CellTags->"labelPeaks",
 CellLabel->"",ExpressionUUID->"9c2e60aa-3653-4169-9b66-8c3f2d5bb7ec"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"TopHatTransform\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"FE`pRad$$380\\\"}], \\\"]\\\"}]\\).\"", 2, 3, 23, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733337164317*^9},
 CellTags->"labelPeaks",
 CellLabel->"",ExpressionUUID->"902162b1-a60e-4b13-b9ff-b3209ffc89a5"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"ImageAdjust\\\", \\\"[\\\", \
RowBox[{\\\"TopHatTransform\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"FE`pRad$$380\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) should be an array of \
rank 2 or 3 with machine-sized numbers.\"", 2, 3, 24, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733337602833*^9},
 CellTags->"labelPeaks",
 CellLabel->"",ExpressionUUID->"b1c3c3a2-4f1e-44b3-98a7-e2b74443f837"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Image\\\", \\\"::\\\", \
\\\"imgarray\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 3, 25, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733338045082*^9},
 CellTags->"labelPeaks",
 CellLabel->"",ExpressionUUID->"3ff13534-a591-4e2e-a452-209c0d310ace"]
}, Open  ]],

Cell["\<\
The same images result from using ImageSubtract[img, Opening[img, radius]] \
instead of the built in function TopHatTransform[img, radius].\
\>", "Text",
 CellChangeTimes->{{3.551711301628069*^9, 3.551711339755953*^9}, {
   3.5517117102367897`*^9, 3.551711732931859*^9}, 
   3.552684513816115*^9},ExpressionUUID->"a594f52e-a2d9-440d-b439-\
73528c93aaf1"],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.5545624345796833`*^9, 
  3.554562435553685*^9}},ExpressionUUID->"b5dd8a5c-ec62-4737-9c70-\
2f62043b405c"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"dc613cbf-b009-45f3-a8fd-\
95b4524c40c0"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["bottom hat",
  FontSlant->"Italic"],
 " is the dual transformation, defined as the difference between the image \
and its closing. The bottom-hat preserves the valleys in the signal whose \
width is smaller than the structuring element."
}], "Text",
 CellChangeTimes->{{3.4941132729987373`*^9, 3.494113282268684*^9}, 
   3.551659306989759*^9, {3.551711818736391*^9, 3.551711854623618*^9}, {
   3.551711894160328*^9, 3.551711906898183*^9}, {3.551713531145823*^9, 
   3.551713549440563*^9}},ExpressionUUID->"1813f00c-0548-4bd3-beb3-\
f1a65b9f661e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelBottomHat", "=", 
   "\"\<The image (left), its closing (middle), and the tophat filter \
(difference between the image and its closing)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "infoBottomHat", "=", 
    "\"\<Compare the closing and the tophat filter of binary, grayscale, and \
color images.\\n\\nThe threshold only has effect in the binary case. Observe \
how different threshold values bring out different portions of the \
image.\\n\\nThe closing is boxy because the structuring element is (by \
default) a square.\\n\\nThe Little Street turns from a cloudy day into an \
ominously lit night-time scene.\\n\\nAs the neighborhood increases, the \
effect approaches that of the difference between the image and its mean. For \
smaller sizes, it is like the difference between the image and its local \
mean.\>\""}], ";"}], ";", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "img", "}"}], ",", 
      RowBox[{
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"color", "\[Equal]", "\"\<color\>\""}], ",", 
         RowBox[{
          RowBox[{"img", "=", 
           RowBox[{"allImagesColor", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";"}], ",", 
         RowBox[{"color", "\[Equal]", "\"\<grayscale\>\""}], ",", 
         RowBox[{
          RowBox[{"img", "=", 
           RowBox[{"ColorConvert", "[", 
            RowBox[{
             RowBox[{"allImagesColor", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<Grayscale\>\""}], 
            "]"}]}], ";"}], ",", 
         RowBox[{"color", "\[Equal]", "\"\<binary\>\""}], ",", 
         RowBox[{"img", "=", 
          RowBox[{"Binarize", "[", 
           RowBox[{
            RowBox[{"allImagesColor", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Image", "[", 
           RowBox[{"img", ",", 
            RowBox[{"ImageSize", "\[Rule]", "150"}]}], "]"}], ",", 
          RowBox[{"Image", "[", 
           RowBox[{
            RowBox[{"Closing", "[", 
             RowBox[{"img", ",", "hatRad"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
          RowBox[{"Image", "[", 
           RowBox[{
            RowBox[{"ImageAdjust", "[", 
             RowBox[{"BottomHatTransform", "[", 
              RowBox[{"img", ",", "hatRad"}], "]"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], 
        "]"}]}]}], "]"}], ",", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "vermeerMilk", ",", "\"\<image\>\""}], "}"}], 
          ",", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Range", "[", "numFilesC", "]"}], "\[Rule]", 
            "imageNamesC"}], "]"}], ",", 
          RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], 
       ",", 
       RowBox[{"Spacer", "[", "20", "]"}], ",", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"color", ",", "\"\<color\>\"", ",", "\"\<\>\""}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<binary\>\"", ",", "\"\<grayscale\>\"", ",", "\"\<color\>\""}],
            "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Spacer", "[", "20", "]"}], ",", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"hatRad", ",", "26", ",", "\"\<neighborhood size\>\""}], 
           "}"}], ",", "1", ",", "50", ",", "1", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", "0.5", ",", "\"\<binarization threshold\>\""}], 
           "}"}], ",", "0", ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"Spacer", "[", "20", "]"}], ",", 
       RowBox[{"info", "[", "infoBottomHat", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"labelBottomHat", ",", "Medium"}], "]"}]}], ",", 
    RowBox[{"TrackedSymbols", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "color", ",", "hatRad", ",", "t"}], "}"}]}], ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "saveDef"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5517119309288397`*^9, 3.5517119549803677`*^9}, {
  3.551712000895442*^9, 3.551712018757887*^9}, {3.552580149551004*^9, 
  3.552580186168316*^9}, {3.552596093864558*^9, 3.552596113888077*^9}, {
  3.552686936105692*^9, 3.552686941270824*^9}, {3.552687445768556*^9, 
  3.5526874763599052`*^9}, {3.552687515247566*^9, 3.552687516463442*^9}, {
  3.552687623013061*^9, 3.552687623958036*^9}, {3.5526877446408587`*^9, 
  3.552687801214407*^9}, {3.553351203677548*^9, 3.55335121157158*^9}},
 CellTags->
  "labelBottomHat",ExpressionUUID->"c3ed62d6-2266-432d-9397-50e373ae12a7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`color$$ = "color", $CellContext`hatRad$$ = 
    26, $CellContext`i$$ = 10, $CellContext`t$$ = 0.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 10, "image"}, {
      1 -> "F205OldManWithBeard", 2 -> "F260HousesInSnow", 3 -> 
       "F458Sunflowers", 4 -> "F482BedroomAtArles", 5 -> 
       "F632PloughAndHarrow", 6 -> "F634SheepShearer", 7 -> 
       "F651FallingLeaves", 8 -> "F659Garden", 9 -> "F816TreeRoots", 10 -> 
       "L07Milkmaid", 11 -> "L11LittleStreet", 12 -> "L17WomanInBlue", 13 -> 
       "L30LoveLetter", 14 -> "vanGoghStrokes1", 15 -> "vanGoghStrokes2", 16 -> 
       "vanGoghStrokes3"}}, {{
       Hold[$CellContext`color$$], "color", ""}, {
      "binary", "grayscale", "color"}}, {{
       Hold[$CellContext`hatRad$$], 26, "neighborhood size"}, 1, 50, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Manipulate`Place[2], 
         Spacer[20], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 0.5, "binarization threshold"}, 0, 1}, {
      Hold[
       Row[{
         Manipulate`Place[4], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Compare the closing and the tophat filter of binary, grayscale, \
and color images.\n\nThe threshold only has effect in the binary case. \
Observe how different threshold values bring out different portions of the \
image.\n\nThe closing is boxy because the structuring element is (by default) \
a square.\n\nThe Little Street turns from a cloudy day into an ominously lit \
night-time scene.\n\nAs the neighborhood increases, the effect approaches \
that of the difference between the image and its mean. For smaller sizes, it \
is like the difference between the image and its local mean.", WindowTitle -> 
            "Notes", WindowFloating -> True]], Appearance -> None, 
          BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    956.0122287750244, {27.86224365234375, 14.94873046875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$13545$$ = False, $CellContext`color$13546$$ = 
    0, $CellContext`hatRad$13547$$ = 0, $CellContext`t$13548$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`color$$ = "color", $CellContext`hatRad$$ = 
        26, $CellContext`i$$ = 10, $CellContext`t$$ = 0.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13545$$, False], 
        Hold[$CellContext`color$$, $CellContext`color$13546$$, 0], 
        Hold[$CellContext`hatRad$$, $CellContext`hatRad$13547$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$13548$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`img$}, 
        Which[$CellContext`color$$ == 
          "color", $CellContext`img$ = 
           Part[$CellContext`allImagesColor, $CellContext`i$$]; 
          Null, $CellContext`color$$ == 
          "grayscale", $CellContext`img$ = ColorConvert[
             Part[$CellContext`allImagesColor, $CellContext`i$$], 
             "Grayscale"]; Null, $CellContext`color$$ == 
          "binary", $CellContext`img$ = Binarize[
            
            Part[$CellContext`allImagesColor, $CellContext`i$$], \
$CellContext`t$$]]; Row[{
           Image[$CellContext`img$, ImageSize -> 150], 
           Image[
            Closing[$CellContext`img$, $CellContext`hatRad$$], ImageSize -> 
            350], 
           Image[
            ImageAdjust[
             BottomHatTransform[$CellContext`img$, $CellContext`hatRad$$]], 
            ImageSize -> 350]}]], 
      "Specifications" :> {{{$CellContext`i$$, 10, "image"}, {
         1 -> "F205OldManWithBeard", 2 -> "F260HousesInSnow", 3 -> 
          "F458Sunflowers", 4 -> "F482BedroomAtArles", 5 -> 
          "F632PloughAndHarrow", 6 -> "F634SheepShearer", 7 -> 
          "F651FallingLeaves", 8 -> "F659Garden", 9 -> "F816TreeRoots", 10 -> 
          "L07Milkmaid", 11 -> "L11LittleStreet", 12 -> "L17WomanInBlue", 13 -> 
          "L30LoveLetter", 14 -> "vanGoghStrokes1", 15 -> "vanGoghStrokes2", 
          16 -> "vanGoghStrokes3"}, ControlType -> PopupMenu, 
         ControlPlacement -> 1}, {{$CellContext`color$$, "color", ""}, {
         "binary", "grayscale", "color"}, ControlPlacement -> 
         2}, {{$CellContext`hatRad$$, 26, "neighborhood size"}, 1, 50, 1, 
         Appearance -> "Labeled", ControlPlacement -> 3}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Manipulate`Place[2], 
          Spacer[20], 
          Manipulate`Place[3]}], {{$CellContext`t$$, 0.5, 
          "binarization threshold"}, 0, 1, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[4], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Compare the closing and the tophat filter of binary, grayscale, \
and color images.\n\nThe threshold only has effect in the binary case. \
Observe how different threshold values bring out different portions of the \
image.\n\nThe closing is boxy because the structuring element is (by default) \
a square.\n\nThe Little Street turns from a cloudy day into an ominously lit \
night-time scene.\n\nAs the neighborhood increases, the effect approaches \
that of the difference between the image and its mean. For smaller sizes, it \
is like the difference between the image and its local mean.", WindowTitle -> 
             "Notes", WindowFloating -> True]], Appearance -> None, 
           BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The image (left), its closing (middle), and the tophat filter \
(difference between the image and its closing)", Medium], 
        TrackedSymbols -> {$CellContext`i$$, $CellContext`color$$, \
$CellContext`hatRad$$, $CellContext`t$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{1015., {98.91754141980782, 106.08245858019218`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelBottomHat",ExpressionUUID->"ad45eebb-174e-4181-a87c-6cc315aeedbc"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 3, 26, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733338362291*^9},
 CellTags->"labelBottomHat",
 CellLabel->"",ExpressionUUID->"c32a3887-1907-4a66-aec9-c76701cf3ab6"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) \
should be an array of rank 2 or 3 with machine-sized numbers.\"", 2, 3, 27, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733338654291*^9},
 CellTags->"labelBottomHat",
 CellLabel->"",ExpressionUUID->"f6b1c4a5-ae8e-4c90-b65c-349c8e7c4e5e"],

Cell[BoxData[
 TemplateBox[{
  "Closing", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
neither a rectangular array nor an image.\"", 2, 3, 28, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333390507383`*^9},
 CellTags->"labelBottomHat",
 CellLabel->"",ExpressionUUID->"a61d911b-5196-4017-b7bc-224db625df30"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"Closing\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"FE`hatRad$$383\\\"}], \\\"]\\\"}]\\) should be an array of rank 2 or 3 \
with machine-sized numbers.\"", 2, 3, 29, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333393977118`*^9},
 CellTags->"labelBottomHat",
 CellLabel->"",ExpressionUUID->"86e5aad4-4ba4-4069-83ed-125e786d88b5"],

Cell[BoxData[
 TemplateBox[{
  "BottomHatTransform", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"allImagesColor\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"10\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
neither a rectangular array nor an image.\"", 2, 3, 30, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733339880808*^9},
 CellTags->"labelBottomHat",
 CellLabel->"",ExpressionUUID->"60c4583b-970e-4b83-9912-747b12cd5a16"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"BottomHatTransform\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"FE`hatRad$$383\\\"}], \\\"]\\\"}]\\).\"", 2, 3, 31, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333402584515`*^9},
 CellTags->"labelBottomHat",
 CellLabel->"",ExpressionUUID->"1558be04-df20-4e30-a372-f9216f214dbe"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"ImageAdjust\\\", \\\"[\\\", \
RowBox[{\\\"BottomHatTransform\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allImagesColor\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"10\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"FE`hatRad$$383\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) should be an array of \
rank 2 or 3 with machine-sized numbers.\"", 2, 3, 32, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333407069435`*^9},
 CellTags->"labelBottomHat",
 CellLabel->"",ExpressionUUID->"e3739383-0406-41ab-bcae-78aeb5267e41"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Image\\\", \\\"::\\\", \
\\\"imgarray\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 3, 33, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333411064954`*^9},
 CellTags->"labelBottomHat",
 CellLabel->"",ExpressionUUID->"47554f85-8ca8-483d-8b36-d5270f0be1da"]
}, Open  ]],

Cell[TextData[{
 "HW: Create a 1D demonstration of the effect of either the tophat or the \
bottomhat transformations. Model your demonstration after the 1D demo of the ",
 ButtonBox["morphological gradient",
  BaseStyle->"Hyperlink",
  ButtonData->{"visualVocabMorph.nb", "morphological gradient"}],
 "."
}], "Text",
 CellChangeTimes->{{3.551712040028524*^9, 3.55171209451799*^9}, {
  3.551712247816434*^9, 3.5517122639927807`*^9}, {3.551713586179296*^9, 
  3.551713586569697*^9}, {3.551713638941503*^9, 
  3.551713638950349*^9}},ExpressionUUID->"139b69aa-851c-499a-9f32-\
cd290064b40f"],

Cell["\<\
HW: Apply either the tophat or the bottomhat filters to the x-ray canvas \
images. \
\>", "Text",
 CellChangeTimes->{{3.552687562939926*^9, 
  3.552687594346943*^9}},ExpressionUUID->"f1832f4a-7064-4e2d-b607-\
e1c36ac44c38"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Morphological Skeletons", "Subsection",
 CellChangeTimes->{{3.4796458681875*^9, 3.479645870453125*^9}, 
   3.494107718725898*^9, {3.5517947039917917`*^9, 3.551794705867661*^9}},
 CellTags->
  "morphological \
skeletonization",ExpressionUUID->"5c8ea418-a98c-4672-9f5a-8d3ab7a968f9"],

Cell["\<\
In many shape-based image analysis applications, the internal structure of \
the object is more interesting than its external structure. One way to \
represent internal structure is with a simplified line-representation called \
the morphological skeleton. The computation of the skeleton begins with the \
function\
\>", "Text",
 CellChangeTimes->{{3.494114415209914*^9, 3.494114427392354*^9}, {
   3.551721764556479*^9, 3.551721765430469*^9}, 3.55172180176838*^9, {
   3.551736435428173*^9, 3.551736563973097*^9}, {3.551794748382697*^9, 
   3.551794799396678*^9}, {3.551794961146283*^9, 
   3.551794972591301*^9}},ExpressionUUID->"7a71ce50-74c3-459f-9067-\
c600ad28dfc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageSubtract", "[", 
   RowBox[{
    RowBox[{"Erosion", "[", 
     RowBox[{"image", ",", "r"}], "]"}], ",", 
    RowBox[{"Opening", "[", 
     RowBox[{
      RowBox[{"Erosion", "[", 
       RowBox[{"image", ",", "r"}], "]"}], ",", "1"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.551794817900754*^9, 3.55179483228738*^9}, {
   3.551795071660248*^9, 3.551795080355303*^9}, 3.551799047608738*^9, {
   3.552759987012134*^9, 
   3.552759990203208*^9}},ExpressionUUID->"2bf91102-4007-4fe3-b41a-\
aac9521ed9e0"],

Cell["\<\
In words, the operation is to erode the image (with a structuring element of \
size r) and to then subtract the opening of that erosion. This is repeated \
for all r (up to some largest size). The skeleton is then the union (logical \
OR or binary sum) of all the results. Here the skeleton operation is applied \
to the circle-images.\
\>", "Text",
 CellChangeTimes->{
  3.551794821533457*^9, {3.551794980230961*^9, 3.551795024504281*^9}, {
   3.551795060698844*^9, 3.551795063753166*^9}, {3.5517951241516027`*^9, 
   3.551795298321353*^9}},ExpressionUUID->"20f399fc-a077-4b3f-a450-\
8a009881d4ea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelSkeletonBW", "=", 
   "\"\<The morphological skeleton reduces each white area to a single \
curve\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoSkeletonBW", "=", 
   "\"\<Look through several of the synthetic 'new images'. Observe that the \
skeleton is the central core of the shape.\\n\\nWhere the image has an \
isolated ring, the skeleton has a circle.\\n\\nWhere multiple rings touch, \
the skeleton circles join to form connected structures.\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"rd", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"setToOne", "=", 
        RowBox[{"Round", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{
              RowBox[{"100", "/", "2"}], ",", 
              RowBox[{"100", "/", "4"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"synMorphImg", "=", 
        RowBox[{"RangeFilter", "[", 
         RowBox[{
          RowBox[{"Dilation", "[", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"White", ",", 
                RowBox[{"Point", "[", "setToOne", "]"}]}], "}"}], ",", 
              RowBox[{"Background", "\[Rule]", "Black"}]}], "]"}], ",", 
            RowBox[{"DiskMatrix", "[", "60", "]"}]}], "]"}], ",", "10"}], 
         "]"}]}], ";", 
       RowBox[{"rd", "=", "0"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"synMorphImg", ",", 
        RowBox[{"ImageAdjust", "[", 
         RowBox[{"Image", "[", 
          RowBox[{"Total", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageSubtract", "[", 
               RowBox[{
                RowBox[{"Erosion", "[", 
                 RowBox[{"synMorphImg", ",", "r"}], "]"}], ",", 
                RowBox[{"Opening", "[", 
                 RowBox[{
                  RowBox[{"Erosion", "[", 
                   RowBox[{"synMorphImg", ",", "r"}], "]"}], ",", "1"}], 
                 "]"}]}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"r", ",", "1", ",", "20"}], "}"}]}], "]"}], "]"}], 
          "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rd", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{"\"\<New Image\>\"", ",", 
            RowBox[{"rd", "=", "1"}]}], "]"}], "&"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoSkeletonBW", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelSkeletonBW", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", "rd", "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], "\n"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQfWjf1blpZa8c264+XwiidWzal4Hook07VoHoZ74L
t4PoBWc7j4DoAxWep0D0qxfpZ0D0PrZZV0H0l01HwbRT1+PbIHqZdP9dsP6M
pqcg2ij4wXMQfSH/4FsQzbZzxmcQndcpJ5YOpGVefVEH0ad+GOiCaJt90cYg
el9WggWIjipMsALRYjez7EG00612MN0VvsYFRC9euAtMR0QGeILoKt4sMG1S
xzqxCUjHx32bBKL/TXSdDqKPbTwHps3mZMwB0VuanswF0UePu/syVbxyfPJU
LghEr1h9VJgLSFdOPCMKorteLH9iBqTr1l18DaKL7qV8ANEWjN1fQfS1U/t/
guiw+Fm/QPTPU25fI4H0g0+LwXRA9ae3+TVAe/pE34FoAOoPz3E=
  "],
 CellTags->
  "labelSkeletonBW",ExpressionUUID->"6b971e01-d456-493c-89d6-6f808cd10388"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`rd$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rd$$], 1, ""}, 
      Dynamic[Button["New Image", $CellContext`rd$$ = 1]& ]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Look through several of the synthetic 'new images'. Observe that \
the skeleton is the central core of the shape.\n\nWhere the image has an \
isolated ring, the skeleton has a circle.\n\nWhere multiple rings touch, the \
skeleton circles join to form connected structures.", WindowTitle -> "Notes", 
            WindowFloating -> True]], Appearance -> None, BaseStyle -> {}, 
          DefaultBaseStyle -> {}]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {625., {187., 192.78416637539328`}}, Typeset`update$$ = 
    0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`rd$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (If[$CellContext`rd$$ == 1, $CellContext`setToOne = Round[
            Abs[
             RandomVariate[
              NormalDistribution[100/2, 100/4], {8, 
              2}]]]; $CellContext`synMorphImg = RangeFilter[
            Dilation[
             Graphics[{White, 
               Point[$CellContext`setToOne]}, Background -> Black], 
             DiskMatrix[60]], 10]; $CellContext`rd$$ = 0; Null]; 
       GraphicsRow[{$CellContext`synMorphImg, 
          ImageAdjust[
           Image[
            Total[
             Table[
              ImageData[
               ImageSubtract[
                Erosion[$CellContext`synMorphImg, $CellContext`r], 
                Opening[
                 Erosion[$CellContext`synMorphImg, $CellContext`r], 
                 1]]], {$CellContext`r, 1, 20}]]]]}, ImageSize -> 500]), 
      "Specifications" :> {{{$CellContext`rd$$, 1, ""}, 
         Dynamic[Button["New Image", $CellContext`rd$$ = 1]& ], 
         ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Look through several of the synthetic 'new images'. Observe that \
the skeleton is the central core of the shape.\n\nWhere the image has an \
isolated ring, the skeleton has a circle.\n\nWhere multiple rings touch, the \
skeleton circles join to form connected structures.", WindowTitle -> "Notes", 
             WindowFloating -> True]], Appearance -> None, BaseStyle -> {}, 
           DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The morphological skeleton reduces each white area to a single \
curve", Medium], SynchronousUpdating -> False, 
        TrackedSymbols -> {$CellContext`rd$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{683., {253.91754141980783`, 261.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`setToOne = {{9, 32}, {80, 21}, {77, 16}, {
        64, 9}, {81, 32}, {15, 75}, {43, 77}, {63, 
        34}}, $CellContext`synMorphImg = Image[CompressedData["
1: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
6l/CpfrvcKn+UVyq/xmZ6t/HpfpPcqn+qWTU+v+uhk7/6kWR6L8O+SaaSMwP
AH0XRQTmX6y8PSjMb1k5fAXmD60dvvHzsy7hu9hghgeC57/9WHOwyAOh8wtX
HYzzSL75m7kUp5wfm8lwzvnHeYI47fzuLIbzzp9PYnhEcDuIY6ZKpxA8+JS0
EcTuoXsjRQiPBfCJk+Kb49cwuWcyGB4X/H51HOv2wqqCZSjBZBLsEbkFJwjh
EkymBJMpwWRKMJm34QNvKfQFJw/hEtyB5b0wheBAw+ZzjQSCwwxDzuVSJKxE
bBKgc+UMAewfwsB7kRyCXQ1j7/WSCD5nLRGlfgC/l06xBZ/xCGJ8XkWWAD7B
DmJKXlCeAD7x1pmB9+kb9v0TrLy2RAF8YTjPMTovk+CAT3+erkZe8bJUXjyX
quugUnVJXKqujknHS0nVhU7S96xcdc1T9L7rVV3+DN1nFdVXYpyBY4rqizLM
yDFb9fUZZewQs/pSDTJavQH86G8QwIMn8NUXcIjR+43qaznE8DV+9WUdYVhv
9RUeYOLus/pi9zOR4lN93ftR0bvoXIKZBLWaq9HNjN6aC9PNVHplzTXqZbJa
mbaexeZyzSUH11y5TmZr7YlLWsmvrVcEh5Xmetp7nRBYZy4tplcPmmXmKsN6
TYFZZC44tFcakkX8gnv94WhsEMn84ntVwtgO4GR+Cb1WUazgl9MrGMMCfmk1
FQi2N+BUfpX1NgI4k19mTQWA9H65NRVmsvtl11RYye5XXO/6fmP1ZvfrMSvO
RHK/8npzP/86zeqcJ/n7m7retf3G603u13HW9xzJz3+Thu8afgX0ruxXQm/u
++Pd7VdAb/b8h6zhu4JfAb3p8892/CqE78J+NfRmz/9t+1XQmz5/vf34oB6+
OeovKny5ZA3f9H7F9ZZfAAvUH7f8KmwPK9TPt/wK6F2i/0PDb4UviIZfdb3l
18oi/aO2/QpsD4v0P9v2K6B3jfBV9btM/0lNv+v0T930G739LtT/d9OvvN40
4ZvUb+z6Rii/XDL6TbQ95PQbu7whtvyKPz5kCt9Nv+JPv5nCN6HfVOGbz28u
vQn9Bi9ukGx+k4VvDHH/o349VXb5UHfKL5fyy6X8cim/XMJeyp+eTBw+M4Cw
Q6WnS2mHzwyg/HIpv1zKL5fyyyUqKeD5YIP+kSFEJbU857TRPzKE8sul/HIJ
SordOFf+0SL1MXNQUvd+SvGW+KSWE/i9W07oOKao5jDtquk4m+KYorDx8L0r
zmU4pKhxMnxvhjMpDinKnQ/fm+I0hlP6TWQ4oimCaXv4MJxDcERTD3v4ngWn
MBzQlAYSvmkM+wcwJnwvhvUFuzcFg4VvDsHeTe2gehPsEd5NGYG7w9WwtmDn
pqLg8NUX7NwUl+BXXLBrAL8y/GoLdm1KzvErLdi1qT7Jr7Jg16EQO35fT0zb
FxbsGcA7Bq9/PmtZV7DnUJ4jv7e/NeFYVrDnUKk+v5e/OapYthzPcShav9/9
v7zpN2sAAwUP+R0NYlnBfkMpB/3u/xNpBPsNVR33O2RYdAv2Gwo843fg0CJv
AIMEz/ntD+G8AYwZyj7pt9tw4gCGhPC0395NQlRwTwAjBBv89gq2LpFDr2Cj
YYvfvj1CNID7dgizYZPfvhBOHcDvxk3C6LdHcPIAtoXwa5vOH9AheHp1VLoD
2GLYovb6Ew4Fi/odEXwyHNXaKm9L4hHBoPeNGfL2zB3yGxfEaZvmjgXwTbG/
47Rdc8cF3xwbf2sNkrat65TghmXmOtOOlJkX/KSbucy0AYwSzH66yNuYGCOY
/vR2IFjYMEQw/+n4IFFb2DBCsIPftO9xCMEOb3eHlQbKgq2GPfwen/QoG5b3
m/kw2CzY5fSnoxZJWbDFsI/fxPdxLzbDPqeXPcV0woJtxxEO6+u6stcWPGnY
6fS9qxpUWfCsYSW/2oJPhscVe/nty/vTFjwTxF63c53l4uqCh4PYzW/uxNVH
TopdklCGWCWAL7xdmm3m85tF8Jm3W+vYPb9Oa0lfO9DGuTVHg+6GKAm24M94
t5bZZt0AVtgeXvIXvzRxb+3VInnxS4uI3ooNVhQc0FqxTeril22EwvclefHL
JkrheyJx8csmIa2Z90h93/mMnN/ExS9bhLTG3ydv8csGMaMd9kmcNPVEzGiS
A/IWvzwRNFrngLTFL09o+s1b/PKVoNFmh+StHfhM1Gi+Q9IWv3xG1+8aASzr
96g2I3p5nUSN9u1gV3BqvxJ697fgLBuwtN8FAljZ734ARy+uD22/OwFcfgHs
CCb7fftxTM+vAG2/OzsEzW939ljXTGd1v80ApjxADGU/Plhur0X4+feMYwBP
paB/OG4o1n1/u7ATwNgPsla7Ngyr+20HMNKvIXQfDW8oLr+IQu274q+GVc9/
P2huECi/OLtbhkXvLx5oBTDIL6pX0X1dnwQn8NsIYIhfbPBeF/ZoWPL++DON
AAb4Zdj9Ylgx/+ELNL/wreFhcTfBgvk7X2lsEGa/RL13wXr5Z89sB7DRL2tv
+FjexfB39UsN3usCT4LV8n+3IPh10HsRrJW/vs32Bmzx66L3LFiq/qLFZgAb
/DrpPQtOEcCba5/+cW56T4Jl6t92wPp11Ht6jGj/mYxgqF9XvT+XufNnK/o1
dU8Hzy1XCWCgX1v3f7Tj9fzap1cgFWsEMPD5FzN9BWdYQjDu/Q02PQgWxAqC
YX6h069AhlfyC26cBTEcH8Cw81/89MElBMPuLwjTMxEhHC0Y5Zcz/RVgWLNY
dtQvbXpxcsGo/AfecOjUglH5O8zp8fY9Ik4wKv+sS+/8KtMKBvntCF/bTOik
glH5v2S9EMEhHbua6wH7NcdPyt9yqPqLw+0B8N0yCvYKX8g3Qwh27vkJqn87
Cl9Q4EBelj2b1qLqN330pjvvgdUf7/sFfiOMYK+u96j6+YPtAfl1uhudCxiG
9X9wC19MAL8fXE55LBW3PYD3O+DVZ+jw6ZEf5TojAXl7T1QM7B+1u/3ivwFk
C35QzHEM7H/mPOIDn0X1ireMbH/mnWK3+3t5SvH7zTJsicj+k94poruvRbbs
TYcVnlc5dLjjnuK891pvS4+lr++6yqEf55+iv3csZRKMWR22f3VAicnusapF
MHdxH4sc+nkRFSa756oGwYiloecHRFRI7V9rzQtmruy+xLHWUSElqvvXstPF
ufZ14ee3CPqdDmHrqhjzh0JaBBymxcwJfr2DXNTmCnuJaXFxmNY1tUf8foeV
KDfcuC+mRUtHWqKtRQIp0XO8L2JQi6GetFrbyxwlURmWVq3g19rlA59oP9HW
M6jFW2dZg8cmMZDfCatq4d8g9pbl2JozYgudZrrSqvt9MQYxsFBvqulvAr+s
IB5M/J7rqRzV4ni0rHemufPD9wEUSgNLuj0SOCbK0vubkz9jLvSfbAmeye+F
dnP9LseTxdGzHdfz+W0zoY2tt/xy9ZZfrt7yy9Vbfrl60zz/9iCoN8f7WyeC
esvvgV3rpKHyu6vXPMdJ+/x3DEG90vcXo6DtIqaQlV+mXeH74wmgekET9ETz
H6YA2oUNKNTM35mDN+iLsKbI/LNJeIPq5lnJ7wtt0OI8evm/RiiDQueRy18H
gB90a1lL6xNj6i9QYAc1G9CqHwKDGjRuQKr+jfKBsUjVbxI+Lxqp+mPC50Wj
VD+/ol+h/g/sXzUx6PQvWTF8lfrvfEO/rv2j1vQr0/9sze1Xp3/fmuGr039y
Vb8i/VMzbQ9j5xoa/X9zhO/MuZxE/+oE4Tt9rqzQf109fE33Iod/hT8/QNuv
9V6PKxjf1sYVyL00UTChrY0j9NC9Qp0/JBu+XnZPEOdnqYav7zxznbY2PngG
7xmZtjYeuNs9IdLWxgHfreGORFsbPlF6NdrasAnZGz6Ib2tDJi54r0S3teES
rvdEaFsbKhJ630Pb2jBR0Xsiqq0NESW9ZyLa2vCQ02uh9FJZRK/lX2AmK+g1
/wLioad3tEIR8gDFQlDvWPiCXgBIJNcLfIGlkFsv9gAGD70qaoZuvfADRDSK
dvvDF38ADkZSb2/4Ui5wkEjuDb3hS7qAxCFqt1vv8A/2FSxqt3N3ICaAQFAN
3r7wpSYwAdC12xW+5AQ8s1xhuz3hy04gNdoVlvvSE74OCdBKbW3ASCTwK7W1
waJTgCLT1gaKWgGVQFsbJFUAyKUKWLlUATaVaiDApRpgcKkGLlyqARGVaqDF
pRrAcakGhlyqASeXaiDLZekGyPGs2sBbhRUb0Cux3AAFMRYbACJH+eWy0gAm
RVYaIKbISgPwFFlpgKMi5ZfLSgN0FVlpALQi5ZdL+eWy6Ze+/bY24G/il6+3
EcDlF0b55VJ+uZRfLuWXS/nl8p391vMvjHp/41J+uZRfLnX+y6XuL7iUXy51
f8yl8h+4VP4Ol8o/41J+uVT+L5fKX+dS9Rdkqn6IS9W/can6TS5Vf8yl6ue5
VP8HMtW/hEv13+FS/aO4VP8zMtW/j0v1n+RS/VPJqPX/XQ2d/tWLItF/HfJN
NJGYHwD6LooIzL9YeXtQmN+ycvgKzB9aO3zj52ddwnexwQwPBM9/+7HmYJEH
QucXrjoY55F88zdzKU45PzaT4Zzzj/MEcdr53VkM550/n8TwiOB2EMdMlU4h
ePApaSOI3UP3RooQHgvgEyfFN8evYXLPZDA8Lvj96jjW7YVVBctQgskk2CNy
C04QwiWYTAkmU4LJlGAyb8MH3lLoC04ewiW4A8t7YQrBgYbN5xoJBIcZhpzL
pUhYidgkQOfKGQLYP4SB9yI5BLsaxt7rJRF8zloiSv0Afi+dYgs+4xHE+LyK
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
TFbQa/4FxENP72iFIuQBioWg3rHwBb0AkEiuF/gCSyG3XuwBDB56VdQM3Xrh
B4hoFO32hy/+AByMpN7e8KVc4CCR3Bt6w5d0AYlD1G633uEf7CtY1G7n7kBM
AIGgGrx94UtNYAKga7crfMkJeGa5wnZ7wpedQGq0Kyz3pSd8HRKgldragJFI
4Fdqa4NFpwBFpq0NFLUCKoG2NkiqAJBLFbByqQJsKtVAgEs1wOBSDVy4VAMi
KtVAi0s1gONSDQy5VANOLtVAlsvSDZDjWbWBtworNqBXYrkBCmIsNgBEjvLL
ZaUBTIqsNEBMkZUG4Cmy0gBHRcovl5UG6Cqy0gBoRcovl/LLZdMvffttbcDf
xC9fbyOAyy+M8sul/HIpv1zKL5fyy+U7+63nXxj1/sal/HIpv1zq/JdL3V9w
Kb9c6v6YS+U/cKn8HS6Vf8al/HKp/F8ulb/OpeovyFT9EJeqf+NS9Ztcqv6Y
S9XPc6n+D2SqfwmX6r/DpfpHcan+Z2Sqfx+X6j/JpfqnklHr/7saOv2rF0Wi
/zrkm2giMT8A9F0UEZh/sfL2oDC/ZeXwFZg/tHb4xs/PuoTvYoMZHgie//Zj
zcEiD4TOL1x1MM4j+eZv5lKccn5sJsM55x/nCeK087uzGM47fz6J4RHB7SCO
mSqdQvDgU9JGELuH7o0UITwWwCdOim+OX8PknslgeFzw+9VxrNsLqwqWoQST
SbBH5BacIIRLMJkSTKYEkynBZN6GD7yl0BecPIRLcAeW98IUggMNm881EggO
Mww5l0uRsBKxSYDOlTMEsH8IA+9Fcgh2NYy910si+Jy1RJT6AfxeOsUWfMYj
iPF5FVkC+AQ7iCl5QXkC+MRbZwbep2/Y90+w8toSBfCF4TzH6LxMggM+/Xm6
GnnFy1J58VyqroNK1SVxqbo6Jh0vJVUXOknfs3LVNU/R+65XdfkzdJ9VVF+J
cQaOKaovyjAjx2zV12eUsUPM6ks1yGj1BvCjv0EAD57AV1/AIUbvN6qv5RDD
1/jVl3WEYb3VV3iAibvP6ovdz0SKT/V170dF76JzCWYS1GquRjczemsuTDdT
6ZU116iXyWpl2noWm8s1lxxcc+U6ma21Jy5pJb+2XhEcVprrae91QmCdubSY
Xj1olpmrDOs1BWaRueDQXmlIFvEL7vWHo7FBJPOL71UJYzuAk/kl9FpFsYJf
Tq9gDAv4pdVUINjegFP5VdbbCOBMfpk1FQDS++XWVJjJ7pddU2Elu19xvev7
jdWb3a/HrDgTyf3K6839/Os0q3Oe5O9v6nrX9huvN7lfx1nfcyQ//00avmv4
FdC7sl8Jvbnvj3e3XwG92fMfsobvCn4F9KbPP9vxqxC+C/vV0Js9/7ftV0Fv
+vz19uODevjmqL+o8OWSNXzT+xXXW34BLFB/3PKrsD2sUD/f8iugd4n+Dw2/
Fb4gGn7V9ZZfK4v0j9r2K7A9LNL/bNuvgN41wlfV7zL9JzX9rtM/ddNv9Pa7
UP/fTb/yetOEb1K/sesbofxyyeg30faQ02/s8obY8iv++JApfDf9ij/9Zgrf
hH5ThW8+v7n0JvQbvLhBsvkFh+//A0WxwNA=
         "], "Byte", ColorSpace -> "RGB", Interleaving -> False]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelSkeletonBW",ExpressionUUID->"b46a2eed-40d9-4a5a-8e22-8fe8020ba4cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.55456244806698*^9, 
  3.554562449098441*^9}},ExpressionUUID->"b0f107f0-ea4e-4609-997d-\
1266296d5f07"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"9b1f475d-5d2d-4ae1-a0a5-\
19f7d95b65f0"]
}, Open  ]],

Cell["\<\
The morphological skeleton operation can also be applied to more interesting \
images. The built-in function Thinning[ ] can also be used to carry out the \
required erosions and openings.\
\>", "Text",
 CellChangeTimes->{{3.5517953163722477`*^9, 3.55179533859409*^9}, {
  3.5517976753116198`*^9, 
  3.551797720197898*^9}},ExpressionUUID->"f715cf3b-8083-4ee3-80f3-\
c0d3bab65461"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelThinningBW", "=", 
   "\"\<The morphological skeleton reduces each white area to a single \
curve\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoThinningBW", "=", 
   "\"\<The skeleton/thinning process can be applied to more interesting \
shapes.\\n\\nThere are two methods to choose from, which give slightly \
different results.\\n\\nFor example: all the points of the umbrella appear \
when using the MedialAxis option while some are missing from the \
Morphological option.\\n\\nOn the other hand, the Morphological option gives \
a smoother represntation of the \[Psi] symbol, without spikes leading out to \
the inflection points of the arms.\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"synSkelImg", "=", 
        RowBox[{"ColorNegate", "[", 
         RowBox[{"shapes", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"ImageAdjust", "[", 
        RowBox[{"Thinning", "[", 
         RowBox[{"synSkelImg", ",", 
          RowBox[{"Method", "\[Rule]", "optThin"}]}], "]"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "4", ",", "\"\<image\>\""}], "}"}], ",", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "shapes", "]"}], "]"}], "\[Rule]", 
           "shapes"}], "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"optThin", ",", "\"\<Morphological\>\"", ",", "\"\<\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Morphological\>\"", ",", "\"\<MedialAxis\>\""}], 
          "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoThinningBW", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelThinningBW", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "optThin"}], "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.5517975238009872`*^9, 3.5517975482648163`*^9}, {
   3.552580262040546*^9, 3.552580300480648*^9}, 3.552580345027453*^9, {
   3.552596154530295*^9, 3.5525961709840193`*^9}, {3.552688183012101*^9, 
   3.552688233783704*^9}, {3.552688314988552*^9, 3.552688384872913*^9}, {
   3.552688436067691*^9, 3.552688483848609*^9}, {3.552688582162107*^9, 
   3.5526886375317183`*^9}, {3.5526886833497667`*^9, 
   3.5526887442899437`*^9}, {3.552688946168275*^9, 3.55268897802383*^9}, {
   3.552759740474204*^9, 3.5527597414252977`*^9}},
 CellTags->
  "labelThinningBW",ExpressionUUID->"4ef7e757-448f-4a3a-a9e9-34722dea70da"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 4, $CellContext`optThin$$ = 
    "Morphological", Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 4, "image"}, {1 -> Image[CompressedData["
1:eJzt1M2ubdmVldELFKDIK/AWVClmNREPkClMiopTcqaU4skpGoccOGJH3Ht+
5pl7fWPN3VohZIes47VH733+l3/857//X//+27dv//Kf/vKPv/+Hf/tvf/rT
P/yf//6f//Jf/scf/+V//9Mf//A//+6P//qHf/rDn/7rP/6Hv/zL//iX/+3/
/Xffvv30n/8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAE/w7f+rPwSAzb49qj8H4EU96R3+9jt7/z4A
73reO/z7R947D5xq7Cv3vHf4u4/8wAsAfNHkV+557/CPHvlpFwD4osmv3PPe
4Tce+VEXYCP5nkGOnzX5lXveO+yRfzUiPoMcF0x+6J73FL/9l4f8fDYS8Rnk
uGDyK/e8p/jdvzzkAuwi4jPIccHkV6595CdcgF1EfAY5Lpj8yj3vEX73Lw+5
ALuI+AxyXDD5lXvet737l4dcgF1EfAY5Lpj8yj3vwz7yqydcgF1EfAY5Lpj8
yj3vqz74q/MLsIuIzyDHBZNfued90sd/tfKcQcRnkOOCya/c877nU786vAC7
iPgMclww+ZV73sd89ldXF2AXEZ9Bjgs+dbSL7/a8j/nsr64uwC5SPoMcF3z2
aFfe7XlfsvCrkwuwi5TPIMcFC0e77G7P+5K1X339BdhFymeQ44LJR1v7to98
59f/8ht/nIFEfAZrXTD5YsuBvvupW/7yj/44A4n4DNa6YPK5vhLo21+76y9/
948zkIjPYK0LJt/qi4G+8cEb//Lv/zgDifgM1rpg8qG+HuiPvnnvX/72ks25
FxGf4es5vmCUk6+0JdDLXHMT1oj4DFtyfLUoJ59oV6CXueYsLBDxGXbl+FJR
Tr7PxkAvc81l+CwRn2Fjjq8T5eTj7A30Mtcch08R8Rn25vgiUU6+zN40r3TN
ffg4EZ9he46vEOXks+yN8krX3IePk/IZnpHj8VFOvsneHC92zYn4ICmf4Uk5
nh3l5IPsDfF611yJj5DyGZ6X48FRTr7G3gQT1xyKd0n5DE/N8dQoJ59ib3yV
a27F26R8hmfneGSUk++wN7vQNefiDVI+wwU5nhfl5CPsDS50zbl4g6DPIMcF
k4+wN7jQNefiDbI+gxwXTL7A3tQq19yKt0n8DHJcMPnn741s7M/kAppzBjku
mPzb9+Y19mdyAeU5gxwXTP7he8Ma+zO5gP6cQY4LJv/wjTGN/Y1cQ4XOIMcF
ky+WfNvCdzKfFp1BjgsmX6z6tl979v25hhadQY4LJl8s/LZfuyAFnq0ukRbt
IcQFk4/WftuvXZMFz1M36Cf1DU4gwQXt0d6+W/1pDy5LhGeo6/Oz+gy3J74F
7dH+avK3/dqVubBX3Z1f1Je4N9ktaI/2N5O/7W8ujoaN6u78or7EvcluQXu0
X5v8bX91fTrsUnfnQX2MGxPcgvZovzH5277dNmL+rEunkNqC9mi/Mfnbvt02
Yv48r0vf1GmJyBa0R/u9u3wb91J35/vqq9yPvBa0R7uXOivW1d35ofowNyOs
Be3R7qXOinV1d95S3+ZOJLWgPdq91Fmxru7OO+rz3IaYFrRHu5c6K9bV3Xlf
faF7kNGC9mi3U8fForo4H1If6QYEtKA92mHqMPmhuhofVd9pOuksaI92mDpM
fqiuxifUpxpNNAvao52nzpPvq3vxOfW15pLLgvZoR6oj5TvqUnxafbChhLKg
Pdqp6lT5rboRK+qbTSSRBe3RDlYHy4O6Divqm00kkQXt0c5WZ8sv6i6sqG82
kUQWtEc7Xh0vP6uLsKK+2UQSWdAe7RXUCfOTugUr6ptNJJEF7dFeQZ0wP6lb
sKK+2UQSWdAe7RXUCfOTugUr6ptNJJEF7dGOV8fLz+oirKhvNpFEFrRH26u+
JXPV3VxR32wiiSxoj7ZXfUvmqru5or7ZRBJZ0B5tr/qWzFV3c0V9s4kksqA9
2l71LZmr7uaK+mYTSWRBe7S96lsyV93NFfXNJpLIgvZo29XnZKi6mCvqm00k
kQXt0Z6hvigT1a1cUd9sIoksaI/2JPVRGaeu5Ir6ZhNJZEF7tCepj8o4dSVX
1DebSCIL2qM9T31XZqn7uKK+2UR1JheFsvf/qL7ZE228EndXl3FFfbOJ6kwu
5WgfsetK3F3dxBX1zSaqM7mao33Elitxd3UNV9Q3m6jOJOBoH/H1K3F3dQdX
1DebqM6k4WgfsaVg3FddwBX1zSaqM8k42kfsqhl3VLdvRX2ziepMSo72ro1N
43bq9q2obzZRnUnM0d61t2/cSF29FfXNJqoz6Tnau7a3jluoe7eivtlEdSY9
R/uI7cVjvrp0K+qbTVRnMoKjfcQz6sdkdeNW1DebqM5kCkd715MayFh141bU
N5uozmQQR3vb80rITHXjVtQ3m6jOZBZHe8NTe8hAdeNW1DebqM5kHEf7kWdX
kWnqxq2obzZRnclEjvZdF7SRUerGrahvNlGdyVCO9nvXFJI56satqG82UZ3J
XI72G5d1kiHqxq2obzZRnclojvZrV9aSCerGrahvNlGdyXSO9jcXN5Nc3bgV
9c0mqjO5AUf7q+vLSatu3Ir6ZhPVmdyDo30zn9dTN25FfbOJ6kxuw9GqilKp
G7eivtlEdSbcRl1VrlY3bkV9s4nqTLiNuqpcrW7civpmE9WZcBt1Vbla3bgV
9c0mqjPhNuqqcrW6cSvqm01UZ8Jt1FXlanXjVtQ3m6jOhNuoq8rV6satqG82
UZ0Jd1K3lUvVdVtR32yiOhMOVxecdXV3VtQ3m6jOhPPVHWdRXZwV9c0mqjPh
JdQ1Z0XdmhX1zSaqM+El1DVnRd2aFfXNJqoz4VXUTefT6sqsqG82UZ0JL6Qu
O59T92VRfbZx6kB4LXXf+YS6LKeRIy+iqjqfVTflQHLkRSRV57PqmpxJjryI
66vOZ9UdOZYceREXV53PqgtyMjnyCq7sOQvqghxOjryCy3rOgrod55Mjr+Ca
nrOgrsZLkCOv4IKes6DuxauQI6/g2T1nQV2KFyJHXsFTe86CuhGvRY4c73kl
Z03diJcjR872pIazrG7EK5Ijp3pGt/miuhQvSo5H2h4rfF09i9clx/PszRS2
qGfx0uR4mI2Bwi71LF6dHE+yK03YqJ4Fe16G+kfwsy1pwkb1JvDIn2ZLoLBL
PQh+IsfDfD1Q2KVeAz+T42G2zBO+rp4Cv5DjYXaNFL6i3gEP5HiYjVOFNfUI
+C05HmbvYOGz6gXwHXI8zPbZwsfV9ef75HiYZ4wXPqLuPj8kx5M8ab/wrrr7
vEWOJ3neiuENdfF5hxxP8tQtw3fVred9cjzJsxcNv1FXng+R40ku2DX8Td13
PkqOJ7lm3fBnj8OtyPEkl22cF1c3nc+R40muXDovq645nybHk1y8d15Q3XFW
yPEk16+el1IXnEVyPEmyfV5E3W7gJ/VLwLHqagM/qx8DzlT3GvhF/R5woLrU
wIP6SeA0daOBB/WTwGnqRgMP6ieB09SNBh7UTwKnqRsNPKifBE5TNxp4UD8J
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
AAAAAAAAAAAAAAAAeIr/B81I67U=
         "], "Byte", ColorSpace -> "RGB", ImageSize -> {48., Automatic}, 
         Interleaving -> True], 2 -> Image[CompressedData["
1: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
1XXR9Hbx4sWwsDB1wylnFq6R4ffv369evbrd9wHkHZkyJCAgoFWrViEhIbb8
x0yxLP5v+fLlg4ODRYNTfFOhQoXnHxHoDDGuhKeSAyVLllywYIF+9yQ+Lz09
fc2aNaJhrBajxzIqSycW85NPPnHYounq8ePHw4cPN18618jwmzdvKpOlANll
nh4ibNu0afPPf/7z1q1bv2XkzJtvvmnLfy9atOigQYNWrVoVHR197dq1pKQk
ZUKkuxmOHj36008/LVq0KDw8XLR1neSpr2obtXPnzjdu3JBy5IpPjYULF4pP
OvOq7LuY/v7+P/zwg5Sl04/Yl9T7Ol0jw8URV6pUKftu+jzL/J47y10E6p8p
DdHczNvjYObVKr+pWLFiZGTkmTNnMu1a27dvt/pS4qvtKZGWlnbhwoWvvvpK
fFj4+fk9X48DVqB6Gu7h4TFz5kx7H47ZlpCQID4B1asPSnm5uUtIXcAqVaq4
0mNuzO3atUsJPdcYW3jixAl3d3c77eDQJg4Kn2d8fX09PT2z+ktDZLhSpAiK
li1brly5Mjk5WXPX2rFjh9VXe+mll0Qy52C/vXz58vz582vWrOnINaaO0Kha
terevXtzd+TZkzhVqV27tkmreyq7C6j836ZNm165ckX2YulI5F6lSpXEYsou
xA4OHz5sx50cQsGCBRs0aNC+ffsxY8YsXrx4y5YtO3fuPHXqlGipnj59WnwV
61wcdKL9+cUXX/zf//1fixYtQkJCnP8Oa5WXl1ePHj327Nljedfatm2b1Zeq
X79+bvbe1NTUdevWiWa5I5M8LCzs0qVLuSlbD/fv33/vvfcKFChgyvWDAMRH
s3g12Quku3Pnzo0ePVp2FXawf/9+O+3a1qnnvPmfMf9X89NhpxqB8Lznz9mL
FSsmkmTs2LHR0dHiAM/u+ATRlI2NjV21apWI9Bo1apjnucN6CbJaTPN3F2cQ
PXv2PHLkiC0LJVqqVsMklxmu2r17d8eOHdX1Zt/9J5/ZzTVt27Z15hEamzZt
qlixorIGbB+yYj5UQ+zGDx48kL0cDuLIK9H6WbBggb12dVt2FZ3+2JHMc6lo
0aKdO3f+17/+FR8fb68tIvargwcPfvDBB+rAA5NZL6WshRUNPNH2PnbsmO0L
ItaJ5qBcc+JsxV7r7beMHvhGjRrZfSWoH2FDhgyRNTWf7a5fvy5y2JSdkYfq
Av7xj3/MCy1wFyNO5+2+z1sgdqoiRYoEBgZWrlxZZFSvXr369evXv39/kYTV
qlWrUqVK6dKlCxcu7JzzRajEUrz66qtfffWVrmMSHj9+vG3btm7duvn4+Ehc
WLEtXn/99WyltyIhIUGdRC4r4nPBvistLS1t0aJF5qM1ck/Jt7ffftu+peon
NTX1k08+sf06l7KAeaQLxfXMnz/fLjv58+fd6j+JA1k0DCIiIlasWHHgwIFL
ly4lJiamZzCvRPwoDsBff/31woUL4tR48eLF4eHhL7/8skiwfM+N91B+dEDU
q1f8lR+9vb27d+++d+9eR07XdubMmeHDh6ttWmWp9etdMX/lWrVqbdiwIWdl
29IO79Kli33XlUJ8fAwdOlQJsRx3Rpn36YmNrkedulqzZk3JkiVN/9sX9PyG
Vv6pdevWeacLxcV89NFH2dqxLezt5vuJr69vw4YNx44dK0I7N/0MItXFueGm
TZvER8ALL7ygjuhwWC+x+hZ+fn4DBw6MiYmx48rPllu3br3zzjvKAGnzo08n
4vCfPXu2OBfIccG2ZLg4/7LjKspk165dSn9UztaVuku/8sorDns2jX2J3VUZ
r6J5gSDfs7nK6UIxtFGjRmV339aU79l4M3HUTJgw4fz583YvVeT5oUOHRIu0
UqVKdqnZ9kXr2LGjxPQ2d/bs2W7duimHnn6fXyJaL1++nMtSpWe4INqW77//
voXBnBYoq7dOnTri3FDXInUlmkCvvvqq5gIqn1Ai5O14NQeOl7MMV1unaowU
KlRInG9GR0fnpuVmo+Tk5H/961/NmzdXazA/C7BLsqkv8tJLL23evFnvJcqu
LVu2KNMfZbrdJmdLav4KpUuXXrFihV2KdIYMV2zbtq1y5cqmZ01ry6vLfIWU
KVPm+XuXDCclJaVLly6Zlk45XkJCQkTIyy4QuTJ69OjsHvXqrYXKj4ULFx46
dKhdZtrMLhFl7dq1s296q4oWLTpt2jSx/zt+uWwhTn5Hjhzp5eUlSnV3d8/x
sptn2muvvWbHOzucJ8MF0ZYWu4rp2aA7CyWpPQxira5fv94x5TmAOB9RFl8s
l7KAxYsX379/v+y6kFtvv/12do96tZUiUm7YsGFxcXFyF2Hr1q3q2aK9YrxZ
s2axsbFyl8sWO3furFatWm6WVFlj3t7eU6dOte+FWqfKcIVYRqv9Kmr7ZPz4
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
         "], "Byte", ColorSpace -> "RGB", 
         ImageSize -> {38.209191759112514`, Automatic}, Interleaving -> True],
        3 -> Image[CompressedData["
1:eJzt1EGOJUlahdEEJgzZArtgypBpIxbQLYoWk0KqRkLslhnLaArl6Hl6R7m9
Z2afx4tzpCpl1SDC7eZ/79//4T9+929//e3btz/97a//+t3v/+sff/nl9//9
z3/363/8y89/+vc//vzTv/7Tz//50x9/+uUf/vA3v/7P//mrb9/+99d//v/P
fwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFb6
djN1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7reTdMY8UnwfuZsgAT1XmMqdN63g3TWPFJ8H6mLMBEdR5j6rSed8M0VnwS
DMlP98USJSY+f4M6refdMI0VnwRD8tN9sUSJic/foE7reTdMY8UnwZD8dF8s
UWLi8w8hTP/Jf/6cCX93wzRWfBIMyU/3xRIlVj9/4s//S7/iU5ibw5Q0VnwS
DMlP98USJfY8fMpvufKLbmtWAhPTWPFJMCQ/3RdLlNj55K+Z8Hevv316Gis+
CYbkp/tiiRL7H/vVEv7ulVcvSmPFJ8GQ/HRfLFGieubXSfi75967NI0VnwRD
8tN9sUSJ9oFfIeHvRl+6IY0VnwRD8tN9sUSJOzztvRP+7qmDWpvGik+CIfnp
vliixH0e9a4J39bL9w6vyk93bqf2uNtz3i/h25p4+fCc/HTndmqPez7knRK+
rYmXD8+pS/Ap3TlDf8XP2dI2mKDuCtxCXUS4qu4K3EJdRLiq7grcQl1EuKru
CtxCXUSYrK4UrFU3DCarKwVr1Q2DyepKwVp1w2CyulKwVt0wmKyuFKxVNwwm
qysFa9UNg8nqSsFadcNgsrpSsFbdMJisrhSsVTcMJqsrBWvVDYPJ6krBWnXD
YLK6UrBW3TCYrK4UrFU3DCarKwVr1Q2DyepKwVp1w2CyulKwVt0wmKyuFKxV
NwwmqysFa9UNg8nqSsFadcNgsrpSsFbdMJisrhSsVTcMJqsrBWvVDYPJ6krB
WnXDYLK6UrBW3TCYrK4UrFU3DCarKwW3UBcRrDEMqPsKRhsG1H0Fow0D6r6C
0YYBdV/BaMOAuq9gtGFA3Vcw2jCg7isYbRhQ9xWMNgyo+wpGGwbUfQWjDQPq
voLRhgF1XynV1wd8JvViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSB
AfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSB
AfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi8T7q
W4bfVrcEbqSuI/y2uiVwI3Ud4bfVLYFbqIsIA+q6QKnuHzyprg7sVncOJqhr
BDvUPYP56lbBEnWxYK26YTBH3STYqi4cPK9uD2Tq8sGYujFwC3UR4bfVLYHb
qUsJf1FdDripuppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO1c2Am6qrCefq
ZsBN1dWEc3Uz4KbqasK5uhlwU3U14VzdDLipuppwrm4G3FRdTThXNwNuqq4m
nKubATdVVxPO1c2Am6qrCefqZsBN1dWEc3Uz4KbqasK5uhlwU3U14VzdDLip
uppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO1c2Am6qrCefqZsBN1dWEc3Uz
4KbqasK5uhlwU3U14VzdDLipuppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO
1c2AO6p7CR+p+wH3UjcSLqmLArG6gvCMujcQqGsHr6o7BJvUVYOZ6j7BcnXJ
YIm6WLBK3S1YqK4XfFF19fms6suFL6quPp9VfbnwRdXVx/oBA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFolRfH3wydWX5
6uoGwCdTV5avrm4AfDJ1Zfnq6gbAJ1NXlq+ubgB8MnVl+erqBsAnU1eWr65u
AHwydWX56uoGwCdTVxYuqYsCd1F3ES6piwLL1SWDmeo+wXJ1yWCmuk+wXF0y
mKnuEyxXlwxmqvsEy9Ulg5nqPsFydclgprpPsFxdMpip7hMsV5cMZqr7BMvV
JYOZ6j7BcnXJYKa6T7BcXTKYqe4TLFeXDGaq+wTL1SWDmeo+wXJ1yWCmuk+w
XF0ymKnuEyxXlwxmqvsEy9Ulg5nqPsFydclgprpPsFxdMpip7hMsV5cMZqr7
BMvVJYOZ6j7BcnXJ4JK6KHAXdRfhkroocBd1F+GSuihwF3UX4ZK6KHAXdRfh
kroocBd1F+GSuihwF3UX4ZK6KHAXdRfhkroocBd1F+GSW131ojLCFavPG6a4
1VUvKiNcsfq8YYpbXfWiMsJEq1sAH7vVuS5qGUy0ugXwsVud66KWwUSrWwAf
u9W5LmoZTLS6BfCxW53ropbBRKtbAB+71bkuatlS7/GKe7rnva3+KvjYrc71
uRK13uktd3PPe1v9VfCxW53rcyVq5S96myR/tODEJqS0+qvgY7c61+dK1Arf
9WZJ/mjSWU1OafVXwcduda7PlaiVvO4tk/zRC6e08G9k9VfBx251rs+VqLX5
jW+c5I9Gsx11z6+Cj93qXJ8rUWvnM987yR89ke2Qe34VfOxW5/pciVp7HvsV
kvzR09kuTWn1V8HHbnWuz5WotfrJXyfJH72Y7aKUVn8VvJm5s/C6dY96p5Se
MyXb6Smt/ip4M3Nn4XUrnjbxR31qr+ewIqXVXwVvZu4svK7O41ydyhz3TGn1
V8GbmTsLr6vzOFenckkdErBDvTRHdR7n6lQuqUMCdqiX5qjO41ydyiV1SMAO
9dIc1Xmcq1O5pA4J2KFemqM6j3N1KpfUIQE71EtzVOdxrk7lkjokYId6aY7q
PM7VqVxShwTsUC/NUZ3HuTqVS+qQgB3qpTmq8zhXp3JJHRKwQ700R3Ue5+pU
LqlDAnaol+aozuNcncoldUjADvXSHNV5nKtTuaQOCdihXpqjOo9zdSqX1CEB
O9RLc1Tnca5O5ZI6JGCHemmO6jzO1alcUocE7FAvzVGdx7k6lUvqkIAd6qU5
qvM4V6dySR0SsEO9NEd1HufqVC6pQwJ2qJfmqM7jXJ3KJXVIwA710hzVeZyr
U7mkDgnYoV6aozqPc3Uql9QhATvUS3NU53GuTuWSOiRgh3ppjuo8ztWpXFKH
BOxQL81Rnce5OpVL6pCAHeqlOarzOFenckkdErBDvTRHdR7n6lQuqUMCdqiX
5qjO41ydyiV1SMAO9dIc1Xmcq1O5pA4J2KFemqM6j3N1KpfUIQE71EtzVOdx
rk7lkjokYId6aY7qPM7VqVxShwTsUC/NUZ3HuTqVS+qQgB3qpTmq8zhXp3JJ
HRKwQ700R3Ue5+pULqlDAnaol+aozuNcncoldUjADvXSHNV5nKtTuaQOCdih
XpqjOo9zdSqX1CEBO9RLc1Tnca5O5ZI6JGCHemmO6jzO1alcUocE7FAvzVGd
x7k6lUvqkIAd6qU5qvM4V6dySR0SsEO9NEd1HufqVC6pQwJ2qJfmqM7jXJ3K
JXVIwA710hzVeZyrU7mkDgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgDf0f2ng6
8A==
         "], "Byte", ColorSpace -> "RGB", ImageSize -> {40., Automatic}, 
         Interleaving -> True], 4 -> Image[CompressedData["
1:eJzt3UFuJEuSGNCAtNFCizoCdQMuBa2opXbECNpzBuoZaNMiegYYzI5HyCPw
CHkEHiGPwCPkDUreP0csdjIrmUxGhJm5vwf8Rv9G/d8Z7hFu4Rbm7v/lH/7v
3/3jf5im6Z//U/uPv/v7f/3vf/nL3//b//zR/uZ//fmf/88//flP//t//Plf
/vRPf/rLf/2H/9j+x//c/ux/a3/99b//BAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgMHs9/uXP2w2m6ffe3x8vCOZ1ilnuqx16KFnWxdH32UA
39WGstvb24lOtc4VrYButLf06GGV+bVujb6zAGa23W5//PgRPb4yj9aVrUOj
7ymARby+vsoKdqB1YuvK6LsJYEH7/f7h4SF6uOV6rft8qAIG8fz8LCtYTuuy
1nHR9w7Aqna7naxgIa2zWpdF3zUAAWQFq5D9A9hsNtGDMee0Doq+RwBS2O12
PmMl1DpF9g/gPVteZGOTCoDfseVFEjapADjv+fk5eqgenTJ1gEv4jBXFhyqA
L/EZa30+VAFcwWqsNVlRBfAdT09P0QN5/1ojR/czQHnqLhalpgJgLuoulqCm
AmB2bVy9ubmJHuD70RpTqAJYgkLBuSj/A1iUgPV9QhXACtpIe39/Hz3kV9Wa
TqgCWI2lWFdojRbdbwDDEbC+RKgCiCJgXUioAoglYH1KqALIQMA6Q6gCSEJZ
++8oVgdIRcD6SKgCSKiNzLZmetOaQqgCyMnmtwe2qwVI7uXlJTpWxNtut9H9
AMAnNptNdLiI1C4/ugcAuMiwNe3q1QEKGbNEUBEgQDmjVVyorAAoaqgPWD5X
AdQ1yElY7TKjWxqA6+33++7zge0Cfa4CqG673UbHk2VZXQXQh7u7u+iQspR2
adGtC8A8Xl9fo6PKUtqlRbcuALN5enqKDizzaxcV3a4AzKm/Hdrtsg7Qpefn
5+gIM6d2OdEtCsAiupletQuJbksAltLN9MrECqBvHUyvTKwAutfB9MrECmAE
pfdiaj8+uv0AWMPj42N0zLle+/HR7QfAGkpvbWHzCoBxFN050K6AAEMpWmuh
vgJgKPv9PjryXMNWSwCjKXessAOCAQZULhkoDQgwoHKVgaoBAcZ0e3sbHYIu
1X5qdGsBEKPQMmGLggGGtd1uo6PQpdpPjW4tAGIU+nTloxXAyErscGsnW4DB
ldiCyYZLAIN7enqKjkWfaz8yup0AiLTZbKJj0efaj4xuJwAivby8RMeiz7Uf
Gd1OAEQqURaoIBCA6Fj0uegWAiBedCz6XHQLARAv+W6BdggE4Gf6JVcWWwHw
U7QCoALRCoD8RCsA8hOtAMgv+ZmMzmEE4Gf6jW1taQvAT9EKgApEKwDyE60A
yE+0AiA/0QqA/EQrAPITrQDIb7vdRkekc9rPi24hAOK9vLxER6Rz2s+LbiEA
4olWAOQnWgGQn2gFQH6iFQD5iVYA5CdaAZCfaAVAfqIVAPnt9/voiHRO+3nR
LQRACtER6ZzotgEgi+iIdE502wCQRXREOie6bQDIIjoinRPdNgBkER2Rzolu
GwCyiI5I50S3DQBZREekc6LbBoAsoiPSOdFtA0AW0RHpnOi2ASCLHz9+RAel
09oPi24bALK4u7uLjkuntR8W3TYAZCFaAZCfaAVAfqIVAPmJVgDkJ1oBkJ9o
BUB+ohUA+YlWAOQnWgGQn2gFQH4PDw/Rcem0x8fH6LYBIIunp6fouHRa+2HR
bQNAFqIVAPmJVgDkJ1oB2ex2u5d39vt99C8inmhFZm2Yej9qtUEs+hcxm0Pn
bjabx8fHu7u729vbT4eFm5ub9icfHh7a+CCKjUa0IoPDwNU6vQ1EbThqg9Kn
d0gb3NqfbANdG+4MXFW0943WX/f395d08SXav6fdM9vt1g3QPdGKKG14aYNM
G2pmHLjaMNgGQ1OwVFpHPz8/t47+8ePHLB39O6332/+RsNUr0YqVHcauNrAs
ev+0gbENj8auQOt09Emt69t0O7oBmJloxWraABKyGt0r98ralDkkSB25vb1t
/R7dGMxGtGIFbdC45Bv60toQ2gbS6Mbo1uvr6+Pj49Lpvq+6ubkRs/ogWrGo
NlDM9VlqLm04bYNqG1qj26YfbdacYTJ1RntZkhusTrRiIW1wyDCfOqMNsEaw
b2pvI2l3xv6o9bi3lLq22230HXSajE1dbUBI/qb9XhtsZYqukHDWfIk2s95s
NtGNxzXau2X07XOal96i2lCQ7cvFJXzduFzROPVee0VRdVOOaMVc2uNfKCl0
kph1Xv7s7uXaO5UETi2iFbNoD37FKdVJvsh/tNvtqr+KnOQcvUJEK76vPfLR
98v82uBsT4yff0yZ057ZOgtZwSpEK76jg+zfeW2gHnkoK/oV8qvabNqbSX6i
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
09Q=
         "], "Byte", ColorSpace -> "RGB", ImageSize -> {38., Automatic}, 
         Interleaving -> True], 5 -> Image[CompressedData["
1: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
d4TE4nK5uJsFRJdMJhVcsq6hEiHCRfzDhw/ckRCRwWDAbmlwr4GBAe5UlVRF
RUU4HM4kMufn5/v7+9FodHd3Ny9bpx4fH1dXV3MHQFB6vR6nBsC9QqEQd6oy
ePPmTZqYUI3yer1ms1mn09Gkkv5ps9lqa2tfvHjx0NvC8Xh8Y2NjZ2dndHT0
yZMn3N9baNPT07nlMijfyMgId57yaG5uphHUtWisrKxUVVWl2fBQpVJ5PJ57
38imodTU1BT9FaWlpfTTaCqqsEXphdDT01OwNAeFiEQict+cJGuVlZU07Jmd
nR0bG6OLu9/vz/B80u7u7jQhpVmkILtSywtdKSRLe5Cpra0tMQ8RFllJSYnP
55ufn78WzN3d3aGhIayqyg4NXKXJ+WQySfP6wIWurq6BgYG+vr7UdkZnZ2fS
fAbIGk0JbTZb0Y6yskZVq7e3d29vj2Z/k5OTTqezaN8BzIvq6moJsj0Wi7lc
rrs+g9VqbWtro9pFDbq5uYkj6oRFM6M//vhDdnvO8EptFqHX61Htc6fVat1u
d2tr6/Pnz+kXND188uQJXQWovDQ1NdEoaHFxMce32tfX1zN8uYNalj4P/WGq
oj09Panz6VZXV6empvB2tlBobEwdEPeHQTR0UaARrMPhePPmDV1eaVj7oMSm
+XvWb6JpNBq6MNHfTv3CYDDY7fbXr1/j8BRBHBwc0HWkrq4ur+kGkDepukH1
x2Kx0CSOipjH46GpXFdXF6XuzfewPn/+nPfZOtVPEVYgQ0oymfz69avX68UN
ZJCRVCmjCjY8PLy9vZ1K5sK949/b28vbT+Ga8/NzanoabuGtN5AXGlNVVlbW
19cXLnU/fPjA3UHhdouLi4FAQNl7OwDcRGM2ul7TfLO7u5umnO3t7S0tLc3N
zVSs8Nqj4Gi4NTY2Rs2n1+u58whACjROo4s1d8+DnGxtbXk8HkwSoRjgjFdl
mJ6edjqdWP8AykYZPjExwd3bID+CwSAeI4KydXZ2cvczyJt4PN7b24tdU0CR
TCbTysoKdyeDPEsmk6Ojo3iGCApDMwjuvgWFknqGWF1djc0fQAHUavXCwgJ3
r4KCOz4+7uvrs9vtuCEPsjY0NMTdmUA6kUikubkZS7ZApgKBAHcfAqnt7e3R
dYqGW9zZB/AANptN2LMsodA2Nzdpkpj5/sMAjKxWaywW4+40wO/4+Pjjx4/Y
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
         "], "Byte", ColorSpace -> "RGB", 
         ImageSize -> {29.545454545454547`, Automatic}, Interleaving -> True],
        6 -> Image[CompressedData["
1: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
inv+/HkJHklTwVLHgfuIBcB7uNqjvWu92Wy22WzUeq+qqmpsbHz27FlmVDNd
fKmjurOzU7KypU1zF4YAVIy43GvM1taWeq/1FHBqq1dWVtbV1QUCgYGBAerR
bGxsUG9UCQs90BlGG2fUV69ecZcliLSwsKD8u83UMqfLd0VFhdfr9fl84XA4
Ho9PT08nEol0Os1dhLlQY4O78ASgsyse32tJJBLh/k5dR5dvunY/evSImuUv
Xrx4+/bt/Py8Sm8mR6NR7uIUA8N0tWRoaIj7C3XHaDSWl5f7/f7Xr19TTBR+
+c4L9YjLysq4C1iMiYkJ7uIEMdrb22X9qlCiqW9LnQj6wXTJbre73W6Px9PR
0TEyMjI+Pk6Xcu5ikNHo6KisJVwyVGXCRzVA6a2urlJVyvc9efjwISV6c3Nz
cXGROoZLl75+/aqlq/mt9vb2suOi1Y7OYNzFCcWiNpt8r+J6vd7t7W3uQ1QE
bYzYuXN5yyX3oC9QOGqtxeNxOcbhW63W5ubmGwcA69PKyopmVjZ8+vQpd3FC
UUKhkPBvBV0OPn36xH1kiqOZmc+pcYjbeqoWDofFfh/8fj914bkPS4lWV1e1
MWLnzuWJnbs4oXDj4+NCvgYOh6Ourq6zs/P8/Jz7mJRLGxPrZYyMjHAXJxSo
mBY+XbnKysoCgUAwGMRdOylmZmY0M42h1Wrd3d3lLlEoRF5DdEwmU0NDQ0dH
x+jo6NTUVCKRwGSqebm4uKitrZUviSXW19fHXaJQiMnJSSn1S5f1R48eTU9P
c++v6kWjUc3czDebzWjjqdH8/HzumqWGXH9///LyMveeaoesw6JKrLe3l7s4
IW/n5+c/+xJWV1dTS2B1dZV7H7VGMwN071xe7j9//sxdopC34eHhq/VIjfm2
tjZMhy6fw8PDe/fuceVUOLyLp0bpdDrzDjg15l+8eIHljEtAS1MT22y29fV1
7hKFvKVSKTpjj42Nce+IjlCBc+dVGIzRBZBibm5OMzfzqVe4trbGXaIAKtDR
0cGdV2Hw7B5Aivn5ec0M1bPb7Zubm9wlCqB06+vryp+nVLr+/n7uEgVQuouL
i7GxMc307isrK5UwGzmA8j1//pw7r8K8e/eOuzgB1EEzb+Deu3cPr1oDSHF6
eup2u7kjKwZGdQJINDAwwJ1XMajDwl2WAOrw4cMHbTzFs9lssq4PDqAZBwcH
mpkzHyN2ACR6+/atNi73TqeTuywBVKOlpYU7sgLQuQvTLgFIdG2uA/Xq6uri
LksAdZBjURIWdrsdM+gCSLG8vOxyubgjK0Y4HOYuTgB1mJmZ0cY0O36/n7ss
AVTD6/VyR1YAi8WC2dgAJGpqauKOrBi4pwcg0dzcnDbeu/d4PNxlCaAalZWV
3JEVwGg04sE9gEQ9PT3ckRUD9/QAJOrs7OTOqxjUVfn06RN3cQKoQCQS4c6r
ME1NTdzFCaAC375908wreC6X6/T0lLtEAVSAesTceRXDYDB8+fKFuzgBVKCh
oYE7r2IYjcbFxUXu4gRQus3NTW2My82IRCLcJQqgdPF4nDupImG1a4BbjY2N
cSdVJJfLxV2iAEo3OjrKnVSRqGv//v177kIFULRgMMidVMEwmR5AbkNDQ9wx
FcxgMAwPD3OXK4Bytbe3c8dUPMyiCfAzBwcHDoeDO6OyqK6upqPjLmAAxZmb
m+NOp4ww1QbAjz5+/MgdTRlZrdalpSXuMgZQllgsxh1NeTU1NaXTae5iBlCQ
6elpbSx9lQPexwG4amVlRUuD8G/U0dHBXcwACrK7u2uxWLhzKS86QNzMB8i6
uLhwu93cuZTd4OAgd0kDKMi9e/e4Qyk7q9W6t7fHXdIASlFTU8MdylLAe/cA
WQ8ePOBOZClg3myALM1Mn5VbRUUFd0kDKIXP5+NOZClgSj2ALJ2knuAtPICM
uro67jiWyMzMDHdhAyiCTvr1JBqNchc2gCLoJ/VWq3V0dHRlZYW7yAGY6Sf1
GRaLJRgMYtAO6FljYyN3EEvKaDSazWYM2gE96+jo4A5i6VDDJpFI7OzscJc6
AKfz83Nq8Wr+fds7lwvcY2odgKzBwUHNT69BqV9bW+MuaQAF0XwHv7y8HDfx
AK6Kx+MavtzToY2OjnKXMYCyaH6GjWfPnnGXMYDijI2NaXhCLY/Hw13AAEoU
Doe50ykXk8mE1+4AbuT3+7kDKpeenh7u0gVQoo2NDboscgdUFg0NDdylC6BQ
/f393AGVhdVq3dra4i5dAIVqbm7mzqgsBgYGuIsWQLnq6+u5MypeVVUVd7kC
KNfS0pLRaOSOqWDUyD86OuIuWgDlam1t5Y6pYAaD4ePHj9zlCqBcyWTS4/Fw
J1WwtrY27nIFUDRq51OrmDupIrnd7ouLC+5yBVC0eDyupeBTI392dpa7UAGU
joLv8/kcDgd3ZMXAID0Aiba2tlwuF3dkBaAzGHdZAqjG1NSUBt7LM5vN29vb
3GUJoBrU2rfb7dzBLVYsFuMuSAA1ociofeKdcDjMXYoAKuP1ermDWxQMyAfI
19LSks1m485u4err69PpNHcpAqjM0NAQd3YL53K5kskkdxECqMzXr1/v3r3L
Hd8COZ3O8/Nz7iIEUJ/t7e2ysjLuBBeCUo9xuQCF+fLlixpn3LLb7aenp9yF
B6BWapxg0+FwHB4ecpccgFodHx/X1dVx5zg/Xq+Xu9gA1G1zc1NdS+cEAgHu
MgNQvcePH3NHOQ/Pnz/nLjAAdRseHlbXGF2MyAUoxs7OjupexIvH49zFBqBW
6XTa5/Nxhzg/drv9+PiYu+QA1KqlpYU7xHnD+rYABVPpGrhlZWUYmAdQgGg0
qsZReaSpqQmpB8jXxMSESiNP+vv7ucsPQGXevXun3sjfubzWcxchgJp0d3dz
p7ZYdMoKBoPcBQmgDpFIhDuyYhgMhpGREe7iBFABahtz51UYCn5LS0sqleIu
VABFa2ho4A6rYFjsEiA3LV3rs5qbmzFUD+BnXr9+zZ1RWTx+/BjT6AHcaGpq
ijugcikvL19cXOQuYADFOTg40NKq1tfY7faFhQXuMgZQnNraWu50yoiCPz8/
z13GAMoyMDDAHU15YYEMgGsmJye5cym7p0+fchczgIJMTExwh7IU2tvb8V4e
QIYGxuFLhAE8ABnNzc3ccSwdv9/PXd4A/NQ4ZVYxqEfDXeQAzPSW+rq6OnTw
Qef0lnqLxYIxe6BzbW1t3EEstd9//5271AE4jY6Ocqew1MbHx7lLHYCT3lr4
pKOjg7vUAXgkk0ldPbbLamxs5C57AB7Pnj3jzh8Pj8eD2/igQ7Ozs+patVYg
Sv3JyQl3DQCU2vPnz7nDx6aiooK7+AEY6PCBXZbb7cb8WqBD7e3t3OFj4/f7
MYE26JCer/UDAwPcxQ/A4O7du9zhY/Px40fu4gcotenpaVUvZ1kMh8Oxs7PD
XQMApZNOp8fGxux2O3f42GBuDdCVaDRaVlbGHTtOBoNhdnaWux4ASiQYDOp2
WE5WXV0ddz0AlAhFnjtw/Ewm0/T0NHdVAJRCX18fd+AUwW63Y3AO6AGu8lc1
Nja+ffuWuvaLi4vb29vclQMg2MXFhX5mvc6LwWAwGo02m62hoWF9fZ27ogDE
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
AAAAAAAAAAAAAOX4/1BvDnI=
         "], "Byte", ColorSpace -> "RGB", 
         ImageSize -> {26.839999999999996`, Automatic}, Interleaving -> True],
        7 -> Image[CompressedData["
1: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
1eZdXl4eHR3lOW+eJtTU1CQSCUGfMgBoC1WDFy9eOBwOmVUot6N4yRvJor6+
HvUZANJmZ2flV6FgMJjtdqZSKSOc30B9BoC09fV1RaYMzVZzc3MOW9vQ0CB/
UyXzer2ozwCwubnJUpxJX19ftltL/efS0lKWrZXJYrFgeAMAyByw8QWfz5fD
up+NjY1cGyxNU1MT+s8ABtff328ymbiqUH19fQ639BqhPttsNvSfAYxsYGCA
twoNDg7msNltbW28my0B6jOAkU1OTvLWn0gkcn5+nsOWd3V1MW65HBQfTBYE
YExUGCsrKxmLz9zcXM4bb4T6bLVaMTcFgDExroLtcrnyKc7Hx8fv37/n2nhp
LBYLlkYFMKBgMMhVdjo6Oi4vL/PZ+PHx8b6+Pq7tl8bpdE5NTe3u7ir1oQOA
+u3t7XEN2KisrNzf38+/CYFAgGX7ZbJarfQ1Go/H8w8XAGjC3NxcSUkJS8Hp
6upSqhWLi4u6n4LDYrGEw2GlIgYA6sd1Z7SCxZmEQiGz2czSEJk6OjoUDBoA
qNnMzAz1yuTXmc7OTmUbYoT+8yMBcQMAdZqammKZ9k1EkZmbm7Pb7fLbIhN9
k46NjSkeOgBQIY/HI7/IKHta487s7Kzu6zNpa2sTET0AUJXu7m755UVQcSbb
29tGWEKlvb1dUAABQCWomsnvbYo7d3p5efn582fGmx+lwflnAN3r6emRXFhe
vnwprjmJRGJtba28vFxyo+Srra2l9m5sbNDPnZ2deDx+dnaWDkIsFjs9PU0/
np6GNP00esLJycldrFZWVr74hUJHP1dXV+nnwcHBxcVF+vH0I2Rra4t+Xl9f
fzFSfXNz8+739Hvd3Nwc3UrPE0Jbcvf69HZ7e3tXV1e0zenH6c/plekn/VMy
maQH05u0vr5OP3d3d2nL6U3T70IPbt1KPyf9h2Tjb7Tl9GTa5vTj9IT0+wJo
SzAYlHw3Smtr69TUlOj9paysTGajuNDXEB37lJaWOhyOwltVt1wuV/p3ery4
uJh+oadVVFTQg/RPVX+z2Wx0oEG/WK1W+kmvRo+kH6efTqfT7XbTL/SH6UfS
r0OxLSoqon+9ex16hB7/4nd6X9etklu0JelXfvz4Mf2kP6cXoe2hx2n77X+j
f6I/pAfpF3o8/ZOeTM+k56ffnR68ezK9mv0r6Re/e1r6memWktevX/t8Psxe
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
iZs+zm635zx1/5+3SzYbdjg0HVmnLwgadimrTBweHkr4LN6+fcvdUDCoFy9e
CM3tnMf5HxwchEIh0ZNJqlD61D1Oe2bih6vMK8LlcuW8AgVAPiSkdz7zJo2P
j4vePFVpbm7O54jDgORMTosuNMj38uVL0YlN+vr6ct7CVCol7vS4qlAnLZ9A
GZmEoT4YCw3yCV2t/k6eCwadnZ3pe41Ct9tNlRkXoXLW09Mj+jMymUy4nRBk
onyTcGD49OnTPBesPz091eukHLTXl5SU5HwvPJBEIjE9PS3hG5zeYmVlhbu5
YAjUW8t5Hv7Mmc3mubm5PDd1b29vdnb22bNnordWsvLycoydy9/FxUU0Gs1z
XtwMeb3e3BZxA8hKd3e3hHyuqalR6q7kmZkZ3axRaLVaOzo6wuGwIpGBP2/v
JXQ4HKI/OEX6GwAPo8ogofNMVWhkZETBLqLo+RbkqKqqwsSVIshJD/r4cDsn
iHN5eSlnmRK3263sllPXRdPz2tlstnyGGsID4vH44OCgnM+xt7eXu7mgWx8/
ftRuGmt3jcLOzs6cly2AH1pdXaWjkurqagkfpd1u524u6NPKyoqE03SPbi92
5zms7pvOz88fP34sYfsVVFpaijl25Hj16pWED5QO4hoaGm5ubribC3ojelWg
O+KWbzs8PNTKhULakevr67EilTQbGxtFRUVyPtzx8XHu5oKuHBwcyKlsNptN
XPZSv0UTt6vU1tbOzMwICgJ8z9jYmJw5tSjJNzc3uZsLOnF1deV2uyXkLXUa
RV9AWV1dFb18cz5o23w+HyY4YjE3N6fUMpo/1N7ezt1c0AlpV7dp75CwJNDP
P/8spznZqqurm5iYEN18+J7j4+NAICDt4x4ZGeFuMWgeFWdpI9N+++03OY2S
M0owc06nc3JyUk7b4QHX19fScqOoqGh3d5e7xaBhV1dXcsZsPLqtUdIuh4VC
ITmN+iEK7+vXr7e3t+U0HH5odHRU2qfvcrni8Th3i0GTqFrKGRT66Pbu15aW
Fmk3wFI3ScLk1Q+jo5LKyspYLCanyZChZDIp8/Aqn3XcwMjkzPCcRtUylUrJ
XGmCDg0YLxTSF9/IyAgmzFGnYDAoc3E0zD4K2RobG5Mwz8ad7u5u+W2Uc0vC
F+hLobm5WX5jISuSl4Cn3Y27xaAZq6urMu/joJLFchZub2+vrKxMWjMf3c4r
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
AAAAAAD5/j9NV+e8
         "], "Byte", ColorSpace -> "RGB", ImageSize -> {36., Automatic}, 
         Interleaving -> True]}}, {{
       Hold[$CellContext`optThin$$], "Morphological", ""}, {
      "Morphological", "MedialAxis"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Manipulate`Place[2], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "The skeleton/thinning process can be applied to more interesting \
shapes.\n\nThere are two methods to choose from, which give slightly \
different results.\n\nFor example: all the points of the umbrella appear when \
using the MedialAxis option while some are missing from the Morphological \
option.\n\nOn the other hand, the Morphological option gives a smoother \
represntation of the \[Psi] symbol, without spikes leading out to the \
inflection points of the arms.", WindowTitle -> "Notes", WindowFloating -> 
            True]], Appearance -> None, BaseStyle -> {}, 
          DefaultBaseStyle -> {}]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {875., {217., 222.5370702005731}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`i$13673$$ = False, $CellContext`optThin$13674$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 4, $CellContext`optThin$$ = 
        "Morphological"}, "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13673$$, False], 
        Hold[$CellContext`optThin$$, $CellContext`optThin$13674$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      GraphicsRow[{$CellContext`synSkelImg = ColorNegate[
           Part[$CellContext`shapes, $CellContext`i$$]], 
         ImageAdjust[
          
          Thinning[$CellContext`synSkelImg, 
           Method -> $CellContext`optThin$$]]}, ImageSize -> 700], 
      "Specifications" :> {{{$CellContext`i$$, 4, "image"}, {
         1 -> Image[CompressedData["
1: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
R/uI7cVjvrp0K+qbTVRnMoKjfcQz6sdkdeNW1DebqM5kCkd715MayFh141bU
N5uozmQQR3vb80rITHXjVtQ3m6jOZBZHe8NTe8hAdeNW1DebqM5kHEf7kWdX
kWnqxq2obzZRnclEjvZdF7SRUerGrahvNlGdyVCO9nvXFJI56satqG82UZ3J
XI72G5d1kiHqxq2obzZRnclojvZrV9aSCerGrahvNlGdyXSO9jcXN5Nc3bgV
9c0mqjO5AUf7q+vLSatu3Ir6ZhPVmdyDo30zn9dTN25FfbOJ6kxuw9GqilKp
G7eivtlEdSbcRl1VrlY3bkV9s4nqTLiNuqpcrW7civpmE9WZcBt1Vbla3bgV
9c0mqjPhNuqqcrW6cSvqm01UZ8Jt1FXlanXjVtQ3m6jOhNuoq8rV6satqG82
UZ0Jd1K3lUvVdVtR32yiOhMOVxecdXV3VtQ3m6jOhPPVHWdRXZwV9c0mqjPh
JdQ1Z0XdmhX1zSaqM+El1DVnRd2aFfXNJqoz4VXUTefT6sqsqG82UZ0JL6Qu
O59T92VRfbZx6kB4LXXf+YS6LKeRIy+iqjqfVTflQHLkRSRV57PqmpxJjryI
66vOZ9UdOZYceREXV53PqgtyMjnyCq7sOQvqghxOjryCy3rOgrod55Mjr+Ca
nrOgrsZLkCOv4IKes6DuxauQI6/g2T1nQV2KFyJHXsFTe86CuhGvRY4c73kl
Z03diJcjR872pIazrG7EK5Ijp3pGt/miuhQvSo5H2h4rfF09i9clx/PszRS2
qGfx0uR4mI2Bwi71LF6dHE+yK03YqJ4Fe16G+kfwsy1pwkb1JvDIn2ZLoLBL
PQh+IsfDfD1Q2KVeAz+T42G2zBO+rp4Cv5DjYXaNFL6i3gEP5HiYjVOFNfUI
+C05HmbvYOGz6gXwHXI8zPbZwsfV9ef75HiYZ4wXPqLuPj8kx5M8ab/wrrr7
vEWOJ3neiuENdfF5hxxP8tQtw3fVred9cjzJsxcNv1FXng+R40ku2DX8Td13
PkqOJ7lm3fBnj8OtyPEkl22cF1c3nc+R40muXDovq645nybHk1y8d15Q3XFW
yPEk16+el1IXnEVyPEmyfV5E3W7gJ/VLwLHqagM/qx8DzlT3GvhF/R5woLrU
wIP6SeA0daOBB/WTwGnqRgMP6ieB09SNBh7UTwKnqRsNPKifBE5TNxp4UD8J
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
AAAAAAAAAAAAAAAAeIr/B81I67U=
            "], "Byte", ColorSpace -> "RGB", ImageSize -> {48., Automatic}, 
            Interleaving -> True], 2 -> Image[CompressedData["
1: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
1XXR9Hbx4sWwsDB1wylnFq6R4ffv369evbrd9wHkHZkyJCAgoFWrViEhIbb8
x0yxLP5v+fLlg4ODRYNTfFOhQoXnHxHoDDGuhKeSAyVLllywYIF+9yQ+Lz09
fc2aNaJhrBajxzIqSycW85NPPnHYounq8ePHw4cPN18618jwmzdvKpOlANll
nh4ibNu0afPPf/7z1q1bv2XkzJtvvmnLfy9atOigQYNWrVoVHR197dq1pKQk
ZUKkuxmOHj36008/LVq0KDw8XLR1neSpr2obtXPnzjdu3JBy5IpPjYULF4pP
OvOq7LuY/v7+P/zwg5Sl04/Yl9T7Ol0jw8URV6pUKftu+jzL/J47y10E6p8p
DdHczNvjYObVKr+pWLFiZGTkmTNnMu1a27dvt/pS4qvtKZGWlnbhwoWvvvpK
fFj4+fk9X48DVqB6Gu7h4TFz5kx7H47ZlpCQID4B1asPSnm5uUtIXcAqVaq4
0mNuzO3atUsJPdcYW3jixAl3d3c77eDQJg4Kn2d8fX09PT2z+ktDZLhSpAiK
li1brly5Mjk5WXPX2rFjh9VXe+mll0Qy52C/vXz58vz582vWrOnINaaO0Kha
terevXtzd+TZkzhVqV27tkmreyq7C6j836ZNm165ckX2YulI5F6lSpXEYsou
xA4OHz5sx50cQsGCBRs0aNC+ffsxY8YsXrx4y5YtO3fuPHXqlGipnj59WnwV
61wcdKL9+cUXX/zf//1fixYtQkJCnP8Oa5WXl1ePHj327Nljedfatm2b1Zeq
X79+bvbe1NTUdevWiWa5I5M8LCzs0qVLuSlbD/fv33/vvfcKFChgyvWDAMRH
s3g12Quku3Pnzo0ePVp2FXawf/9+O+3a1qnnvPmfMf9X89NhpxqB8Lznz9mL
FSsmkmTs2LHR0dHiAM/u+ATRlI2NjV21apWI9Bo1apjnucN6CbJaTPN3F2cQ
PXv2PHLkiC0LJVqqVsMklxmu2r17d8eOHdX1Zt/9J5/ZzTVt27Z15hEamzZt
qlixorIGbB+yYj5UQ+zGDx48kL0cDuLIK9H6WbBggb12dVt2FZ3+2JHMc6lo
0aKdO3f+17/+FR8fb68tIvargwcPfvDBB+rAA5NZL6WshRUNPNH2PnbsmO0L
ItaJ5qBcc+JsxV7r7beMHvhGjRrZfSWoH2FDhgyRNTWf7a5fvy5y2JSdkYfq
Av7xj3/MCy1wFyNO5+2+z1sgdqoiRYoEBgZWrlxZZFSvXr369evXv39/kYTV
qlWrUqVK6dKlCxcu7JzzRajEUrz66qtfffWVrmMSHj9+vG3btm7duvn4+Ehc
WLEtXn/99WyltyIhIUGdRC4r4nPBvistLS1t0aJF5qM1ck/Jt7ffftu+peon
NTX1k08+sf06l7KAeaQLxfXMnz/fLjv58+fd6j+JA1k0DCIiIlasWHHgwIFL
ly4lJiamZzCvRPwoDsBff/31woUL4tR48eLF4eHhL7/8skiwfM+N91B+dEDU
q1f8lR+9vb27d+++d+9eR07XdubMmeHDh6ttWmWp9etdMX/lWrVqbdiwIWdl
29IO79Kli33XlUJ8fAwdOlQJsRx3Rpn36YmNrkedulqzZk3JkiVN/9sX9PyG
Vv6pdevWeacLxcV89NFH2dqxLezt5vuJr69vw4YNx44dK0I7N/0MItXFueGm
TZvER8ALL7ygjuhwWC+x+hZ+fn4DBw6MiYmx48rPllu3br3zzjvKAGnzo08n
4vCfPXu2OBfIccG2ZLg4/7LjKspk165dSn9UztaVuku/8sorDns2jX2J3VUZ
r6J5gSDfs7nK6UIxtFGjRmV339aU79l4M3HUTJgw4fz583YvVeT5oUOHRIu0
UqVKdqnZ9kXr2LGjxPQ2d/bs2W7duimHnn6fXyJaL1++nMtSpWe4INqW77//
voXBnBYoq7dOnTri3FDXInUlmkCvvvqq5gIqn1Ai5O14NQeOl7MMV1unaowU
KlRInG9GR0fnpuVmo+Tk5H/961/NmzdXazA/C7BLsqkv8tJLL23evFnvJcqu
LVu2KNMfZbrdJmdLav4KpUuXXrFihV2KdIYMV2zbtq1y5cqmZ01ry6vLfIWU
KVPm+XuXDCclJaVLly6Zlk45XkJCQkTIyy4QuTJ69OjsHvXqrYXKj4ULFx46
dKhdZtrMLhFl7dq1s296q4oWLTpt2jSx/zt+uWwhTn5Hjhzp5eUlSnV3d8/x
sptn2muvvWbHOzucJ8MF0ZYWu4rp2aA7CyWpPQxira5fv94x5TmAOB9RFl8s
l7KAxYsX379/v+y6kFtvv/12do96tZUiUm7YsGFxcXFyF2Hr1q3q2aK9YrxZ
s2axsbFyl8sWO3furFatWm6WVFlj3t7eU6dOte+FWqfKcIVYRqv9Kmr7ZPz4
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
            "], "Byte", ColorSpace -> "RGB", 
            ImageSize -> {38.209191759112514`, Automatic}, Interleaving -> 
            True], 3 -> Image[CompressedData["
1:eJzt1EGOJUlahdEEJgzZArtgypBpIxbQLYoWk0KqRkLslhnLaArl6Hl6R7m9
Z2afx4tzpCpl1SDC7eZ/79//4T9+929//e3btz/97a//+t3v/+sff/nl9//9
z3/363/8y89/+vc//vzTv/7Tz//50x9/+uUf/vA3v/7P//mrb9/+99d//v/P
fwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFb6
djN1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7reTdMY8UnwfuZsgAT1XmMqdN63g3TWPFJ8H6mLMBEdR5j6rSed8M0VnwS
DMlP98USJSY+f4M6refdMI0VnwRD8tN9sUSJic/foE7reTdMY8UnwZD8dF8s
UWLi8w8hTP/Jf/6cCX93wzRWfBIMyU/3xRIlVj9/4s//S7/iU5ibw5Q0VnwS
DMlP98USJfY8fMpvufKLbmtWAhPTWPFJMCQ/3RdLlNj55K+Z8Hevv316Gis+
CYbkp/tiiRL7H/vVEv7ulVcvSmPFJ8GQ/HRfLFGieubXSfi75967NI0VnwRD
8tN9sUSJ9oFfIeHvRl+6IY0VnwRD8tN9sUSJOzztvRP+7qmDWpvGik+CIfnp
vliixH0e9a4J39bL9w6vyk93bqf2uNtz3i/h25p4+fCc/HTndmqPez7knRK+
rYmXD8+pS/Ap3TlDf8XP2dI2mKDuCtxCXUS4qu4K3EJdRLiq7grcQl1EuKru
CtxCXUSYrK4UrFU3DCarKwVr1Q2DyepKwVp1w2CyulKwVt0wmKyuFKxVNwwm
qysFa9UNg8nqSsFadcNgsrpSsFbdMJisrhSsVTcMJqsrBWvVDYPJ6krBWnXD
YLK6UrBW3TCYrK4UrFU3DCarKwVr1Q2DyepKwVp1w2CyulKwVt0wmKyuFKxV
NwwmqysFa9UNg8nqSsFadcNgsrpSsFbdMJisrhSsVTcMJqsrBWvVDYPJ6krB
WnXDYLK6UrBW3TCYrK4UrFU3DCarKwW3UBcRrDEMqPsKRhsG1H0Fow0D6r6C
0YYBdV/BaMOAuq9gtGFA3Vcw2jCg7isYbRhQ9xWMNgyo+wpGGwbUfQWjDQPq
voLRhgF1XynV1wd8JvViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSB
AfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSB
AfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi8T7q
W4bfVrcEbqSuI/y2uiVwI3Ud4bfVLYFbqIsIA+q6QKnuHzyprg7sVncOJqhr
BDvUPYP56lbBEnWxYK26YTBH3STYqi4cPK9uD2Tq8sGYujFwC3UR4bfVLYHb
qUsJf1FdDripuppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO1c2Am6qrCefq
ZsBN1dWEc3Uz4KbqasK5uhlwU3U14VzdDLipuppwrm4G3FRdTThXNwNuqq4m
nKubATdVVxPO1c2Am6qrCefqZsBN1dWEc3Uz4KbqasK5uhlwU3U14VzdDLip
uppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO1c2Am6qrCefqZsBN1dWEc3Uz
4KbqasK5uhlwU3U14VzdDLipuppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO
1c2AO6p7CR+p+wH3UjcSLqmLArG6gvCMujcQqGsHr6o7BJvUVYOZ6j7BcnXJ
YIm6WLBK3S1YqK4XfFF19fms6suFL6quPp9VfbnwRdXVx/oBA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFolRfH3wydWX5
6uoGwCdTV5avrm4AfDJ1Zfnq6gbAJ1NXlq+ubgB8MnVl+erqBsAnU1eWr65u
AHwydWX56uoGwCdTVxYuqYsCd1F3ES6piwLL1SWDmeo+wXJ1yWCmuk+wXF0y
mKnuEyxXlwxmqvsEy9Ulg5nqPsFydclgprpPsFxdMpip7hMsV5cMZqr7BMvV
JYOZ6j7BcnXJYKa6T7BcXTKYqe4TLFeXDGaq+wTL1SWDmeo+wXJ1yWCmuk+w
XF0ymKnuEyxXlwxmqvsEy9Ulg5nqPsFydclgprpPsFxdMpip7hMsV5cMZqr7
BMvVJYOZ6j7BcnXJ4JK6KHAXdRfhkroocBd1F+GSuihwF3UX4ZK6KHAXdRfh
kroocBd1F+GSuihwF3UX4ZK6KHAXdRfhkroocBd1F+GSW131ojLCFavPG6a4
1VUvKiNcsfq8YYpbXfWiMsJEq1sAH7vVuS5qGUy0ugXwsVud66KWwUSrWwAf
u9W5LmoZTLS6BfCxW53ropbBRKtbAB+71bkuatlS7/GKe7rnva3+KvjYrc71
uRK13uktd3PPe1v9VfCxW53rcyVq5S96myR/tODEJqS0+qvgY7c61+dK1Arf
9WZJ/mjSWU1OafVXwcduda7PlaiVvO4tk/zRC6e08G9k9VfBx251rs+VqLX5
jW+c5I9Gsx11z6+Cj93qXJ8rUWvnM987yR89ke2Qe34VfOxW5/pciVp7HvsV
kvzR09kuTWn1V8HHbnWuz5WotfrJXyfJH72Y7aKUVn8VvJm5s/C6dY96p5Se
MyXb6Smt/ip4M3Nn4XUrnjbxR31qr+ewIqXVXwVvZu4svK7O41ydyhz3TGn1
V8GbmTsLr6vzOFenckkdErBDvTRHdR7n6lQuqUMCdqiX5qjO41ydyiV1SMAO
9dIc1Xmcq1O5pA4J2KFemqM6j3N1KpfUIQE71EtzVOdxrk7lkjokYId6aY7q
PM7VqVxShwTsUC/NUZ3HuTqVS+qQgB3qpTmq8zhXp3JJHRKwQ700R3Ue5+pU
LqlDAnaol+aozuNcncoldUjADvXSHNV5nKtTuaQOCdihXpqjOo9zdSqX1CEB
O9RLc1Tnca5O5ZI6JGCHemmO6jzO1alcUocE7FAvzVGdx7k6lUvqkIAd6qU5
qvM4V6dySR0SsEO9NEd1HufqVC6pQwJ2qJfmqM7jXJ3KJXVIwA710hzVeZyr
U7mkDgnYoV6aozqPc3Uql9QhATvUS3NU53GuTuWSOiRgh3ppjuo8ztWpXFKH
BOxQL81Rnce5OpVL6pCAHeqlOarzOFenckkdErBDvTRHdR7n6lQuqUMCdqiX
5qjO41ydyiV1SMAO9dIc1Xmcq1O5pA4J2KFemqM6j3N1KpfUIQE71EtzVOdx
rk7lkjokYId6aY7qPM7VqVxShwTsUC/NUZ3HuTqVS+qQgB3qpTmq8zhXp3JJ
HRKwQ700R3Ue5+pULqlDAnaol+aozuNcncoldUjADvXSHNV5nKtTuaQOCdih
XpqjOo9zdSqX1CEBO9RLc1Tnca5O5ZI6JGCHemmO6jzO1alcUocE7FAvzVGd
x7k6lUvqkIAd6qU5qvM4V6dySR0SsEO9NEd1HufqVC6pQwJ2qJfmqM7jXJ3K
JXVIwA710hzVeZyrU7mkDgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgDf0f2ng6
8A==
            "], "Byte", ColorSpace -> "RGB", ImageSize -> {40., Automatic}, 
            Interleaving -> True], 4 -> Image[CompressedData["
1:eJzt3UFuJEuSGNCAtNFCizoCdQMuBa2opXbECNpzBuoZaNMiegYYzI5HyCPw
CHkEHiGPwCPkDUreP0csdjIrmUxGhJm5vwf8Rv9G/d8Z7hFu4Rbm7v/lH/7v
3/3jf5im6Z//U/uPv/v7f/3vf/nL3//b//zR/uZ//fmf/88//flP//t//Plf
/vRPf/rLf/2H/9j+x//c/ux/a3/99b//BAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgMHs9/uXP2w2m6ffe3x8vCOZ1ilnuqx16KFnWxdH32UA
39WGstvb24lOtc4VrYButLf06GGV+bVujb6zAGa23W5//PgRPb4yj9aVrUOj
7ymARby+vsoKdqB1YuvK6LsJYEH7/f7h4SF6uOV6rft8qAIG8fz8LCtYTuuy
1nHR9w7Aqna7naxgIa2zWpdF3zUAAWQFq5D9A9hsNtGDMee0Doq+RwBS2O12
PmMl1DpF9g/gPVteZGOTCoDfseVFEjapADjv+fk5eqgenTJ1gEv4jBXFhyqA
L/EZa30+VAFcwWqsNVlRBfAdT09P0QN5/1ojR/czQHnqLhalpgJgLuoulqCm
AmB2bVy9ubmJHuD70RpTqAJYgkLBuSj/A1iUgPV9QhXACtpIe39/Hz3kV9Wa
TqgCWI2lWFdojRbdbwDDEbC+RKgCiCJgXUioAoglYH1KqALIQMA6Q6gCSEJZ
++8oVgdIRcD6SKgCSKiNzLZmetOaQqgCyMnmtwe2qwVI7uXlJTpWxNtut9H9
AMAnNptNdLiI1C4/ugcAuMiwNe3q1QEKGbNEUBEgQDmjVVyorAAoaqgPWD5X
AdQ1yElY7TKjWxqA6+33++7zge0Cfa4CqG673UbHk2VZXQXQh7u7u+iQspR2
adGtC8A8Xl9fo6PKUtqlRbcuALN5enqKDizzaxcV3a4AzKm/Hdrtsg7Qpefn
5+gIM6d2OdEtCsAiupletQuJbksAltLN9MrECqBvHUyvTKwAutfB9MrECmAE
pfdiaj8+uv0AWMPj42N0zLle+/HR7QfAGkpvbWHzCoBxFN050K6AAEMpWmuh
vgJgKPv9PjryXMNWSwCjKXessAOCAQZULhkoDQgwoHKVgaoBAcZ0e3sbHYIu
1X5qdGsBEKPQMmGLggGGtd1uo6PQpdpPjW4tAGIU+nTloxXAyErscGsnW4DB
ldiCyYZLAIN7enqKjkWfaz8yup0AiLTZbKJj0efaj4xuJwAivby8RMeiz7Uf
Gd1OAEQqURaoIBCA6Fj0uegWAiBedCz6XHQLARAv+W6BdggE4Gf6JVcWWwHw
U7QCoALRCoD8RCsA8hOtAMgv+ZmMzmEE4Gf6jW1taQvAT9EKgApEKwDyE60A
yE+0AiA/0QqA/EQrAPITrQDIb7vdRkekc9rPi24hAOK9vLxER6Rz2s+LbiEA
4olWAOQnWgGQn2gFQH6iFQD5iVYA5CdaAZCfaAVAfqIVAPnt9/voiHRO+3nR
LQRACtER6ZzotgEgi+iIdE502wCQRXREOie6bQDIIjoinRPdNgBkER2Rzolu
GwCyiI5I50S3DQBZREekc6LbBoAsoiPSOdFtA0AW0RHpnOi2ASCLHz9+RAel
09oPi24bALK4u7uLjkuntR8W3TYAZCFaAZCfaAVAfqIVAPmJVgDkJ1oBkJ9o
BUB+ohUA+YlWAOQnWgGQn2gFQH4PDw/Rcem0x8fH6LYBIIunp6fouHRa+2HR
bQNAFqIVAPmJVgDkJ1oB2ex2u5d39vt99C8inmhFZm2Yej9qtUEs+hcxm0Pn
bjabx8fHu7u729vbT4eFm5ub9icfHh7a+CCKjUa0IoPDwNU6vQ1EbThqg9Kn
d0gb3NqfbANdG+4MXFW0943WX/f395d08SXav6fdM9vt1g3QPdGKKG14aYNM
G2pmHLjaMNgGQ1OwVFpHPz8/t47+8ePHLB39O6332/+RsNUr0YqVHcauNrAs
ev+0gbENj8auQOt09Emt69t0O7oBmJloxWraABKyGt0r98ralDkkSB25vb1t
/R7dGMxGtGIFbdC45Bv60toQ2gbS6Mbo1uvr6+Pj49Lpvq+6ubkRs/ogWrGo
NlDM9VlqLm04bYNqG1qj26YfbdacYTJ1RntZkhusTrRiIW1wyDCfOqMNsEaw
b2pvI2l3xv6o9bi3lLq22230HXSajE1dbUBI/qb9XhtsZYqukHDWfIk2s95s
NtGNxzXau2X07XOal96i2lCQ7cvFJXzduFzROPVee0VRdVOOaMVc2uNfKCl0
kph1Xv7s7uXaO5UETi2iFbNoD37FKdVJvsh/tNvtqr+KnOQcvUJEK76vPfLR
98v82uBsT4yff0yZ057ZOgtZwSpEK76jg+zfeW2gHnkoK/oV8qvabNqbSX6i
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
09Q=
            "], "Byte", ColorSpace -> "RGB", ImageSize -> {38., Automatic}, 
            Interleaving -> True], 5 -> Image[CompressedData["
1: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
d4TE4nK5uJsFRJdMJhVcsq6hEiHCRfzDhw/ckRCRwWDAbmlwr4GBAe5UlVRF
RUU4HM4kMufn5/v7+9FodHd3Ny9bpx4fH1dXV3MHQFB6vR6nBsC9QqEQd6oy
ePPmTZqYUI3yer1ms1mn09Gkkv5ps9lqa2tfvHjx0NvC8Xh8Y2NjZ2dndHT0
yZMn3N9baNPT07nlMijfyMgId57yaG5uphHUtWisrKxUVVWl2fBQpVJ5PJ57
38imodTU1BT9FaWlpfTTaCqqsEXphdDT01OwNAeFiEQict+cJGuVlZU07Jmd
nR0bG6OLu9/vz/B80u7u7jQhpVmkILtSywtdKSRLe5Cpra0tMQ8RFllJSYnP
55ufn78WzN3d3aGhIayqyg4NXKXJ+WQySfP6wIWurq6BgYG+vr7UdkZnZ2fS
fAbIGk0JbTZb0Y6yskZVq7e3d29vj2Z/k5OTTqezaN8BzIvq6moJsj0Wi7lc
rrs+g9VqbWtro9pFDbq5uYkj6oRFM6M//vhDdnvO8EptFqHX61Htc6fVat1u
d2tr6/Pnz+kXND188uQJXQWovDQ1NdEoaHFxMce32tfX1zN8uYNalj4P/WGq
oj09Panz6VZXV6empvB2tlBobEwdEPeHQTR0UaARrMPhePPmDV1eaVj7oMSm
+XvWb6JpNBq6MNHfTv3CYDDY7fbXr1/j8BRBHBwc0HWkrq4ur+kGkDepukH1
x2Kx0CSOipjH46GpXFdXF6XuzfewPn/+nPfZOtVPEVYgQ0oymfz69avX68UN
ZJCRVCmjCjY8PLy9vZ1K5sK949/b28vbT+Ga8/NzanoabuGtN5AXGlNVVlbW
19cXLnU/fPjA3UHhdouLi4FAQNl7OwDcRGM2ul7TfLO7u5umnO3t7S0tLc3N
zVSs8Nqj4Gi4NTY2Rs2n1+u58whACjROo4s1d8+DnGxtbXk8HkwSoRjgjFdl
mJ6edjqdWP8AykYZPjExwd3bID+CwSAeI4KydXZ2cvczyJt4PN7b24tdU0CR
TCbTysoKdyeDPEsmk6Ojo3iGCApDMwjuvgWFknqGWF1djc0fQAHUavXCwgJ3
r4KCOz4+7uvrs9vtuCEPsjY0NMTdmUA6kUikubkZS7ZApgKBAHcfAqnt7e3R
dYqGW9zZB/AANptN2LMsodA2Nzdpkpj5/sMAjKxWaywW4+40wO/4+Pjjx4/Y
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
            "], "Byte", ColorSpace -> "RGB", 
            ImageSize -> {29.545454545454547`, Automatic}, Interleaving -> 
            True], 6 -> Image[CompressedData["
1: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
inv+/HkJHklTwVLHgfuIBcB7uNqjvWu92Wy22WzUeq+qqmpsbHz27FlmVDNd
fKmjurOzU7KypU1zF4YAVIy43GvM1taWeq/1FHBqq1dWVtbV1QUCgYGBAerR
bGxsUG9UCQs90BlGG2fUV69ecZcliLSwsKD8u83UMqfLd0VFhdfr9fl84XA4
Ho9PT08nEol0Os1dhLlQY4O78ASgsyse32tJJBLh/k5dR5dvunY/evSImuUv
Xrx4+/bt/Py8Sm8mR6NR7uIUA8N0tWRoaIj7C3XHaDSWl5f7/f7Xr19TTBR+
+c4L9YjLysq4C1iMiYkJ7uIEMdrb22X9qlCiqW9LnQj6wXTJbre73W6Px9PR
0TEyMjI+Pk6Xcu5ikNHo6KisJVwyVGXCRzVA6a2urlJVyvc9efjwISV6c3Nz
cXGROoZLl75+/aqlq/mt9vb2suOi1Y7OYNzFCcWiNpt8r+J6vd7t7W3uQ1QE
bYzYuXN5yyX3oC9QOGqtxeNxOcbhW63W5ubmGwcA69PKyopmVjZ8+vQpd3FC
UUKhkPBvBV0OPn36xH1kiqOZmc+pcYjbeqoWDofFfh/8fj914bkPS4lWV1e1
MWLnzuWJnbs4oXDj4+NCvgYOh6Ourq6zs/P8/Jz7mJRLGxPrZYyMjHAXJxSo
mBY+XbnKysoCgUAwGMRdOylmZmY0M42h1Wrd3d3lLlEoRF5DdEwmU0NDQ0dH
x+jo6NTUVCKRwGSqebm4uKitrZUviSXW19fHXaJQiMnJSSn1S5f1R48eTU9P
c++v6kWjUc3czDebzWjjqdH8/HzumqWGXH9///LyMveeaoesw6JKrLe3l7s4
IW/n5+c/+xJWV1dTS2B1dZV7H7VGMwN071xe7j9//sxdopC34eHhq/VIjfm2
tjZMhy6fw8PDe/fuceVUOLyLp0bpdDrzDjg15l+8eIHljEtAS1MT22y29fV1
7hKFvKVSKTpjj42Nce+IjlCBc+dVGIzRBZBibm5OMzfzqVe4trbGXaIAKtDR
0cGdV2Hw7B5Aivn5ec0M1bPb7Zubm9wlCqB06+vryp+nVLr+/n7uEgVQuouL
i7GxMc307isrK5UwGzmA8j1//pw7r8K8e/eOuzgB1EEzb+Deu3cPr1oDSHF6
eup2u7kjKwZGdQJINDAwwJ1XMajDwl2WAOrw4cMHbTzFs9lssq4PDqAZBwcH
mpkzHyN2ACR6+/atNi73TqeTuywBVKOlpYU7sgLQuQvTLgFIdG2uA/Xq6uri
LksAdZBjURIWdrsdM+gCSLG8vOxyubgjK0Y4HOYuTgB1mJmZ0cY0O36/n7ss
AVTD6/VyR1YAi8WC2dgAJGpqauKOrBi4pwcg0dzcnDbeu/d4PNxlCaAalZWV
3JEVwGg04sE9gEQ9PT3ckRUD9/QAJOrs7OTOqxjUVfn06RN3cQKoQCQS4c6r
ME1NTdzFCaAC375908wreC6X6/T0lLtEAVSAesTceRXDYDB8+fKFuzgBVKCh
oYE7r2IYjcbFxUXu4gRQus3NTW2My82IRCLcJQqgdPF4nDupImG1a4BbjY2N
cSdVJJfLxV2iAEo3OjrKnVSRqGv//v177kIFULRgMMidVMEwmR5AbkNDQ9wx
FcxgMAwPD3OXK4Bytbe3c8dUPMyiCfAzBwcHDoeDO6OyqK6upqPjLmAAxZmb
m+NOp4ww1QbAjz5+/MgdTRlZrdalpSXuMgZQllgsxh1NeTU1NaXTae5iBlCQ
6elpbSx9lQPexwG4amVlRUuD8G/U0dHBXcwACrK7u2uxWLhzKS86QNzMB8i6
uLhwu93cuZTd4OAgd0kDKMi9e/e4Qyk7q9W6t7fHXdIASlFTU8MdylLAe/cA
WQ8ePOBOZClg3myALM1Mn5VbRUUFd0kDKIXP5+NOZClgSj2ALJ2knuAtPICM
uro67jiWyMzMDHdhAyiCTvr1JBqNchc2gCLoJ/VWq3V0dHRlZYW7yAGY6Sf1
GRaLJRgMYtAO6FljYyN3EEvKaDSazWYM2gE96+jo4A5i6VDDJpFI7OzscJc6
AKfz83Nq8Wr+fds7lwvcY2odgKzBwUHNT69BqV9bW+MuaQAF0XwHv7y8HDfx
AK6Kx+MavtzToY2OjnKXMYCyaH6GjWfPnnGXMYDijI2NaXhCLY/Hw13AAEoU
Doe50ykXk8mE1+4AbuT3+7kDKpeenh7u0gVQoo2NDboscgdUFg0NDdylC6BQ
/f393AGVhdVq3dra4i5dAIVqbm7mzqgsBgYGuIsWQLnq6+u5MypeVVUVd7kC
KNfS0pLRaOSOqWDUyD86OuIuWgDlam1t5Y6pYAaD4ePHj9zlCqBcyWTS4/Fw
J1WwtrY27nIFUDRq51OrmDupIrnd7ouLC+5yBVC0eDyupeBTI392dpa7UAGU
joLv8/kcDgd3ZMXAID0Aiba2tlwuF3dkBaAzGHdZAqjG1NSUBt7LM5vN29vb
3GUJoBrU2rfb7dzBLVYsFuMuSAA1ociofeKdcDjMXYoAKuP1ermDWxQMyAfI
19LSks1m485u4err69PpNHcpAqjM0NAQd3YL53K5kskkdxECqMzXr1/v3r3L
Hd8COZ3O8/Nz7iIEUJ/t7e2ysjLuBBeCUo9xuQCF+fLlixpn3LLb7aenp9yF
B6BWapxg0+FwHB4ecpccgFodHx/X1dVx5zg/Xq+Xu9gA1G1zc1NdS+cEAgHu
MgNQvcePH3NHOQ/Pnz/nLjAAdRseHlbXGF2MyAUoxs7OjupexIvH49zFBqBW
6XTa5/Nxhzg/drv9+PiYu+QA1KqlpYU7xHnD+rYABVPpGrhlZWUYmAdQgGg0
qsZReaSpqQmpB8jXxMSESiNP+vv7ucsPQGXevXun3sjfubzWcxchgJp0d3dz
p7ZYdMoKBoPcBQmgDpFIhDuyYhgMhpGREe7iBFABahtz51UYCn5LS0sqleIu
VABFa2ho4A6rYFjsEiA3LV3rs5qbmzFUD+BnXr9+zZ1RWTx+/BjT6AHcaGpq
ijugcikvL19cXOQuYADFOTg40NKq1tfY7faFhQXuMgZQnNraWu50yoiCPz8/
z13GAMoyMDDAHU15YYEMgGsmJye5cym7p0+fchczgIJMTExwh7IU2tvb8V4e
QIYGxuFLhAE8ABnNzc3ccSwdv9/PXd4A/NQ4ZVYxqEfDXeQAzPSW+rq6OnTw
Qef0lnqLxYIxe6BzbW1t3EEstd9//5271AE4jY6Ocqew1MbHx7lLHYCT3lr4
pKOjg7vUAXgkk0ldPbbLamxs5C57AB7Pnj3jzh8Pj8eD2/igQ7Ozs+patVYg
Sv3JyQl3DQCU2vPnz7nDx6aiooK7+AEY6PCBXZbb7cb8WqBD7e3t3OFj4/f7
MYE26JCer/UDAwPcxQ/A4O7du9zhY/Px40fu4gcotenpaVUvZ1kMh8Oxs7PD
XQMApZNOp8fGxux2O3f42GBuDdCVaDRaVlbGHTtOBoNhdnaWux4ASiQYDOp2
WE5WXV0ddz0AlAhFnjtw/Ewm0/T0NHdVAJRCX18fd+AUwW63Y3AO6AGu8lc1
Nja+ffuWuvaLi4vb29vclQMg2MXFhX5mvc6LwWAwGo02m62hoWF9fZ27ogDE
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
AAAAAAAAAAAAAOX4/1BvDnI=
            "], "Byte", ColorSpace -> "RGB", 
            ImageSize -> {26.839999999999996`, Automatic}, Interleaving -> 
            True], 7 -> Image[CompressedData["
1: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
1eZdXl4eHR3lOW+eJtTU1CQSCUGfMgBoC1WDFy9eOBwOmVUot6N4yRvJor6+
HvUZANJmZ2flV6FgMJjtdqZSKSOc30B9BoC09fV1RaYMzVZzc3MOW9vQ0CB/
UyXzer2ozwCwubnJUpxJX19ftltL/efS0lKWrZXJYrFgeAMAyByw8QWfz5fD
up+NjY1cGyxNU1MT+s8ABtff328ymbiqUH19fQ639BqhPttsNvSfAYxsYGCA
twoNDg7msNltbW28my0B6jOAkU1OTvLWn0gkcn5+nsOWd3V1MW65HBQfTBYE
YExUGCsrKxmLz9zcXM4bb4T6bLVaMTcFgDExroLtcrnyKc7Hx8fv37/n2nhp
LBYLlkYFMKBgMMhVdjo6Oi4vL/PZ+PHx8b6+Pq7tl8bpdE5NTe3u7ir1oQOA
+u3t7XEN2KisrNzf38+/CYFAgGX7ZbJarfQ1Go/H8w8XAGjC3NxcSUkJS8Hp
6upSqhWLi4u6n4LDYrGEw2GlIgYA6sd1Z7SCxZmEQiGz2czSEJk6OjoUDBoA
qNnMzAz1yuTXmc7OTmUbYoT+8yMBcQMAdZqammKZ9k1EkZmbm7Pb7fLbIhN9
k46NjSkeOgBQIY/HI7/IKHta487s7Kzu6zNpa2sTET0AUJXu7m755UVQcSbb
29tGWEKlvb1dUAABQCWomsnvbYo7d3p5efn582fGmx+lwflnAN3r6emRXFhe
vnwprjmJRGJtba28vFxyo+Srra2l9m5sbNDPnZ2deDx+dnaWDkIsFjs9PU0/
np6GNP00esLJycldrFZWVr74hUJHP1dXV+nnwcHBxcVF+vH0I2Rra4t+Xl9f
fzFSfXNz8+739Hvd3Nwc3UrPE0Jbcvf69HZ7e3tXV1e0zenH6c/plekn/VMy
maQH05u0vr5OP3d3d2nL6U3T70IPbt1KPyf9h2Tjb7Tl9GTa5vTj9IT0+wJo
SzAYlHw3Smtr69TUlOj9paysTGajuNDXEB37lJaWOhyOwltVt1wuV/p3ery4
uJh+oadVVFTQg/RPVX+z2Wx0oEG/WK1W+kmvRo+kH6efTqfT7XbTL/SH6UfS
r0OxLSoqon+9ex16hB7/4nd6X9etklu0JelXfvz4Mf2kP6cXoe2hx2n77X+j
f6I/pAfpF3o8/ZOeTM+k56ffnR68ezK9mv0r6Re/e1r6memWktevX/t8Psxe
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
iZs+zm635zx1/5+3SzYbdjg0HVmnLwgadimrTBweHkr4LN6+fcvdUDCoFy9e
CM3tnMf5HxwchEIh0ZNJqlD61D1Oe2bih6vMK8LlcuW8AgVAPiSkdz7zJo2P
j4vePFVpbm7O54jDgORMTosuNMj38uVL0YlN+vr6ct7CVCol7vS4qlAnLZ9A
GZmEoT4YCw3yCV2t/k6eCwadnZ3pe41Ct9tNlRkXoXLW09Mj+jMymUy4nRBk
onyTcGD49OnTPBesPz091eukHLTXl5SU5HwvPJBEIjE9PS3hG5zeYmVlhbu5
YAjUW8t5Hv7Mmc3mubm5PDd1b29vdnb22bNnordWsvLycoydy9/FxUU0Gs1z
XtwMeb3e3BZxA8hKd3e3hHyuqalR6q7kmZkZ3axRaLVaOzo6wuGwIpGBP2/v
JXQ4HKI/OEX6GwAPo8ogofNMVWhkZETBLqLo+RbkqKqqwsSVIshJD/r4cDsn
iHN5eSlnmRK3263sllPXRdPz2tlstnyGGsID4vH44OCgnM+xt7eXu7mgWx8/
ftRuGmt3jcLOzs6cly2AH1pdXaWjkurqagkfpd1u524u6NPKyoqE03SPbi92
5zms7pvOz88fP34sYfsVVFpaijl25Hj16pWED5QO4hoaGm5ubribC3ojelWg
O+KWbzs8PNTKhULakevr67EilTQbGxtFRUVyPtzx8XHu5oKuHBwcyKlsNptN
XPZSv0UTt6vU1tbOzMwICgJ8z9jYmJw5tSjJNzc3uZsLOnF1deV2uyXkLXUa
RV9AWV1dFb18cz5o23w+HyY4YjE3N6fUMpo/1N7ezt1c0AlpV7dp75CwJNDP
P/8spznZqqurm5iYEN18+J7j4+NAICDt4x4ZGeFuMWgeFWdpI9N+++03OY2S
M0owc06nc3JyUk7b4QHX19fScqOoqGh3d5e7xaBhV1dXcsZsPLqtUdIuh4VC
ITmN+iEK7+vXr7e3t+U0HH5odHRU2qfvcrni8Th3i0GTqFrKGRT66Pbu15aW
Fmk3wFI3ScLk1Q+jo5LKyspYLCanyZChZDIp8/Aqn3XcwMjkzPCcRtUylUrJ
XGmCDg0YLxTSF9/IyAgmzFGnYDAoc3E0zD4K2RobG5Mwz8ad7u5u+W2Uc0vC
F+hLobm5WX5jISuSl4Cn3Y27xaAZq6urMu/joJLFchZub2+vrKxMWjMf3c4r
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
AAAAAAD5/j9NV+e8
            "], "Byte", ColorSpace -> "RGB", ImageSize -> {36., Automatic}, 
            Interleaving -> True]}, ControlType -> PopupMenu, 
         ControlPlacement -> 
         1}, {{$CellContext`optThin$$, "Morphological", ""}, {
         "Morphological", "MedialAxis"}, ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Manipulate`Place[2], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "The skeleton/thinning process can be applied to more interesting \
shapes.\n\nThere are two methods to choose from, which give slightly \
different results.\n\nFor example: all the points of the umbrella appear when \
using the MedialAxis option while some are missing from the Morphological \
option.\n\nOn the other hand, the Morphological option gives a smoother \
represntation of the \[Psi] symbol, without spikes leading out to the \
inflection points of the arms.", WindowTitle -> "Notes", WindowFloating -> 
             True]], Appearance -> None, BaseStyle -> {}, 
           DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["The morphological skeleton reduces each white area to a single \
curve", Medium], 
        TrackedSymbols -> {$CellContext`i$$, $CellContext`optThin$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{933., {304.91754141980783`, 312.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`shapes = {
         Image[CompressedData["
1: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
R/uI7cVjvrp0K+qbTVRnMoKjfcQz6sdkdeNW1DebqM5kCkd715MayFh141bU
N5uozmQQR3vb80rITHXjVtQ3m6jOZBZHe8NTe8hAdeNW1DebqM5kHEf7kWdX
kWnqxq2obzZRnclEjvZdF7SRUerGrahvNlGdyVCO9nvXFJI56satqG82UZ3J
XI72G5d1kiHqxq2obzZRnclojvZrV9aSCerGrahvNlGdyXSO9jcXN5Nc3bgV
9c0mqjO5AUf7q+vLSatu3Ir6ZhPVmdyDo30zn9dTN25FfbOJ6kxuw9GqilKp
G7eivtlEdSbcRl1VrlY3bkV9s4nqTLiNuqpcrW7civpmE9WZcBt1Vbla3bgV
9c0mqjPhNuqqcrW6cSvqm01UZ8Jt1FXlanXjVtQ3m6jOhNuoq8rV6satqG82
UZ0Jd1K3lUvVdVtR32yiOhMOVxecdXV3VtQ3m6jOhPPVHWdRXZwV9c0mqjPh
JdQ1Z0XdmhX1zSaqM+El1DVnRd2aFfXNJqoz4VXUTefT6sqsqG82UZ0JL6Qu
O59T92VRfbZx6kB4LXXf+YS6LKeRIy+iqjqfVTflQHLkRSRV57PqmpxJjryI
66vOZ9UdOZYceREXV53PqgtyMjnyCq7sOQvqghxOjryCy3rOgrod55Mjr+Ca
nrOgrsZLkCOv4IKes6DuxauQI6/g2T1nQV2KFyJHXsFTe86CuhGvRY4c73kl
Z03diJcjR872pIazrG7EK5Ijp3pGt/miuhQvSo5H2h4rfF09i9clx/PszRS2
qGfx0uR4mI2Bwi71LF6dHE+yK03YqJ4Fe16G+kfwsy1pwkb1JvDIn2ZLoLBL
PQh+IsfDfD1Q2KVeAz+T42G2zBO+rp4Cv5DjYXaNFL6i3gEP5HiYjVOFNfUI
+C05HmbvYOGz6gXwHXI8zPbZwsfV9ef75HiYZ4wXPqLuPj8kx5M8ab/wrrr7
vEWOJ3neiuENdfF5hxxP8tQtw3fVred9cjzJsxcNv1FXng+R40ku2DX8Td13
PkqOJ7lm3fBnj8OtyPEkl22cF1c3nc+R40muXDovq645nybHk1y8d15Q3XFW
yPEk16+el1IXnEVyPEmyfV5E3W7gJ/VLwLHqagM/qx8DzlT3GvhF/R5woLrU
wIP6SeA0daOBB/WTwGnqRgMP6ieB09SNBh7UTwKnqRsNPKifBE5TNxp4UD8J
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
AAAAAAAAAAAAAAAAeIr/B81I67U=
          "], "Byte", ColorSpace -> "RGB", ImageSize -> {48., Automatic}, 
          Interleaving -> True], 
         Image[CompressedData["
1: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
1XXR9Hbx4sWwsDB1wylnFq6R4ffv369evbrd9wHkHZkyJCAgoFWrViEhIbb8
x0yxLP5v+fLlg4ODRYNTfFOhQoXnHxHoDDGuhKeSAyVLllywYIF+9yQ+Lz09
fc2aNaJhrBajxzIqSycW85NPPnHYounq8ePHw4cPN18618jwmzdvKpOlANll
nh4ibNu0afPPf/7z1q1bv2XkzJtvvmnLfy9atOigQYNWrVoVHR197dq1pKQk
ZUKkuxmOHj36008/LVq0KDw8XLR1neSpr2obtXPnzjdu3JBy5IpPjYULF4pP
OvOq7LuY/v7+P/zwg5Sl04/Yl9T7Ol0jw8URV6pUKftu+jzL/J47y10E6p8p
DdHczNvjYObVKr+pWLFiZGTkmTNnMu1a27dvt/pS4qvtKZGWlnbhwoWvvvpK
fFj4+fk9X48DVqB6Gu7h4TFz5kx7H47ZlpCQID4B1asPSnm5uUtIXcAqVaq4
0mNuzO3atUsJPdcYW3jixAl3d3c77eDQJg4Kn2d8fX09PT2z+ktDZLhSpAiK
li1brly5Mjk5WXPX2rFjh9VXe+mll0Qy52C/vXz58vz582vWrOnINaaO0Kha
terevXtzd+TZkzhVqV27tkmreyq7C6j836ZNm165ckX2YulI5F6lSpXEYsou
xA4OHz5sx50cQsGCBRs0aNC+ffsxY8YsXrx4y5YtO3fuPHXqlGipnj59WnwV
61wcdKL9+cUXX/zf//1fixYtQkJCnP8Oa5WXl1ePHj327Nljedfatm2b1Zeq
X79+bvbe1NTUdevWiWa5I5M8LCzs0qVLuSlbD/fv33/vvfcKFChgyvWDAMRH
s3g12Quku3Pnzo0ePVp2FXawf/9+O+3a1qnnvPmfMf9X89NhpxqB8Lznz9mL
FSsmkmTs2LHR0dHiAM/u+ATRlI2NjV21apWI9Bo1apjnucN6CbJaTPN3F2cQ
PXv2PHLkiC0LJVqqVsMklxmu2r17d8eOHdX1Zt/9J5/ZzTVt27Z15hEamzZt
qlixorIGbB+yYj5UQ+zGDx48kL0cDuLIK9H6WbBggb12dVt2FZ3+2JHMc6lo
0aKdO3f+17/+FR8fb68tIvargwcPfvDBB+rAA5NZL6WshRUNPNH2PnbsmO0L
ItaJ5qBcc+JsxV7r7beMHvhGjRrZfSWoH2FDhgyRNTWf7a5fvy5y2JSdkYfq
Av7xj3/MCy1wFyNO5+2+z1sgdqoiRYoEBgZWrlxZZFSvXr369evXv39/kYTV
qlWrUqVK6dKlCxcu7JzzRajEUrz66qtfffWVrmMSHj9+vG3btm7duvn4+Ehc
WLEtXn/99WyltyIhIUGdRC4r4nPBvistLS1t0aJF5qM1ck/Jt7ffftu+peon
NTX1k08+sf06l7KAeaQLxfXMnz/fLjv58+fd6j+JA1k0DCIiIlasWHHgwIFL
ly4lJiamZzCvRPwoDsBff/31woUL4tR48eLF4eHhL7/8skiwfM+N91B+dEDU
q1f8lR+9vb27d+++d+9eR07XdubMmeHDh6ttWmWp9etdMX/lWrVqbdiwIWdl
29IO79Kli33XlUJ8fAwdOlQJsRx3Rpn36YmNrkedulqzZk3JkiVN/9sX9PyG
Vv6pdevWeacLxcV89NFH2dqxLezt5vuJr69vw4YNx44dK0I7N/0MItXFueGm
TZvER8ALL7ygjuhwWC+x+hZ+fn4DBw6MiYmx48rPllu3br3zzjvKAGnzo08n
4vCfPXu2OBfIccG2ZLg4/7LjKspk165dSn9UztaVuku/8sorDns2jX2J3VUZ
r6J5gSDfs7nK6UIxtFGjRmV339aU79l4M3HUTJgw4fz583YvVeT5oUOHRIu0
UqVKdqnZ9kXr2LGjxPQ2d/bs2W7duimHnn6fXyJaL1++nMtSpWe4INqW77//
voXBnBYoq7dOnTri3FDXInUlmkCvvvqq5gIqn1Ai5O14NQeOl7MMV1unaowU
KlRInG9GR0fnpuVmo+Tk5H/961/NmzdXazA/C7BLsqkv8tJLL23evFnvJcqu
LVu2KNMfZbrdJmdLav4KpUuXXrFihV2KdIYMV2zbtq1y5cqmZ01ry6vLfIWU
KVPm+XuXDCclJaVLly6Zlk45XkJCQkTIyy4QuTJ69OjsHvXqrYXKj4ULFx46
dKhdZtrMLhFl7dq1s296q4oWLTpt2jSx/zt+uWwhTn5Hjhzp5eUlSnV3d8/x
sptn2muvvWbHOzucJ8MF0ZYWu4rp2aA7CyWpPQxira5fv94x5TmAOB9RFl8s
l7KAxYsX379/v+y6kFtvv/12do96tZUiUm7YsGFxcXFyF2Hr1q3q2aK9YrxZ
s2axsbFyl8sWO3furFatWm6WVFlj3t7eU6dOte+FWqfKcIVYRqv9Kmr7ZPz4
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
          "], "Byte", ColorSpace -> "RGB", 
          ImageSize -> {38.209191759112514`, Automatic}, Interleaving -> 
          True], 
         Image[CompressedData["
1:eJzt1EGOJUlahdEEJgzZArtgypBpIxbQLYoWk0KqRkLslhnLaArl6Hl6R7m9
Z2afx4tzpCpl1SDC7eZ/79//4T9+929//e3btz/97a//+t3v/+sff/nl9//9
z3/363/8y89/+vc//vzTv/7Tz//50x9/+uUf/vA3v/7P//mrb9/+99d//v/P
fwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFb6
djN1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7reTdMY8UnwfuZsgAT1XmMqdN63g3TWPFJ8H6mLMBEdR5j6rSed8M0VnwS
DMlP98USJSY+f4M6refdMI0VnwRD8tN9sUSJic/foE7reTdMY8UnwZD8dF8s
UWLi8w8hTP/Jf/6cCX93wzRWfBIMyU/3xRIlVj9/4s//S7/iU5ibw5Q0VnwS
DMlP98USJfY8fMpvufKLbmtWAhPTWPFJMCQ/3RdLlNj55K+Z8Hevv316Gis+
CYbkp/tiiRL7H/vVEv7ulVcvSmPFJ8GQ/HRfLFGieubXSfi75967NI0VnwRD
8tN9sUSJ9oFfIeHvRl+6IY0VnwRD8tN9sUSJOzztvRP+7qmDWpvGik+CIfnp
vliixH0e9a4J39bL9w6vyk93bqf2uNtz3i/h25p4+fCc/HTndmqPez7knRK+
rYmXD8+pS/Ap3TlDf8XP2dI2mKDuCtxCXUS4qu4K3EJdRLiq7grcQl1EuKru
CtxCXUSYrK4UrFU3DCarKwVr1Q2DyepKwVp1w2CyulKwVt0wmKyuFKxVNwwm
qysFa9UNg8nqSsFadcNgsrpSsFbdMJisrhSsVTcMJqsrBWvVDYPJ6krBWnXD
YLK6UrBW3TCYrK4UrFU3DCarKwVr1Q2DyepKwVp1w2CyulKwVt0wmKyuFKxV
NwwmqysFa9UNg8nqSsFadcNgsrpSsFbdMJisrhSsVTcMJqsrBWvVDYPJ6krB
WnXDYLK6UrBW3TCYrK4UrFU3DCarKwW3UBcRrDEMqPsKRhsG1H0Fow0D6r6C
0YYBdV/BaMOAuq9gtGFA3Vcw2jCg7isYbRhQ9xWMNgyo+wpGGwbUfQWjDQPq
voLRhgF1XynV1wd8JvViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSB
AfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSB
AfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi8T7q
W4bfVrcEbqSuI/y2uiVwI3Ud4bfVLYFbqIsIA+q6QKnuHzyprg7sVncOJqhr
BDvUPYP56lbBEnWxYK26YTBH3STYqi4cPK9uD2Tq8sGYujFwC3UR4bfVLYHb
qUsJf1FdDripuppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO1c2Am6qrCefq
ZsBN1dWEc3Uz4KbqasK5uhlwU3U14VzdDLipuppwrm4G3FRdTThXNwNuqq4m
nKubATdVVxPO1c2Am6qrCefqZsBN1dWEc3Uz4KbqasK5uhlwU3U14VzdDLip
uppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO1c2Am6qrCefqZsBN1dWEc3Uz
4KbqasK5uhlwU3U14VzdDLipuppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO
1c2AO6p7CR+p+wH3UjcSLqmLArG6gvCMujcQqGsHr6o7BJvUVYOZ6j7BcnXJ
YIm6WLBK3S1YqK4XfFF19fms6suFL6quPp9VfbnwRdXVx/oBA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFolRfH3wydWX5
6uoGwCdTV5avrm4AfDJ1Zfnq6gbAJ1NXlq+ubgB8MnVl+erqBsAnU1eWr65u
AHwydWX56uoGwCdTVxYuqYsCd1F3ES6piwLL1SWDmeo+wXJ1yWCmuk+wXF0y
mKnuEyxXlwxmqvsEy9Ulg5nqPsFydclgprpPsFxdMpip7hMsV5cMZqr7BMvV
JYOZ6j7BcnXJYKa6T7BcXTKYqe4TLFeXDGaq+wTL1SWDmeo+wXJ1yWCmuk+w
XF0ymKnuEyxXlwxmqvsEy9Ulg5nqPsFydclgprpPsFxdMpip7hMsV5cMZqr7
BMvVJYOZ6j7BcnXJ4JK6KHAXdRfhkroocBd1F+GSuihwF3UX4ZK6KHAXdRfh
kroocBd1F+GSuihwF3UX4ZK6KHAXdRfhkroocBd1F+GSW131ojLCFavPG6a4
1VUvKiNcsfq8YYpbXfWiMsJEq1sAH7vVuS5qGUy0ugXwsVud66KWwUSrWwAf
u9W5LmoZTLS6BfCxW53ropbBRKtbAB+71bkuatlS7/GKe7rnva3+KvjYrc71
uRK13uktd3PPe1v9VfCxW53rcyVq5S96myR/tODEJqS0+qvgY7c61+dK1Arf
9WZJ/mjSWU1OafVXwcduda7PlaiVvO4tk/zRC6e08G9k9VfBx251rs+VqLX5
jW+c5I9Gsx11z6+Cj93qXJ8rUWvnM987yR89ke2Qe34VfOxW5/pciVp7HvsV
kvzR09kuTWn1V8HHbnWuz5WotfrJXyfJH72Y7aKUVn8VvJm5s/C6dY96p5Se
MyXb6Smt/ip4M3Nn4XUrnjbxR31qr+ewIqXVXwVvZu4svK7O41ydyhz3TGn1
V8GbmTsLr6vzOFenckkdErBDvTRHdR7n6lQuqUMCdqiX5qjO41ydyiV1SMAO
9dIc1Xmcq1O5pA4J2KFemqM6j3N1KpfUIQE71EtzVOdxrk7lkjokYId6aY7q
PM7VqVxShwTsUC/NUZ3HuTqVS+qQgB3qpTmq8zhXp3JJHRKwQ700R3Ue5+pU
LqlDAnaol+aozuNcncoldUjADvXSHNV5nKtTuaQOCdihXpqjOo9zdSqX1CEB
O9RLc1Tnca5O5ZI6JGCHemmO6jzO1alcUocE7FAvzVGdx7k6lUvqkIAd6qU5
qvM4V6dySR0SsEO9NEd1HufqVC6pQwJ2qJfmqM7jXJ3KJXVIwA710hzVeZyr
U7mkDgnYoV6aozqPc3Uql9QhATvUS3NU53GuTuWSOiRgh3ppjuo8ztWpXFKH
BOxQL81Rnce5OpVL6pCAHeqlOarzOFenckkdErBDvTRHdR7n6lQuqUMCdqiX
5qjO41ydyiV1SMAO9dIc1Xmcq1O5pA4J2KFemqM6j3N1KpfUIQE71EtzVOdx
rk7lkjokYId6aY7qPM7VqVxShwTsUC/NUZ3HuTqVS+qQgB3qpTmq8zhXp3JJ
HRKwQ700R3Ue5+pULqlDAnaol+aozuNcncoldUjADvXSHNV5nKtTuaQOCdih
XpqjOo9zdSqX1CEBO9RLc1Tnca5O5ZI6JGCHemmO6jzO1alcUocE7FAvzVGd
x7k6lUvqkIAd6qU5qvM4V6dySR0SsEO9NEd1HufqVC6pQwJ2qJfmqM7jXJ3K
JXVIwA710hzVeZyrU7mkDgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgDf0f2ng6
8A==
          "], "Byte", ColorSpace -> "RGB", ImageSize -> {40., Automatic}, 
          Interleaving -> True], 
         Image[CompressedData["
1:eJzt3UFuJEuSGNCAtNFCizoCdQMuBa2opXbECNpzBuoZaNMiegYYzI5HyCPw
CHkEHiGPwCPkDUreP0csdjIrmUxGhJm5vwf8Rv9G/d8Z7hFu4Rbm7v/lH/7v
3/3jf5im6Z//U/uPv/v7f/3vf/nL3//b//zR/uZ//fmf/88//flP//t//Plf
/vRPf/rLf/2H/9j+x//c/ux/a3/99b//BAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgMHs9/uXP2w2m6ffe3x8vCOZ1ilnuqx16KFnWxdH32UA
39WGstvb24lOtc4VrYButLf06GGV+bVujb6zAGa23W5//PgRPb4yj9aVrUOj
7ymARby+vsoKdqB1YuvK6LsJYEH7/f7h4SF6uOV6rft8qAIG8fz8LCtYTuuy
1nHR9w7Aqna7naxgIa2zWpdF3zUAAWQFq5D9A9hsNtGDMee0Doq+RwBS2O12
PmMl1DpF9g/gPVteZGOTCoDfseVFEjapADjv+fk5eqgenTJ1gEv4jBXFhyqA
L/EZa30+VAFcwWqsNVlRBfAdT09P0QN5/1ojR/czQHnqLhalpgJgLuoulqCm
AmB2bVy9ubmJHuD70RpTqAJYgkLBuSj/A1iUgPV9QhXACtpIe39/Hz3kV9Wa
TqgCWI2lWFdojRbdbwDDEbC+RKgCiCJgXUioAoglYH1KqALIQMA6Q6gCSEJZ
++8oVgdIRcD6SKgCSKiNzLZmetOaQqgCyMnmtwe2qwVI7uXlJTpWxNtut9H9
AMAnNptNdLiI1C4/ugcAuMiwNe3q1QEKGbNEUBEgQDmjVVyorAAoaqgPWD5X
AdQ1yElY7TKjWxqA6+33++7zge0Cfa4CqG673UbHk2VZXQXQh7u7u+iQspR2
adGtC8A8Xl9fo6PKUtqlRbcuALN5enqKDizzaxcV3a4AzKm/Hdrtsg7Qpefn
5+gIM6d2OdEtCsAiupletQuJbksAltLN9MrECqBvHUyvTKwAutfB9MrECmAE
pfdiaj8+uv0AWMPj42N0zLle+/HR7QfAGkpvbWHzCoBxFN050K6AAEMpWmuh
vgJgKPv9PjryXMNWSwCjKXessAOCAQZULhkoDQgwoHKVgaoBAcZ0e3sbHYIu
1X5qdGsBEKPQMmGLggGGtd1uo6PQpdpPjW4tAGIU+nTloxXAyErscGsnW4DB
ldiCyYZLAIN7enqKjkWfaz8yup0AiLTZbKJj0efaj4xuJwAivby8RMeiz7Uf
Gd1OAEQqURaoIBCA6Fj0uegWAiBedCz6XHQLARAv+W6BdggE4Gf6JVcWWwHw
U7QCoALRCoD8RCsA8hOtAMgv+ZmMzmEE4Gf6jW1taQvAT9EKgApEKwDyE60A
yE+0AiA/0QqA/EQrAPITrQDIb7vdRkekc9rPi24hAOK9vLxER6Rz2s+LbiEA
4olWAOQnWgGQn2gFQH6iFQD5iVYA5CdaAZCfaAVAfqIVAPnt9/voiHRO+3nR
LQRACtER6ZzotgEgi+iIdE502wCQRXREOie6bQDIIjoinRPdNgBkER2Rzolu
GwCyiI5I50S3DQBZREekc6LbBoAsoiPSOdFtA0AW0RHpnOi2ASCLHz9+RAel
09oPi24bALK4u7uLjkuntR8W3TYAZCFaAZCfaAVAfqIVAPmJVgDkJ1oBkJ9o
BUB+ohUA+YlWAOQnWgGQn2gFQH4PDw/Rcem0x8fH6LYBIIunp6fouHRa+2HR
bQNAFqIVAPmJVgDkJ1oB2ex2u5d39vt99C8inmhFZm2Yej9qtUEs+hcxm0Pn
bjabx8fHu7u729vbT4eFm5ub9icfHh7a+CCKjUa0IoPDwNU6vQ1EbThqg9Kn
d0gb3NqfbANdG+4MXFW0943WX/f395d08SXav6fdM9vt1g3QPdGKKG14aYNM
G2pmHLjaMNgGQ1OwVFpHPz8/t47+8ePHLB39O6332/+RsNUr0YqVHcauNrAs
ev+0gbENj8auQOt09Emt69t0O7oBmJloxWraABKyGt0r98ralDkkSB25vb1t
/R7dGMxGtGIFbdC45Bv60toQ2gbS6Mbo1uvr6+Pj49Lpvq+6ubkRs/ogWrGo
NlDM9VlqLm04bYNqG1qj26YfbdacYTJ1RntZkhusTrRiIW1wyDCfOqMNsEaw
b2pvI2l3xv6o9bi3lLq22230HXSajE1dbUBI/qb9XhtsZYqukHDWfIk2s95s
NtGNxzXau2X07XOal96i2lCQ7cvFJXzduFzROPVee0VRdVOOaMVc2uNfKCl0
kph1Xv7s7uXaO5UETi2iFbNoD37FKdVJvsh/tNvtqr+KnOQcvUJEK76vPfLR
98v82uBsT4yff0yZ057ZOgtZwSpEK76jg+zfeW2gHnkoK/oV8qvabNqbSX6i
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
09Q=
          "], "Byte", ColorSpace -> "RGB", ImageSize -> {38., Automatic}, 
          Interleaving -> True], 
         Image[CompressedData["
1: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
d4TE4nK5uJsFRJdMJhVcsq6hEiHCRfzDhw/ckRCRwWDAbmlwr4GBAe5UlVRF
RUU4HM4kMufn5/v7+9FodHd3Ny9bpx4fH1dXV3MHQFB6vR6nBsC9QqEQd6oy
ePPmTZqYUI3yer1ms1mn09Gkkv5ps9lqa2tfvHjx0NvC8Xh8Y2NjZ2dndHT0
yZMn3N9baNPT07nlMijfyMgId57yaG5uphHUtWisrKxUVVWl2fBQpVJ5PJ57
38imodTU1BT9FaWlpfTTaCqqsEXphdDT01OwNAeFiEQict+cJGuVlZU07Jmd
nR0bG6OLu9/vz/B80u7u7jQhpVmkILtSywtdKSRLe5Cpra0tMQ8RFllJSYnP
55ufn78WzN3d3aGhIayqyg4NXKXJ+WQySfP6wIWurq6BgYG+vr7UdkZnZ2fS
fAbIGk0JbTZb0Y6yskZVq7e3d29vj2Z/k5OTTqezaN8BzIvq6moJsj0Wi7lc
rrs+g9VqbWtro9pFDbq5uYkj6oRFM6M//vhDdnvO8EptFqHX61Htc6fVat1u
d2tr6/Pnz+kXND188uQJXQWovDQ1NdEoaHFxMce32tfX1zN8uYNalj4P/WGq
oj09Panz6VZXV6empvB2tlBobEwdEPeHQTR0UaARrMPhePPmDV1eaVj7oMSm
+XvWb6JpNBq6MNHfTv3CYDDY7fbXr1/j8BRBHBwc0HWkrq4ur+kGkDepukH1
x2Kx0CSOipjH46GpXFdXF6XuzfewPn/+nPfZOtVPEVYgQ0oymfz69avX68UN
ZJCRVCmjCjY8PLy9vZ1K5sK949/b28vbT+Ga8/NzanoabuGtN5AXGlNVVlbW
19cXLnU/fPjA3UHhdouLi4FAQNl7OwDcRGM2ul7TfLO7u5umnO3t7S0tLc3N
zVSs8Nqj4Gi4NTY2Rs2n1+u58whACjROo4s1d8+DnGxtbXk8HkwSoRjgjFdl
mJ6edjqdWP8AykYZPjExwd3bID+CwSAeI4KydXZ2cvczyJt4PN7b24tdU0CR
TCbTysoKdyeDPEsmk6Ojo3iGCApDMwjuvgWFknqGWF1djc0fQAHUavXCwgJ3
r4KCOz4+7uvrs9vtuCEPsjY0NMTdmUA6kUikubkZS7ZApgKBAHcfAqnt7e3R
dYqGW9zZB/AANptN2LMsodA2Nzdpkpj5/sMAjKxWaywW4+40wO/4+Pjjx4/Y
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
          "], "Byte", ColorSpace -> "RGB", 
          ImageSize -> {29.545454545454547`, Automatic}, Interleaving -> 
          True], 
         Image[CompressedData["
1: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
inv+/HkJHklTwVLHgfuIBcB7uNqjvWu92Wy22WzUeq+qqmpsbHz27FlmVDNd
fKmjurOzU7KypU1zF4YAVIy43GvM1taWeq/1FHBqq1dWVtbV1QUCgYGBAerR
bGxsUG9UCQs90BlGG2fUV69ecZcliLSwsKD8u83UMqfLd0VFhdfr9fl84XA4
Ho9PT08nEol0Os1dhLlQY4O78ASgsyse32tJJBLh/k5dR5dvunY/evSImuUv
Xrx4+/bt/Py8Sm8mR6NR7uIUA8N0tWRoaIj7C3XHaDSWl5f7/f7Xr19TTBR+
+c4L9YjLysq4C1iMiYkJ7uIEMdrb22X9qlCiqW9LnQj6wXTJbre73W6Px9PR
0TEyMjI+Pk6Xcu5ikNHo6KisJVwyVGXCRzVA6a2urlJVyvc9efjwISV6c3Nz
cXGROoZLl75+/aqlq/mt9vb2suOi1Y7OYNzFCcWiNpt8r+J6vd7t7W3uQ1QE
bYzYuXN5yyX3oC9QOGqtxeNxOcbhW63W5ubmGwcA69PKyopmVjZ8+vQpd3FC
UUKhkPBvBV0OPn36xH1kiqOZmc+pcYjbeqoWDofFfh/8fj914bkPS4lWV1e1
MWLnzuWJnbs4oXDj4+NCvgYOh6Ourq6zs/P8/Jz7mJRLGxPrZYyMjHAXJxSo
mBY+XbnKysoCgUAwGMRdOylmZmY0M42h1Wrd3d3lLlEoRF5DdEwmU0NDQ0dH
x+jo6NTUVCKRwGSqebm4uKitrZUviSXW19fHXaJQiMnJSSn1S5f1R48eTU9P
c++v6kWjUc3czDebzWjjqdH8/HzumqWGXH9///LyMveeaoesw6JKrLe3l7s4
IW/n5+c/+xJWV1dTS2B1dZV7H7VGMwN071xe7j9//sxdopC34eHhq/VIjfm2
tjZMhy6fw8PDe/fuceVUOLyLp0bpdDrzDjg15l+8eIHljEtAS1MT22y29fV1
7hKFvKVSKTpjj42Nce+IjlCBc+dVGIzRBZBibm5OMzfzqVe4trbGXaIAKtDR
0cGdV2Hw7B5Aivn5ec0M1bPb7Zubm9wlCqB06+vryp+nVLr+/n7uEgVQuouL
i7GxMc307isrK5UwGzmA8j1//pw7r8K8e/eOuzgB1EEzb+Deu3cPr1oDSHF6
eup2u7kjKwZGdQJINDAwwJ1XMajDwl2WAOrw4cMHbTzFs9lssq4PDqAZBwcH
mpkzHyN2ACR6+/atNi73TqeTuywBVKOlpYU7sgLQuQvTLgFIdG2uA/Xq6uri
LksAdZBjURIWdrsdM+gCSLG8vOxyubgjK0Y4HOYuTgB1mJmZ0cY0O36/n7ss
AVTD6/VyR1YAi8WC2dgAJGpqauKOrBi4pwcg0dzcnDbeu/d4PNxlCaAalZWV
3JEVwGg04sE9gEQ9PT3ckRUD9/QAJOrs7OTOqxjUVfn06RN3cQKoQCQS4c6r
ME1NTdzFCaAC375908wreC6X6/T0lLtEAVSAesTceRXDYDB8+fKFuzgBVKCh
oYE7r2IYjcbFxUXu4gRQus3NTW2My82IRCLcJQqgdPF4nDupImG1a4BbjY2N
cSdVJJfLxV2iAEo3OjrKnVSRqGv//v177kIFULRgMMidVMEwmR5AbkNDQ9wx
FcxgMAwPD3OXK4Bytbe3c8dUPMyiCfAzBwcHDoeDO6OyqK6upqPjLmAAxZmb
m+NOp4ww1QbAjz5+/MgdTRlZrdalpSXuMgZQllgsxh1NeTU1NaXTae5iBlCQ
6elpbSx9lQPexwG4amVlRUuD8G/U0dHBXcwACrK7u2uxWLhzKS86QNzMB8i6
uLhwu93cuZTd4OAgd0kDKMi9e/e4Qyk7q9W6t7fHXdIASlFTU8MdylLAe/cA
WQ8ePOBOZClg3myALM1Mn5VbRUUFd0kDKIXP5+NOZClgSj2ALJ2knuAtPICM
uro67jiWyMzMDHdhAyiCTvr1JBqNchc2gCLoJ/VWq3V0dHRlZYW7yAGY6Sf1
GRaLJRgMYtAO6FljYyN3EEvKaDSazWYM2gE96+jo4A5i6VDDJpFI7OzscJc6
AKfz83Nq8Wr+fds7lwvcY2odgKzBwUHNT69BqV9bW+MuaQAF0XwHv7y8HDfx
AK6Kx+MavtzToY2OjnKXMYCyaH6GjWfPnnGXMYDijI2NaXhCLY/Hw13AAEoU
Doe50ykXk8mE1+4AbuT3+7kDKpeenh7u0gVQoo2NDboscgdUFg0NDdylC6BQ
/f393AGVhdVq3dra4i5dAIVqbm7mzqgsBgYGuIsWQLnq6+u5MypeVVUVd7kC
KNfS0pLRaOSOqWDUyD86OuIuWgDlam1t5Y6pYAaD4ePHj9zlCqBcyWTS4/Fw
J1WwtrY27nIFUDRq51OrmDupIrnd7ouLC+5yBVC0eDyupeBTI392dpa7UAGU
joLv8/kcDgd3ZMXAID0Aiba2tlwuF3dkBaAzGHdZAqjG1NSUBt7LM5vN29vb
3GUJoBrU2rfb7dzBLVYsFuMuSAA1ociofeKdcDjMXYoAKuP1ermDWxQMyAfI
19LSks1m485u4err69PpNHcpAqjM0NAQd3YL53K5kskkdxECqMzXr1/v3r3L
Hd8COZ3O8/Nz7iIEUJ/t7e2ysjLuBBeCUo9xuQCF+fLlixpn3LLb7aenp9yF
B6BWapxg0+FwHB4ecpccgFodHx/X1dVx5zg/Xq+Xu9gA1G1zc1NdS+cEAgHu
MgNQvcePH3NHOQ/Pnz/nLjAAdRseHlbXGF2MyAUoxs7OjupexIvH49zFBqBW
6XTa5/Nxhzg/drv9+PiYu+QA1KqlpYU7xHnD+rYABVPpGrhlZWUYmAdQgGg0
qsZReaSpqQmpB8jXxMSESiNP+vv7ucsPQGXevXun3sjfubzWcxchgJp0d3dz
p7ZYdMoKBoPcBQmgDpFIhDuyYhgMhpGREe7iBFABahtz51UYCn5LS0sqleIu
VABFa2ho4A6rYFjsEiA3LV3rs5qbmzFUD+BnXr9+zZ1RWTx+/BjT6AHcaGpq
ijugcikvL19cXOQuYADFOTg40NKq1tfY7faFhQXuMgZQnNraWu50yoiCPz8/
z13GAMoyMDDAHU15YYEMgGsmJye5cym7p0+fchczgIJMTExwh7IU2tvb8V4e
QIYGxuFLhAE8ABnNzc3ccSwdv9/PXd4A/NQ4ZVYxqEfDXeQAzPSW+rq6OnTw
Qef0lnqLxYIxe6BzbW1t3EEstd9//5271AE4jY6Ocqew1MbHx7lLHYCT3lr4
pKOjg7vUAXgkk0ldPbbLamxs5C57AB7Pnj3jzh8Pj8eD2/igQ7Ozs+patVYg
Sv3JyQl3DQCU2vPnz7nDx6aiooK7+AEY6PCBXZbb7cb8WqBD7e3t3OFj4/f7
MYE26JCer/UDAwPcxQ/A4O7du9zhY/Px40fu4gcotenpaVUvZ1kMh8Oxs7PD
XQMApZNOp8fGxux2O3f42GBuDdCVaDRaVlbGHTtOBoNhdnaWux4ASiQYDOp2
WE5WXV0ddz0AlAhFnjtw/Ewm0/T0NHdVAJRCX18fd+AUwW63Y3AO6AGu8lc1
Nja+ffuWuvaLi4vb29vclQMg2MXFhX5mvc6LwWAwGo02m62hoWF9fZ27ogDE
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
AAAAAAAAAAAAAOX4/1BvDnI=
          "], "Byte", ColorSpace -> "RGB", 
          ImageSize -> {26.839999999999996`, Automatic}, Interleaving -> 
          True], 
         Image[CompressedData["
1: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
1eZdXl4eHR3lOW+eJtTU1CQSCUGfMgBoC1WDFy9eOBwOmVUot6N4yRvJor6+
HvUZANJmZ2flV6FgMJjtdqZSKSOc30B9BoC09fV1RaYMzVZzc3MOW9vQ0CB/
UyXzer2ozwCwubnJUpxJX19ftltL/efS0lKWrZXJYrFgeAMAyByw8QWfz5fD
up+NjY1cGyxNU1MT+s8ABtff328ymbiqUH19fQ639BqhPttsNvSfAYxsYGCA
twoNDg7msNltbW28my0B6jOAkU1OTvLWn0gkcn5+nsOWd3V1MW65HBQfTBYE
YExUGCsrKxmLz9zcXM4bb4T6bLVaMTcFgDExroLtcrnyKc7Hx8fv37/n2nhp
LBYLlkYFMKBgMMhVdjo6Oi4vL/PZ+PHx8b6+Pq7tl8bpdE5NTe3u7ir1oQOA
+u3t7XEN2KisrNzf38+/CYFAgGX7ZbJarfQ1Go/H8w8XAGjC3NxcSUkJS8Hp
6upSqhWLi4u6n4LDYrGEw2GlIgYA6sd1Z7SCxZmEQiGz2czSEJk6OjoUDBoA
qNnMzAz1yuTXmc7OTmUbYoT+8yMBcQMAdZqammKZ9k1EkZmbm7Pb7fLbIhN9
k46NjSkeOgBQIY/HI7/IKHta487s7Kzu6zNpa2sTET0AUJXu7m755UVQcSbb
29tGWEKlvb1dUAABQCWomsnvbYo7d3p5efn582fGmx+lwflnAN3r6emRXFhe
vnwprjmJRGJtba28vFxyo+Srra2l9m5sbNDPnZ2deDx+dnaWDkIsFjs9PU0/
np6GNP00esLJycldrFZWVr74hUJHP1dXV+nnwcHBxcVF+vH0I2Rra4t+Xl9f
fzFSfXNz8+739Hvd3Nwc3UrPE0Jbcvf69HZ7e3tXV1e0zenH6c/plekn/VMy
maQH05u0vr5OP3d3d2nL6U3T70IPbt1KPyf9h2Tjb7Tl9GTa5vTj9IT0+wJo
SzAYlHw3Smtr69TUlOj9paysTGajuNDXEB37lJaWOhyOwltVt1wuV/p3ery4
uJh+oadVVFTQg/RPVX+z2Wx0oEG/WK1W+kmvRo+kH6efTqfT7XbTL/SH6UfS
r0OxLSoqon+9ex16hB7/4nd6X9etklu0JelXfvz4Mf2kP6cXoe2hx2n77X+j
f6I/pAfpF3o8/ZOeTM+k56ffnR68ezK9mv0r6Re/e1r6memWktevX/t8Psxe
AipHfRvJ/UzaUxYXF6lHR30koU0zSH2GfNTU1Hz69EloHgLkrKWlRebuQH0Y
6jnLaZoRzm9A/ujgkap0f39/LBaTk5kAmdja2pJ5NwoV5+npaWmtk39SHTSN
vtCj0ai0/AR4wPn5eX19vcz8p4Ips4FGmAIaFJfDesQAihsaGpKZ9g0NDZIX
M2UZ0Q060NTUdHh4KDNXAb7gdrulJTx11OU3sLe3V1oDQWfa2trS4/oA5Hv3
7p20MXVms3lpaUl+GyUfIIDOuFyuuyHfANJQ1hUWFspJcovFEgqF5Ldxamqq
ubmZa5UB0Iempib5qQsGR1knLcO5Joi4vr6emZmR1kzQq76+PtED9QHunJ6e
Srtxo7Ky8vj4mKulk5OTcpoJ+kZf9Fw5DEZTW1srJ6vtdvvd1A0sUJ9BERUV
FViEF+SQM2zDbDb7fD7elu7s7BQXF0toLOie3+/nTWYwAmlnnr1eL3db/1pC
hWWtLtAfOuq8vLzkzmjQs9nZWTn1yuVy3U1WyWh7e1vmGG/QN8l3v4LRvHr1
Sk4m9/X1hcNh7ub+ubCwYLVa5TQZdM9ms2GmOxDk5uZGzsnY58+fc7f1H66u
rrxer4Qmg0GUl5dfX19z5zXoDRXngYEBCQlM/dWpqan0YhnsNjc3XS6XhFaD
cUQiEe68Br3Z39+Xs1gqdZ7D4fDdEku8tre3i4qKJLQajMPtdt9fxgsgf6FQ
yGaziU7dsrIyyTPU/VBjY6PoVoPRYM10UNDFxYWc2TaGh4e52/olyRNcgxFY
LBastAJKGRkZkZC0jx8/VuGlk5qaGgltB6MpLy/nvTcWdKOjo0N0uppMpkAg
wN3Qb+jr68MUdiCCOhMetGVzc1PCPSklJSXcDf22rq4u1GcQobi4GPPaQZ5+
+eUXCbk6MjLC3dBv+/3331GfQZCGhgbuBAcNOz09raqqEp2l7e3tahu2kXZz
c+P3+1GfQRA6Mp2fn+dOc9Cq/f19CVk6PT3N3dBvW15eDgaDBQUFEoIAxvTs
2TPuNAet6urqEp2fdXV1Jycn3A39roODA9ERACOjLvTAwMDGxgZ3poPGrKys
2O120flJBZC7oQ+5uLjAEDsQCmehIQfRaFR0ZpaUlKh/oH5PT4/oOICRmUym
33//nTvNQWM8Ho/otPzw4QN3K38sEAiYzWahoQCYnJzkznTQjHA4LLooqXbM
8327u7sUCsxiB6JRd4g72UEzhoaGhGYjdZ7VMAP/D6VSqUQiIWf6ETAy6g6N
j49z5ztoQDKZfPbsmdBsLC4uHhsb08QUBDc3N4ODg0KjAfDods1NSjbufAcN
EL2uU1NT0+bmpiayMRKJ0NEERkGDBN3d3dz5Dmr35s0boSefqdapYfnXrJSW
looLCECazWY7PDzkTnZQtc7OTqFJWFNTw93ErPX29gqNCUDaixcvNHFcCSwo
N6qrq4VmYH9/P3crs3Z0dCRnhS+Ajx8/cuc7qFQoFBKae263W4Xz8GcCXWiQ
o7y8nDvZQaVE35ZCuaeS5V+zdXl5KeGGdwCTyeTz+VSyij2oRyKREFqfrVZr
NBrVbuL19fWJCw7AHSrR29vb3PkO6jIxMSF0umPqf3I3MS/UhcZ0SSBHa2sr
d76DulB9FppylZWV3E3M18zMDKbjAAkKCgqCwSB3voOKCF0K1mKxRKNR7iYq
QPTN7wBpbrf7/PycO99BLeiQSlyyWa3Wubk57iYq4OzsrLy8XFygAO5gmW9I
W15ettls4jLt559/1ujIja+dnJyUlZWJixVAmsPhWFxc5M534DczMyO0Pg8N
DXE3UUnxeFz0LCUAj24nq+FOdmA2NjYmdPCYxWJ58+YNdysVhuF2IIHJZFpf
X+dOduB0fn7u9XrF5ZheF1mjEo3hHCCa2+0+Pj7mTnZgc3V1JXQKzbq6Ou4m
irK0tCR00DgAwRqFBifu5mUqX/oYufE91IvGGlggFCWYJtazABEGBwfFHadT
agWDQc3N+ZyV09PTqqoqi8UiKIYAWKPQsISOfK6urj48PDTCrLZCwwgGhzUK
Dau9vV1cXrW0tCQSCe4mynBychIIBCoqKsQFE4zM6/Vqd3oxyM3x8bG4G+Lo
S//9+/fcTZStsbERSxaCCNPT09zZDVLt7e0VFhYKSicqU5FIhLuJDObm5lpb
W1GlQVk2m213d5c7u0Ge7e1tcenkcDiMfN15ZWWlpaUFA/BAQVjm21ACgYC4
XNL6nM+KWFtba2xsdDqdQu+gB4OgfWpnZ4c7qUGSgYEBcbnU19fH3T612N/f
p0Ld0dFRXFyM8dKQj7KyMu50BkmE3tlNnfODgwPuJqpOPB4fvEWF2nbLbDab
/ibu4wB9oCQZHR3lzmIQ7ubmprq6WlwW+Xy+yclJ7laqVyKRuL4VjUaDt8bG
xl69evUCuAntt+SvvLz85OSEO39BLDriFnes7XA4lpeXuZsIkAtKXZUPv2lp
aeEOEoh1fn5eVVUlKH/cbncsFuNuIkCOGhsbBe0aiqCvj83NTe4ggUDhcFhc
/lDlD4VCV1dX3K0EyAX1XlS+UE5TU9Pl5SV3nECU1dVVcec3qqurT09PcUcq
aFcwGFT5FVudrUwE983NzYk7ydbT08PdPoC8zM7OqnwwpNvt5g4SiOLz+cRl
zocPH7jbB5CXpaWlzc1NNa81Sd37V69eJZNJ7lCBwmKxWHd3t7jMQf8Z9KGz
s1PcbqIILPOtP1NTU8+fPxeXM8acGQn0Z2NjQ+X35tfX13MHCZTX1tYmLmf0
vawVGIrQPSV/FovF7/dzBwkU5vF4xOUM5qoFPXny5Im4nSV/TqcTdxTqjLjz
G/SFvrCwwN0+AMVEo1E1Xyh8hGW+dcftdgtKlcePH+/v73O3D0BJQid7zB99
fUxMTHAHCRTz8uVLQalClX97e5u7fQCKicfjkUjE6XQK2mUU4fF4DLLcpxGI
W9nKYrGsrq5ytw9AMefn5/Pz8yrvQpOpqSnuUIEyioqKBCVJc3Pzx48fudsH
oLD9/f2SkhJBe40iHA4HDl31QVx9fvz48dLSEnf7AJS3uLgoaK9Ryi+//MId
JFCAuPrs8Xiur6+52wegvEQiIfTG2/zZ7fa9vT3uOEHuqHiur68XFxcLypCm
pqZgMMjdSgBRVD5vEmZX0LR4PB6NRsWdSautraW34G4lgChv375V89SjZrMZ
HSStEzf+ubCwEBcpQMeurq5UPtauvLwc5xg1Tdz55+Li4t3dXe72AQgUCoVU
vkZhOBxeWFjAGhkaJa4+e73ei4sL7vYBiNXU1CRoD1IEfX18+PAB9VmjxNXn
wsLCw8ND7vYBiHV0dCTuJKEi2trauIMEORI6/hmXJ0D3YrFYa2urmi8UWq3W
5eVl7jhBLoSOf8b8z2AQ1BsRtB8pwuVycUcIciF0DOfMzAx3+wBkGBkZEbcf
KeLt27fcQYKstbe3C8qH4uLinZ0d7vYBSNLR0SFoV1IE5pPUInFLQlgsFqxZ
Ccaxubmp8jUKnz59yh0kyI7QVdWwvhUYirijUUVQlwmXhLTF5/OJywdcNQZD
SSaT1dXV4nao/Hm93rOzM+44QabErZ9COjo6uNsHIFU0GlXzWDvS39/PHSTI
1NDQkLhMaG1t5W4fgGwqX+bb4XDc3NxwBwkyQl/34jKhqamJu30Asl1cXFAN
FLdb5a+vr487SJCRjx8/ikuDsrIy7vYBMKACKG63yh99fczPz3MHCX5seXlZ
3ByJdKAXiUSurq64Wwkg1cHBgcon5aB9kztI8GMbGxvilvCmV56cnEwmk9yt
BJBtaWlJ0G6lCLPZ3Nvbyx0k+LGamhpxaRAIBLjbB5Cjk5OTnOcwp25JXV2d
uD0rf3TgrGy4QAShl5uHh4e52weQIzr6a29vz/nP5+bm1Hyh0GKxDAwMhMNh
BSP2sL29vUgk4vP5mpqaau7p6uqiB1dWVjBj/Nf6+/vF5QD6z6BdtGuYzeZ8
+hh+v1/czpU/ap2cSdqpDnR2dlqt1gc2xmQylZSU0NMwL8R9QheAKC4u5m4f
QI56enoe3Q5DyrlfR3+o8mW+qft6eXmpbNzuGxkZKS8vz2qTnE7n0NCQuE3S
FjrAEfPJ/4WO77jbB5CjioqKdBrns9IE/a3K1ygMhUIKBu3O/Pz8Tz/9lPNW
UddubGxMxIZpy9bWloKf9RdwDQI0inqVdx0/OjDP+aA7lUo9ffpUzTd90wHC
8fHx0dGRgtF78eKF3W7Pc8MsFgtK9MHBAX1VKfJBf40SOxqNcjcRIGujo6P3
i2pzc3Nur7OyshIIBKjUCNrF8kfN/OOPP2ZnZxWJWyQSoe8jpbaNDj0MXkDo
qzPbE0RZefXqFXcTAbJGR/3305gK7NraWs6v9vz5c3G7WP4Umb2f+roej8ds
Niu7bRR5qvl5bpumCV364dmzZ5h1FjTn999//yKTnU5nzjMLbW5uqvyOwjxn
MxscHBS3bVSiZY4DVJvXr1+LOz9WVVUl6AIEgDjfnPfA5/Pl/IK0F6j5LDSh
GptDuxYXF+vr60VvW0lJSc6R1zrKHHHnx2w22/n5OXcTAbLzzXFxhYWFe3t7
ub1gIpGgIiNoL1ME9fAPDg6yalR3d7ecLx2Hw2HYcdFra2tCr19gImjQlrdv
336v7Hg8npxfdmJiQuVrFNbU1GTYFqqWks/Y0JdjzpHXOnFDOEhjYyN3+wAy
dXNz88DlPCpKh4eHm5ubub24ypf5pjpA/fyHm7CyskLxefhmQBHoGzO3MzBa
F4lEent7xQWWDhXX19e5WwmQkYuLC+okP5DPlZWVS0tLub348fGxmsfakbq6
uu9tfDKZDAaDjNvf3d2d66eqYaenpwMDA0IDiyEcoBV7e3sP31tBBWpmZia3
F0+lUlTiFB+EpiBq3eTk5Ndb/uHDh6qqKt5tq66uNub6tuFwWOhdqMY8MAEt
CgQCP7zmRUf38Xg857dQ+RqFNpvti0k53rx5w71R/7Czs5P3J6xJQk9Bl5WV
bW1t/fDUFgCv8/Pztra2TMYk9PT05PwudMQqbl0MRdzN3k99aeq1cm/OP1Df
fmpq6vj4WKFPW0vuZoMRgQ4Y+/v7sdYVqBzt+xlWTqfTGYlEpqenc3sjlXeh
qXXDw8NCF+/IAdVnv9+/sbGh7IeufnNzc3/88YfQ2GLOQFC5xcXFrK5/dXd3
5zy2f3l5WeVTj6pQeqoQZT90Tdjb2xsZGREa26amJu5WAjyEOs/ZXgLLZ2qI
tbU1ld9RqDaGHWL35+1qa0InSqLM39/f524lwHdRZzjbW/xol8n2nrs7dJxe
W1sraHfTpfTIGWOefyZer1doeH/99VfuJgJ81xdz1mWovb09lUrl8HYTExPj
4+MqHw6tKtR/DgaDBjz/nNbb2yv0gMvj8SSTSe5WAnwbVdocspoKbM5daCJh
ciHdKC0tFboal8rt7++LjjAWRAB1Wltby/kWgLa2tpzfl3osKp96VD0MPpn8
xcWFgmsffNMDd48CMMpnigObzRYKhb55210m3r17p+AupldY7upP8fO3uFwu
w54+AtVKpVKVlZX5JHZLS0vOy3yfnZ0JvTSvD/QlmPM3oG5IWCsNQQa1UWRw
Kb1Izhuwt7en5kk51MCwI+u+IHrmwMznmAWQQ5GLdIWFhTnP00gd+NbW1vy3
Qa+cTufp6amyH7oWUZ60tbUJDTX1zw2+Ji+oyu7u7sMT1mWurq4uGAzmthkb
Gxsqn5SDi8lkwt3Hd+bm5kSv8vDmzRvuVgL8Q2dnp1KJTZVkYWEh5y1R/xqF
LFCc75NQn10uF3crAf5B2WUB85nH4Pr6urS0VMGN0QH6dDDv5RfoME1ozKmT
0NbWZuSh5qASit/BR682PDyc8/ZEo1GVr1Eo0+PHj09OThT8uPVhcnJSdOTL
y8txLyHwymFCpEyYzeZ85k2iHrjim6Q51IXz+XxHR0cKfty6sbW1JXryQ8ph
DJgBXuKW3aTakvNWjY6Osq8kxYuK87t37/L5jtO9vr4+0Zcq3G43Dl6ACx2+
iZs+zm635zx1/5+3SzYbdjg0HVmnLwgadimrTBweHkr4LN6+fcvdUDCoFy9e
CM3tnMf5HxwchEIh0ZNJqlD61D1Oe2bih6vMK8LlcuW8AgVAPiSkdz7zJo2P
j4vePFVpbm7O54jDgORMTosuNMj38uVL0YlN+vr6ct7CVCol7vS4qlAnLZ9A
GZmEoT4YCw3yCV2t/k6eCwadnZ3pe41Ct9tNlRkXoXLW09Mj+jMymUy4nRBk
onyTcGD49OnTPBesPz091eukHLTXl5SU5HwvPJBEIjE9PS3hG5zeYmVlhbu5
YAjUW8t5Hv7Mmc3mubm5PDd1b29vdnb22bNnordWsvLycoydy9/FxUU0Gs1z
XtwMeb3e3BZxA8hKd3e3hHyuqalR6q7kmZkZ3axRaLVaOzo6wuGwIpGBP2/v
JXQ4HKI/OEX6GwAPo8ogofNMVWhkZETBLqLo+RbkqKqqwsSVIshJD/r4cDsn
iHN5eSlnmRK3263sllPXRdPz2tlstnyGGsID4vH44OCgnM+xt7eXu7mgWx8/
ftRuGmt3jcLOzs6cly2AH1pdXaWjkurqagkfpd1u524u6NPKyoqE03SPbi92
5zms7pvOz88fP34sYfsVVFpaijl25Hj16pWED5QO4hoaGm5ubribC3ojelWg
O+KWbzs8PNTKhULakevr67EilTQbGxtFRUVyPtzx8XHu5oKuHBwcyKlsNptN
XPZSv0UTt6vU1tbOzMwICgJ8z9jYmJw5tSjJNzc3uZsLOnF1deV2uyXkLXUa
RV9AWV1dFb18cz5o23w+HyY4YjE3N6fUMpo/1N7ezt1c0AlpV7dp75CwJNDP
P/8spznZqqurm5iYEN18+J7j4+NAICDt4x4ZGeFuMWgeFWdpI9N+++03OY2S
M0owc06nc3JyUk7b4QHX19fScqOoqGh3d5e7xaBhV1dXcsZsPLqtUdIuh4VC
ITmN+iEK7+vXr7e3t+U0HH5odHRU2qfvcrni8Th3i0GTqFrKGRT66Pbu15aW
Fmk3wFI3ScLk1Q+jo5LKyspYLCanyZChZDIp8/Aqn3XcwMjkzPCcRtUylUrJ
XGmCDg0YLxTSF9/IyAgmzFGnYDAoc3E0zD4K2RobG5Mwz8ad7u5u+W2Uc0vC
F+hLobm5WX5jISuSl4Cn3Y27xaAZq6urMu/joJLFchZub2+vrKxMWjMf3c4r
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
AAAAAAD5/j9NV+e8
          "], "Byte", ColorSpace -> "RGB", ImageSize -> {36., Automatic}, 
          Interleaving -> True]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelThinningBW",ExpressionUUID->"43feef37-51f0-4f52-a13e-2098587be657"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["specLine"], "Input",
 CellChangeTimes->{{3.5545624553505917`*^9, 
  3.554562456420764*^9}},ExpressionUUID->"d5309fcb-93ba-4881-b97b-\
1e1f0867033b"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.], LineBox[{{0., 0}, {0., 0.001}}]}, 
   {Hue[0.001], LineBox[{{0.001, 0}, {0.001, 0.001}}]}, 
   {Hue[0.002], LineBox[{{0.002, 0}, {0.002, 0.001}}]}, 
   {Hue[0.003], LineBox[{{0.003, 0}, {0.003, 0.001}}]}, 
   {Hue[0.004], LineBox[{{0.004, 0}, {0.004, 0.001}}]}, 
   {Hue[0.005], LineBox[{{0.005, 0}, {0.005, 0.001}}]}, 
   {Hue[0.006], LineBox[{{0.006, 0}, {0.006, 0.001}}]}, 
   {Hue[0.007], LineBox[{{0.007, 0}, {0.007, 0.001}}]}, 
   {Hue[0.008], LineBox[{{0.008, 0}, {0.008, 0.001}}]}, 
   {Hue[0.009000000000000001], 
    LineBox[{{0.009000000000000001, 0}, {0.009000000000000001, 0.001}}]}, 
   {Hue[0.01], LineBox[{{0.01, 0}, {0.01, 0.001}}]}, 
   {Hue[0.011], LineBox[{{0.011, 0}, {0.011, 0.001}}]}, 
   {Hue[0.012], LineBox[{{0.012, 0}, {0.012, 0.001}}]}, 
   {Hue[0.013000000000000001`], 
    LineBox[{{0.013000000000000001`, 0}, {0.013000000000000001`, 0.001}}]}, 
   {Hue[0.014], LineBox[{{0.014, 0}, {0.014, 0.001}}]}, 
   {Hue[0.015], LineBox[{{0.015, 0}, {0.015, 0.001}}]}, 
   {Hue[0.016], LineBox[{{0.016, 0}, {0.016, 0.001}}]}, 
   {Hue[0.017], LineBox[{{0.017, 0}, {0.017, 0.001}}]}, 
   {Hue[0.018000000000000002`], 
    LineBox[{{0.018000000000000002`, 0}, {0.018000000000000002`, 0.001}}]}, 
   {Hue[0.019], LineBox[{{0.019, 0}, {0.019, 0.001}}]}, 
   {Hue[0.02], LineBox[{{0.02, 0}, {0.02, 0.001}}]}, 
   {Hue[0.021], LineBox[{{0.021, 0}, {0.021, 0.001}}]}, 
   {Hue[0.022], LineBox[{{0.022, 0}, {0.022, 0.001}}]}, 
   {Hue[0.023], LineBox[{{0.023, 0}, {0.023, 0.001}}]}, 
   {Hue[0.024], LineBox[{{0.024, 0}, {0.024, 0.001}}]}, 
   {Hue[0.025], LineBox[{{0.025, 0}, {0.025, 0.001}}]}, 
   {Hue[0.026000000000000002`], 
    LineBox[{{0.026000000000000002`, 0}, {0.026000000000000002`, 0.001}}]}, 
   {Hue[0.027], LineBox[{{0.027, 0}, {0.027, 0.001}}]}, 
   {Hue[0.028], LineBox[{{0.028, 0}, {0.028, 0.001}}]}, 
   {Hue[0.029], LineBox[{{0.029, 0}, {0.029, 0.001}}]}, 
   {Hue[0.03], LineBox[{{0.03, 0}, {0.03, 0.001}}]}, 
   {Hue[0.031], LineBox[{{0.031, 0}, {0.031, 0.001}}]}, 
   {Hue[0.032], LineBox[{{0.032, 0}, {0.032, 0.001}}]}, 
   {Hue[0.033], LineBox[{{0.033, 0}, {0.033, 0.001}}]}, 
   {Hue[0.034], LineBox[{{0.034, 0}, {0.034, 0.001}}]}, 
   {Hue[0.035], LineBox[{{0.035, 0}, {0.035, 0.001}}]}, 
   {Hue[0.036000000000000004`], 
    LineBox[{{0.036000000000000004`, 0}, {0.036000000000000004`, 0.001}}]}, 
   {Hue[0.037], LineBox[{{0.037, 0}, {0.037, 0.001}}]}, 
   {Hue[0.038], LineBox[{{0.038, 0}, {0.038, 0.001}}]}, 
   {Hue[0.039], LineBox[{{0.039, 0}, {0.039, 0.001}}]}, 
   {Hue[0.04], LineBox[{{0.04, 0}, {0.04, 0.001}}]}, 
   {Hue[0.041], LineBox[{{0.041, 0}, {0.041, 0.001}}]}, 
   {Hue[0.042], LineBox[{{0.042, 0}, {0.042, 0.001}}]}, 
   {Hue[0.043000000000000003`], 
    LineBox[{{0.043000000000000003`, 0}, {0.043000000000000003`, 0.001}}]}, 
   {Hue[0.044], LineBox[{{0.044, 0}, {0.044, 0.001}}]}, 
   {Hue[0.045], LineBox[{{0.045, 0}, {0.045, 0.001}}]}, 
   {Hue[0.046], LineBox[{{0.046, 0}, {0.046, 0.001}}]}, 
   {Hue[0.047], LineBox[{{0.047, 0}, {0.047, 0.001}}]}, 
   {Hue[0.048], LineBox[{{0.048, 0}, {0.048, 0.001}}]}, 
   {Hue[0.049], LineBox[{{0.049, 0}, {0.049, 0.001}}]}, 
   {Hue[0.05], LineBox[{{0.05, 0}, {0.05, 0.001}}]}, 
   {Hue[0.051000000000000004`], 
    LineBox[{{0.051000000000000004`, 0}, {0.051000000000000004`, 0.001}}]}, 
   {Hue[0.052000000000000005`], 
    LineBox[{{0.052000000000000005`, 0}, {0.052000000000000005`, 0.001}}]}, 
   {Hue[0.053], LineBox[{{0.053, 0}, {0.053, 0.001}}]}, 
   {Hue[0.054], LineBox[{{0.054, 0}, {0.054, 0.001}}]}, 
   {Hue[0.055], LineBox[{{0.055, 0}, {0.055, 0.001}}]}, 
   {Hue[0.056], LineBox[{{0.056, 0}, {0.056, 0.001}}]}, 
   {Hue[0.057], LineBox[{{0.057, 0}, {0.057, 0.001}}]}, 
   {Hue[0.058], LineBox[{{0.058, 0}, {0.058, 0.001}}]}, 
   {Hue[0.059000000000000004`], 
    LineBox[{{0.059000000000000004`, 0}, {0.059000000000000004`, 0.001}}]}, 
   {Hue[0.06], LineBox[{{0.06, 0}, {0.06, 0.001}}]}, 
   {Hue[0.061], LineBox[{{0.061, 0}, {0.061, 0.001}}]}, 
   {Hue[0.062], LineBox[{{0.062, 0}, {0.062, 0.001}}]}, 
   {Hue[0.063], LineBox[{{0.063, 0}, {0.063, 0.001}}]}, 
   {Hue[0.064], LineBox[{{0.064, 0}, {0.064, 0.001}}]}, 
   {Hue[0.065], LineBox[{{0.065, 0}, {0.065, 0.001}}]}, 
   {Hue[0.066], LineBox[{{0.066, 0}, {0.066, 0.001}}]}, 
   {Hue[0.067], LineBox[{{0.067, 0}, {0.067, 0.001}}]}, 
   {Hue[0.068], LineBox[{{0.068, 0}, {0.068, 0.001}}]}, 
   {Hue[0.069], LineBox[{{0.069, 0}, {0.069, 0.001}}]}, 
   {Hue[0.07], LineBox[{{0.07, 0}, {0.07, 0.001}}]}, 
   {Hue[0.07100000000000001], 
    LineBox[{{0.07100000000000001, 0}, {0.07100000000000001, 0.001}}]}, 
   {Hue[0.07200000000000001], 
    LineBox[{{0.07200000000000001, 0}, {0.07200000000000001, 0.001}}]}, 
   {Hue[0.073], LineBox[{{0.073, 0}, {0.073, 0.001}}]}, 
   {Hue[0.074], LineBox[{{0.074, 0}, {0.074, 0.001}}]}, 
   {Hue[0.075], LineBox[{{0.075, 0}, {0.075, 0.001}}]}, 
   {Hue[0.076], LineBox[{{0.076, 0}, {0.076, 0.001}}]}, 
   {Hue[0.077], LineBox[{{0.077, 0}, {0.077, 0.001}}]}, 
   {Hue[0.078], LineBox[{{0.078, 0}, {0.078, 0.001}}]}, 
   {Hue[0.079], LineBox[{{0.079, 0}, {0.079, 0.001}}]}, 
   {Hue[0.08], LineBox[{{0.08, 0}, {0.08, 0.001}}]}, 
   {Hue[0.081], LineBox[{{0.081, 0}, {0.081, 0.001}}]}, 
   {Hue[0.082], LineBox[{{0.082, 0}, {0.082, 0.001}}]}, 
   {Hue[0.083], LineBox[{{0.083, 0}, {0.083, 0.001}}]}, 
   {Hue[0.084], LineBox[{{0.084, 0}, {0.084, 0.001}}]}, 
   {Hue[0.085], LineBox[{{0.085, 0}, {0.085, 0.001}}]}, 
   {Hue[0.08600000000000001], 
    LineBox[{{0.08600000000000001, 0}, {0.08600000000000001, 0.001}}]}, 
   {Hue[0.08700000000000001], 
    LineBox[{{0.08700000000000001, 0}, {0.08700000000000001, 0.001}}]}, 
   {Hue[0.088], LineBox[{{0.088, 0}, {0.088, 0.001}}]}, 
   {Hue[0.089], LineBox[{{0.089, 0}, {0.089, 0.001}}]}, 
   {Hue[0.09], LineBox[{{0.09, 0}, {0.09, 0.001}}]}, 
   {Hue[0.091], LineBox[{{0.091, 0}, {0.091, 0.001}}]}, 
   {Hue[0.092], LineBox[{{0.092, 0}, {0.092, 0.001}}]}, 
   {Hue[0.093], LineBox[{{0.093, 0}, {0.093, 0.001}}]}, 
   {Hue[0.094], LineBox[{{0.094, 0}, {0.094, 0.001}}]}, 
   {Hue[0.095], LineBox[{{0.095, 0}, {0.095, 0.001}}]}, 
   {Hue[0.096], LineBox[{{0.096, 0}, {0.096, 0.001}}]}, 
   {Hue[0.097], LineBox[{{0.097, 0}, {0.097, 0.001}}]}, 
   {Hue[0.098], LineBox[{{0.098, 0}, {0.098, 0.001}}]}, 
   {Hue[0.099], LineBox[{{0.099, 0}, {0.099, 0.001}}]}, 
   {Hue[0.1], LineBox[{{0.1, 0}, {0.1, 0.001}}]}, 
   {Hue[0.101], LineBox[{{0.101, 0}, {0.101, 0.001}}]}, 
   {Hue[0.10200000000000001`], 
    LineBox[{{0.10200000000000001`, 0}, {0.10200000000000001`, 0.001}}]}, 
   {Hue[0.10300000000000001`], 
    LineBox[{{0.10300000000000001`, 0}, {0.10300000000000001`, 0.001}}]}, 
   {Hue[0.10400000000000001`], 
    LineBox[{{0.10400000000000001`, 0}, {0.10400000000000001`, 0.001}}]}, 
   {Hue[0.105], LineBox[{{0.105, 0}, {0.105, 0.001}}]}, 
   {Hue[0.106], LineBox[{{0.106, 0}, {0.106, 0.001}}]}, 
   {Hue[0.107], LineBox[{{0.107, 0}, {0.107, 0.001}}]}, 
   {Hue[0.108], LineBox[{{0.108, 0}, {0.108, 0.001}}]}, 
   {Hue[0.109], LineBox[{{0.109, 0}, {0.109, 0.001}}]}, 
   {Hue[0.11], LineBox[{{0.11, 0}, {0.11, 0.001}}]}, 
   {Hue[0.111], LineBox[{{0.111, 0}, {0.111, 0.001}}]}, 
   {Hue[0.112], LineBox[{{0.112, 0}, {0.112, 0.001}}]}, 
   {Hue[0.113], LineBox[{{0.113, 0}, {0.113, 0.001}}]}, 
   {Hue[0.114], LineBox[{{0.114, 0}, {0.114, 0.001}}]}, 
   {Hue[0.115], LineBox[{{0.115, 0}, {0.115, 0.001}}]}, 
   {Hue[0.116], LineBox[{{0.116, 0}, {0.116, 0.001}}]}, 
   {Hue[0.117], LineBox[{{0.117, 0}, {0.117, 0.001}}]}, 
   {Hue[0.11800000000000001`], 
    LineBox[{{0.11800000000000001`, 0}, {0.11800000000000001`, 0.001}}]}, 
   {Hue[0.11900000000000001`], 
    LineBox[{{0.11900000000000001`, 0}, {0.11900000000000001`, 0.001}}]}, 
   {Hue[0.12], LineBox[{{0.12, 0}, {0.12, 0.001}}]}, 
   {Hue[0.121], LineBox[{{0.121, 0}, {0.121, 0.001}}]}, 
   {Hue[0.122], LineBox[{{0.122, 0}, {0.122, 0.001}}]}, 
   {Hue[0.123], LineBox[{{0.123, 0}, {0.123, 0.001}}]}, 
   {Hue[0.124], LineBox[{{0.124, 0}, {0.124, 0.001}}]}, 
   {Hue[0.125], LineBox[{{0.125, 0}, {0.125, 0.001}}]}, 
   {Hue[0.126], LineBox[{{0.126, 0}, {0.126, 0.001}}]}, 
   {Hue[0.127], LineBox[{{0.127, 0}, {0.127, 0.001}}]}, 
   {Hue[0.128], LineBox[{{0.128, 0}, {0.128, 0.001}}]}, 
   {Hue[0.129], LineBox[{{0.129, 0}, {0.129, 0.001}}]}, 
   {Hue[0.13], LineBox[{{0.13, 0}, {0.13, 0.001}}]}, 
   {Hue[0.131], LineBox[{{0.131, 0}, {0.131, 0.001}}]}, 
   {Hue[0.132], LineBox[{{0.132, 0}, {0.132, 0.001}}]}, 
   {Hue[0.133], LineBox[{{0.133, 0}, {0.133, 0.001}}]}, 
   {Hue[0.134], LineBox[{{0.134, 0}, {0.134, 0.001}}]}, 
   {Hue[0.135], LineBox[{{0.135, 0}, {0.135, 0.001}}]}, 
   {Hue[0.136], LineBox[{{0.136, 0}, {0.136, 0.001}}]}, 
   {Hue[0.137], LineBox[{{0.137, 0}, {0.137, 0.001}}]}, 
   {Hue[0.138], LineBox[{{0.138, 0}, {0.138, 0.001}}]}, 
   {Hue[0.139], LineBox[{{0.139, 0}, {0.139, 0.001}}]}, 
   {Hue[0.14], LineBox[{{0.14, 0}, {0.14, 0.001}}]}, 
   {Hue[0.14100000000000001`], 
    LineBox[{{0.14100000000000001`, 0}, {0.14100000000000001`, 0.001}}]}, 
   {Hue[0.14200000000000002`], 
    LineBox[{{0.14200000000000002`, 0}, {0.14200000000000002`, 0.001}}]}, 
   {Hue[0.14300000000000002`], 
    LineBox[{{0.14300000000000002`, 0}, {0.14300000000000002`, 0.001}}]}, 
   {Hue[0.14400000000000002`], 
    LineBox[{{0.14400000000000002`, 0}, {0.14400000000000002`, 0.001}}]}, 
   {Hue[0.145], LineBox[{{0.145, 0}, {0.145, 0.001}}]}, 
   {Hue[0.146], LineBox[{{0.146, 0}, {0.146, 0.001}}]}, 
   {Hue[0.147], LineBox[{{0.147, 0}, {0.147, 0.001}}]}, 
   {Hue[0.148], LineBox[{{0.148, 0}, {0.148, 0.001}}]}, 
   {Hue[0.149], LineBox[{{0.149, 0}, {0.149, 0.001}}]}, 
   {Hue[0.15], LineBox[{{0.15, 0}, {0.15, 0.001}}]}, 
   {Hue[0.151], LineBox[{{0.151, 0}, {0.151, 0.001}}]}, 
   {Hue[0.152], LineBox[{{0.152, 0}, {0.152, 0.001}}]}, 
   {Hue[0.153], LineBox[{{0.153, 0}, {0.153, 0.001}}]}, 
   {Hue[0.154], LineBox[{{0.154, 0}, {0.154, 0.001}}]}, 
   {Hue[0.155], LineBox[{{0.155, 0}, {0.155, 0.001}}]}, 
   {Hue[0.156], LineBox[{{0.156, 0}, {0.156, 0.001}}]}, 
   {Hue[0.157], LineBox[{{0.157, 0}, {0.157, 0.001}}]}, 
   {Hue[0.158], LineBox[{{0.158, 0}, {0.158, 0.001}}]}, 
   {Hue[0.159], LineBox[{{0.159, 0}, {0.159, 0.001}}]}, 
   {Hue[0.16], LineBox[{{0.16, 0}, {0.16, 0.001}}]}, 
   {Hue[0.161], LineBox[{{0.161, 0}, {0.161, 0.001}}]}, 
   {Hue[0.162], LineBox[{{0.162, 0}, {0.162, 0.001}}]}, 
   {Hue[0.163], LineBox[{{0.163, 0}, {0.163, 0.001}}]}, 
   {Hue[0.164], LineBox[{{0.164, 0}, {0.164, 0.001}}]}, 
   {Hue[0.165], LineBox[{{0.165, 0}, {0.165, 0.001}}]}, 
   {Hue[0.166], LineBox[{{0.166, 0}, {0.166, 0.001}}]}, 
   {Hue[0.167], LineBox[{{0.167, 0}, {0.167, 0.001}}]}, 
   {Hue[0.168], LineBox[{{0.168, 0}, {0.168, 0.001}}]}, 
   {Hue[0.169], LineBox[{{0.169, 0}, {0.169, 0.001}}]}, 
   {Hue[0.17], LineBox[{{0.17, 0}, {0.17, 0.001}}]}, 
   {Hue[0.171], LineBox[{{0.171, 0}, {0.171, 0.001}}]}, 
   {Hue[0.17200000000000001`], 
    LineBox[{{0.17200000000000001`, 0}, {0.17200000000000001`, 0.001}}]}, 
   {Hue[0.17300000000000001`], 
    LineBox[{{0.17300000000000001`, 0}, {0.17300000000000001`, 0.001}}]}, 
   {Hue[0.17400000000000002`], 
    LineBox[{{0.17400000000000002`, 0}, {0.17400000000000002`, 0.001}}]}, 
   {Hue[0.17500000000000002`], 
    LineBox[{{0.17500000000000002`, 0}, {0.17500000000000002`, 0.001}}]}, 
   {Hue[0.176], LineBox[{{0.176, 0}, {0.176, 0.001}}]}, 
   {Hue[0.177], LineBox[{{0.177, 0}, {0.177, 0.001}}]}, 
   {Hue[0.178], LineBox[{{0.178, 0}, {0.178, 0.001}}]}, 
   {Hue[0.179], LineBox[{{0.179, 0}, {0.179, 0.001}}]}, 
   {Hue[0.18], LineBox[{{0.18, 0}, {0.18, 0.001}}]}, 
   {Hue[0.181], LineBox[{{0.181, 0}, {0.181, 0.001}}]}, 
   {Hue[0.182], LineBox[{{0.182, 0}, {0.182, 0.001}}]}, 
   {Hue[0.183], LineBox[{{0.183, 0}, {0.183, 0.001}}]}, 
   {Hue[0.184], LineBox[{{0.184, 0}, {0.184, 0.001}}]}, 
   {Hue[0.185], LineBox[{{0.185, 0}, {0.185, 0.001}}]}, 
   {Hue[0.186], LineBox[{{0.186, 0}, {0.186, 0.001}}]}, 
   {Hue[0.187], LineBox[{{0.187, 0}, {0.187, 0.001}}]}, 
   {Hue[0.188], LineBox[{{0.188, 0}, {0.188, 0.001}}]}, 
   {Hue[0.189], LineBox[{{0.189, 0}, {0.189, 0.001}}]}, 
   {Hue[0.19], LineBox[{{0.19, 0}, {0.19, 0.001}}]}, 
   {Hue[0.191], LineBox[{{0.191, 0}, {0.191, 0.001}}]}, 
   {Hue[0.192], LineBox[{{0.192, 0}, {0.192, 0.001}}]}, 
   {Hue[0.193], LineBox[{{0.193, 0}, {0.193, 0.001}}]}, 
   {Hue[0.194], LineBox[{{0.194, 0}, {0.194, 0.001}}]}, 
   {Hue[0.195], LineBox[{{0.195, 0}, {0.195, 0.001}}]}, 
   {Hue[0.196], LineBox[{{0.196, 0}, {0.196, 0.001}}]}, 
   {Hue[0.197], LineBox[{{0.197, 0}, {0.197, 0.001}}]}, 
   {Hue[0.198], LineBox[{{0.198, 0}, {0.198, 0.001}}]}, 
   {Hue[0.199], LineBox[{{0.199, 0}, {0.199, 0.001}}]}, 
   {Hue[0.2], LineBox[{{0.2, 0}, {0.2, 0.001}}]}, 
   {Hue[0.201], LineBox[{{0.201, 0}, {0.201, 0.001}}]}, 
   {Hue[0.202], LineBox[{{0.202, 0}, {0.202, 0.001}}]}, 
   {Hue[0.203], LineBox[{{0.203, 0}, {0.203, 0.001}}]}, 
   {Hue[0.20400000000000001`], 
    LineBox[{{0.20400000000000001`, 0}, {0.20400000000000001`, 0.001}}]}, 
   {Hue[0.20500000000000002`], 
    LineBox[{{0.20500000000000002`, 0}, {0.20500000000000002`, 0.001}}]}, 
   {Hue[0.20600000000000002`], 
    LineBox[{{0.20600000000000002`, 0}, {0.20600000000000002`, 0.001}}]}, 
   {Hue[0.20700000000000002`], 
    LineBox[{{0.20700000000000002`, 0}, {0.20700000000000002`, 0.001}}]}, 
   {Hue[0.20800000000000002`], 
    LineBox[{{0.20800000000000002`, 0}, {0.20800000000000002`, 0.001}}]}, 
   {Hue[0.209], LineBox[{{0.209, 0}, {0.209, 0.001}}]}, 
   {Hue[0.21], LineBox[{{0.21, 0}, {0.21, 0.001}}]}, 
   {Hue[0.211], LineBox[{{0.211, 0}, {0.211, 0.001}}]}, 
   {Hue[0.212], LineBox[{{0.212, 0}, {0.212, 0.001}}]}, 
   {Hue[0.213], LineBox[{{0.213, 0}, {0.213, 0.001}}]}, 
   {Hue[0.214], LineBox[{{0.214, 0}, {0.214, 0.001}}]}, 
   {Hue[0.215], LineBox[{{0.215, 0}, {0.215, 0.001}}]}, 
   {Hue[0.216], LineBox[{{0.216, 0}, {0.216, 0.001}}]}, 
   {Hue[0.217], LineBox[{{0.217, 0}, {0.217, 0.001}}]}, 
   {Hue[0.218], LineBox[{{0.218, 0}, {0.218, 0.001}}]}, 
   {Hue[0.219], LineBox[{{0.219, 0}, {0.219, 0.001}}]}, 
   {Hue[0.22], LineBox[{{0.22, 0}, {0.22, 0.001}}]}, 
   {Hue[0.221], LineBox[{{0.221, 0}, {0.221, 0.001}}]}, 
   {Hue[0.222], LineBox[{{0.222, 0}, {0.222, 0.001}}]}, 
   {Hue[0.223], LineBox[{{0.223, 0}, {0.223, 0.001}}]}, 
   {Hue[0.224], LineBox[{{0.224, 0}, {0.224, 0.001}}]}, 
   {Hue[0.225], LineBox[{{0.225, 0}, {0.225, 0.001}}]}, 
   {Hue[0.226], LineBox[{{0.226, 0}, {0.226, 0.001}}]}, 
   {Hue[0.227], LineBox[{{0.227, 0}, {0.227, 0.001}}]}, 
   {Hue[0.228], LineBox[{{0.228, 0}, {0.228, 0.001}}]}, 
   {Hue[0.229], LineBox[{{0.229, 0}, {0.229, 0.001}}]}, 
   {Hue[0.23], LineBox[{{0.23, 0}, {0.23, 0.001}}]}, 
   {Hue[0.231], LineBox[{{0.231, 0}, {0.231, 0.001}}]}, 
   {Hue[0.232], LineBox[{{0.232, 0}, {0.232, 0.001}}]}, 
   {Hue[0.233], LineBox[{{0.233, 0}, {0.233, 0.001}}]}, 
   {Hue[0.234], LineBox[{{0.234, 0}, {0.234, 0.001}}]}, 
   {Hue[0.23500000000000001`], 
    LineBox[{{0.23500000000000001`, 0}, {0.23500000000000001`, 0.001}}]}, 
   {Hue[0.23600000000000002`], 
    LineBox[{{0.23600000000000002`, 0}, {0.23600000000000002`, 0.001}}]}, 
   {Hue[0.23700000000000002`], 
    LineBox[{{0.23700000000000002`, 0}, {0.23700000000000002`, 0.001}}]}, 
   {Hue[0.23800000000000002`], 
    LineBox[{{0.23800000000000002`, 0}, {0.23800000000000002`, 0.001}}]}, 
   {Hue[0.23900000000000002`], 
    LineBox[{{0.23900000000000002`, 0}, {0.23900000000000002`, 0.001}}]}, 
   {Hue[0.24], LineBox[{{0.24, 0}, {0.24, 0.001}}]}, 
   {Hue[0.241], LineBox[{{0.241, 0}, {0.241, 0.001}}]}, 
   {Hue[0.242], LineBox[{{0.242, 0}, {0.242, 0.001}}]}, 
   {Hue[0.243], LineBox[{{0.243, 0}, {0.243, 0.001}}]}, 
   {Hue[0.244], LineBox[{{0.244, 0}, {0.244, 0.001}}]}, 
   {Hue[0.245], LineBox[{{0.245, 0}, {0.245, 0.001}}]}, 
   {Hue[0.246], LineBox[{{0.246, 0}, {0.246, 0.001}}]}, 
   {Hue[0.247], LineBox[{{0.247, 0}, {0.247, 0.001}}]}, 
   {Hue[0.248], LineBox[{{0.248, 0}, {0.248, 0.001}}]}, 
   {Hue[0.249], LineBox[{{0.249, 0}, {0.249, 0.001}}]}, 
   {Hue[0.25], LineBox[{{0.25, 0}, {0.25, 0.001}}]}, 
   {Hue[0.251], LineBox[{{0.251, 0}, {0.251, 0.001}}]}, 
   {Hue[0.252], LineBox[{{0.252, 0}, {0.252, 0.001}}]}, 
   {Hue[0.253], LineBox[{{0.253, 0}, {0.253, 0.001}}]}, 
   {Hue[0.254], LineBox[{{0.254, 0}, {0.254, 0.001}}]}, 
   {Hue[0.255], LineBox[{{0.255, 0}, {0.255, 0.001}}]}, 
   {Hue[0.256], LineBox[{{0.256, 0}, {0.256, 0.001}}]}, 
   {Hue[0.257], LineBox[{{0.257, 0}, {0.257, 0.001}}]}, 
   {Hue[0.258], LineBox[{{0.258, 0}, {0.258, 0.001}}]}, 
   {Hue[0.259], LineBox[{{0.259, 0}, {0.259, 0.001}}]}, 
   {Hue[0.26], LineBox[{{0.26, 0}, {0.26, 0.001}}]}, 
   {Hue[0.261], LineBox[{{0.261, 0}, {0.261, 0.001}}]}, 
   {Hue[0.262], LineBox[{{0.262, 0}, {0.262, 0.001}}]}, 
   {Hue[0.263], LineBox[{{0.263, 0}, {0.263, 0.001}}]}, 
   {Hue[0.264], LineBox[{{0.264, 0}, {0.264, 0.001}}]}, 
   {Hue[0.265], LineBox[{{0.265, 0}, {0.265, 0.001}}]}, 
   {Hue[0.266], LineBox[{{0.266, 0}, {0.266, 0.001}}]}, 
   {Hue[0.267], LineBox[{{0.267, 0}, {0.267, 0.001}}]}, 
   {Hue[0.268], LineBox[{{0.268, 0}, {0.268, 0.001}}]}, 
   {Hue[0.269], LineBox[{{0.269, 0}, {0.269, 0.001}}]}, 
   {Hue[0.27], LineBox[{{0.27, 0}, {0.27, 0.001}}]}, 
   {Hue[0.271], LineBox[{{0.271, 0}, {0.271, 0.001}}]}, 
   {Hue[0.272], LineBox[{{0.272, 0}, {0.272, 0.001}}]}, 
   {Hue[0.273], LineBox[{{0.273, 0}, {0.273, 0.001}}]}, 
   {Hue[0.274], LineBox[{{0.274, 0}, {0.274, 0.001}}]}, 
   {Hue[0.275], LineBox[{{0.275, 0}, {0.275, 0.001}}]}, 
   {Hue[0.276], LineBox[{{0.276, 0}, {0.276, 0.001}}]}, 
   {Hue[0.277], LineBox[{{0.277, 0}, {0.277, 0.001}}]}, 
   {Hue[0.278], LineBox[{{0.278, 0}, {0.278, 0.001}}]}, 
   {Hue[0.279], LineBox[{{0.279, 0}, {0.279, 0.001}}]}, 
   {Hue[0.28], LineBox[{{0.28, 0}, {0.28, 0.001}}]}, 
   {Hue[0.281], LineBox[{{0.281, 0}, {0.281, 0.001}}]}, 
   {Hue[0.28200000000000003`], 
    LineBox[{{0.28200000000000003`, 0}, {0.28200000000000003`, 0.001}}]}, 
   {Hue[0.28300000000000003`], 
    LineBox[{{0.28300000000000003`, 0}, {0.28300000000000003`, 0.001}}]}, 
   {Hue[0.28400000000000003`], 
    LineBox[{{0.28400000000000003`, 0}, {0.28400000000000003`, 0.001}}]}, 
   {Hue[0.28500000000000003`], 
    LineBox[{{0.28500000000000003`, 0}, {0.28500000000000003`, 0.001}}]}, 
   {Hue[0.28600000000000003`], 
    LineBox[{{0.28600000000000003`, 0}, {0.28600000000000003`, 0.001}}]}, 
   {Hue[0.28700000000000003`], 
    LineBox[{{0.28700000000000003`, 0}, {0.28700000000000003`, 0.001}}]}, 
   {Hue[0.28800000000000003`], 
    LineBox[{{0.28800000000000003`, 0}, {0.28800000000000003`, 0.001}}]}, 
   {Hue[0.289], LineBox[{{0.289, 0}, {0.289, 0.001}}]}, 
   {Hue[0.29], LineBox[{{0.29, 0}, {0.29, 0.001}}]}, 
   {Hue[0.291], LineBox[{{0.291, 0}, {0.291, 0.001}}]}, 
   {Hue[0.292], LineBox[{{0.292, 0}, {0.292, 0.001}}]}, 
   {Hue[0.293], LineBox[{{0.293, 0}, {0.293, 0.001}}]}, 
   {Hue[0.294], LineBox[{{0.294, 0}, {0.294, 0.001}}]}, 
   {Hue[0.295], LineBox[{{0.295, 0}, {0.295, 0.001}}]}, 
   {Hue[0.296], LineBox[{{0.296, 0}, {0.296, 0.001}}]}, 
   {Hue[0.297], LineBox[{{0.297, 0}, {0.297, 0.001}}]}, 
   {Hue[0.298], LineBox[{{0.298, 0}, {0.298, 0.001}}]}, 
   {Hue[0.299], LineBox[{{0.299, 0}, {0.299, 0.001}}]}, 
   {Hue[0.3], LineBox[{{0.3, 0}, {0.3, 0.001}}]}, 
   {Hue[0.301], LineBox[{{0.301, 0}, {0.301, 0.001}}]}, 
   {Hue[0.302], LineBox[{{0.302, 0}, {0.302, 0.001}}]}, 
   {Hue[0.303], LineBox[{{0.303, 0}, {0.303, 0.001}}]}, 
   {Hue[0.304], LineBox[{{0.304, 0}, {0.304, 0.001}}]}, 
   {Hue[0.305], LineBox[{{0.305, 0}, {0.305, 0.001}}]}, 
   {Hue[0.306], LineBox[{{0.306, 0}, {0.306, 0.001}}]}, 
   {Hue[0.307], LineBox[{{0.307, 0}, {0.307, 0.001}}]}, 
   {Hue[0.308], LineBox[{{0.308, 0}, {0.308, 0.001}}]}, 
   {Hue[0.309], LineBox[{{0.309, 0}, {0.309, 0.001}}]}, 
   {Hue[0.31], LineBox[{{0.31, 0}, {0.31, 0.001}}]}, 
   {Hue[0.311], LineBox[{{0.311, 0}, {0.311, 0.001}}]}, 
   {Hue[0.312], LineBox[{{0.312, 0}, {0.312, 0.001}}]}, 
   {Hue[0.313], LineBox[{{0.313, 0}, {0.313, 0.001}}]}, 
   {Hue[0.314], LineBox[{{0.314, 0}, {0.314, 0.001}}]}, 
   {Hue[0.315], LineBox[{{0.315, 0}, {0.315, 0.001}}]}, 
   {Hue[0.316], LineBox[{{0.316, 0}, {0.316, 0.001}}]}, 
   {Hue[0.317], LineBox[{{0.317, 0}, {0.317, 0.001}}]}, 
   {Hue[0.318], LineBox[{{0.318, 0}, {0.318, 0.001}}]}, 
   {Hue[0.319], LineBox[{{0.319, 0}, {0.319, 0.001}}]}, 
   {Hue[0.32], LineBox[{{0.32, 0}, {0.32, 0.001}}]}, 
   {Hue[0.321], LineBox[{{0.321, 0}, {0.321, 0.001}}]}, 
   {Hue[0.322], LineBox[{{0.322, 0}, {0.322, 0.001}}]}, 
   {Hue[0.323], LineBox[{{0.323, 0}, {0.323, 0.001}}]}, 
   {Hue[0.324], LineBox[{{0.324, 0}, {0.324, 0.001}}]}, 
   {Hue[0.325], LineBox[{{0.325, 0}, {0.325, 0.001}}]}, 
   {Hue[0.326], LineBox[{{0.326, 0}, {0.326, 0.001}}]}, 
   {Hue[0.327], LineBox[{{0.327, 0}, {0.327, 0.001}}]}, 
   {Hue[0.328], LineBox[{{0.328, 0}, {0.328, 0.001}}]}, 
   {Hue[0.329], LineBox[{{0.329, 0}, {0.329, 0.001}}]}, 
   {Hue[0.33], LineBox[{{0.33, 0}, {0.33, 0.001}}]}, 
   {Hue[0.331], LineBox[{{0.331, 0}, {0.331, 0.001}}]}, 
   {Hue[0.332], LineBox[{{0.332, 0}, {0.332, 0.001}}]}, 
   {Hue[0.333], LineBox[{{0.333, 0}, {0.333, 0.001}}]}, 
   {Hue[0.334], LineBox[{{0.334, 0}, {0.334, 0.001}}]}, 
   {Hue[0.335], LineBox[{{0.335, 0}, {0.335, 0.001}}]}, 
   {Hue[0.336], LineBox[{{0.336, 0}, {0.336, 0.001}}]}, 
   {Hue[0.337], LineBox[{{0.337, 0}, {0.337, 0.001}}]}, 
   {Hue[0.338], LineBox[{{0.338, 0}, {0.338, 0.001}}]}, 
   {Hue[0.339], LineBox[{{0.339, 0}, {0.339, 0.001}}]}, 
   {Hue[0.34], LineBox[{{0.34, 0}, {0.34, 0.001}}]}, 
   {Hue[0.341], LineBox[{{0.341, 0}, {0.341, 0.001}}]}, 
   {Hue[0.342], LineBox[{{0.342, 0}, {0.342, 0.001}}]}, 
   {Hue[0.343], LineBox[{{0.343, 0}, {0.343, 0.001}}]}, 
   {Hue[0.34400000000000003`], 
    LineBox[{{0.34400000000000003`, 0}, {0.34400000000000003`, 0.001}}]}, 
   {Hue[0.34500000000000003`], 
    LineBox[{{0.34500000000000003`, 0}, {0.34500000000000003`, 0.001}}]}, 
   {Hue[0.34600000000000003`], 
    LineBox[{{0.34600000000000003`, 0}, {0.34600000000000003`, 0.001}}]}, 
   {Hue[0.34700000000000003`], 
    LineBox[{{0.34700000000000003`, 0}, {0.34700000000000003`, 0.001}}]}, 
   {Hue[0.34800000000000003`], 
    LineBox[{{0.34800000000000003`, 0}, {0.34800000000000003`, 0.001}}]}, 
   {Hue[0.34900000000000003`], 
    LineBox[{{0.34900000000000003`, 0}, {0.34900000000000003`, 0.001}}]}, 
   {Hue[0.35000000000000003`], 
    LineBox[{{0.35000000000000003`, 0}, {0.35000000000000003`, 0.001}}]}, 
   {Hue[0.35100000000000003`], 
    LineBox[{{0.35100000000000003`, 0}, {0.35100000000000003`, 0.001}}]}, 
   {Hue[0.352], LineBox[{{0.352, 0}, {0.352, 0.001}}]}, 
   {Hue[0.353], LineBox[{{0.353, 0}, {0.353, 0.001}}]}, 
   {Hue[0.354], LineBox[{{0.354, 0}, {0.354, 0.001}}]}, 
   {Hue[0.355], LineBox[{{0.355, 0}, {0.355, 0.001}}]}, 
   {Hue[0.356], LineBox[{{0.356, 0}, {0.356, 0.001}}]}, 
   {Hue[0.357], LineBox[{{0.357, 0}, {0.357, 0.001}}]}, 
   {Hue[0.358], LineBox[{{0.358, 0}, {0.358, 0.001}}]}, 
   {Hue[0.359], LineBox[{{0.359, 0}, {0.359, 0.001}}]}, 
   {Hue[0.36], LineBox[{{0.36, 0}, {0.36, 0.001}}]}, 
   {Hue[0.361], LineBox[{{0.361, 0}, {0.361, 0.001}}]}, 
   {Hue[0.362], LineBox[{{0.362, 0}, {0.362, 0.001}}]}, 
   {Hue[0.363], LineBox[{{0.363, 0}, {0.363, 0.001}}]}, 
   {Hue[0.364], LineBox[{{0.364, 0}, {0.364, 0.001}}]}, 
   {Hue[0.365], LineBox[{{0.365, 0}, {0.365, 0.001}}]}, 
   {Hue[0.366], LineBox[{{0.366, 0}, {0.366, 0.001}}]}, 
   {Hue[0.367], LineBox[{{0.367, 0}, {0.367, 0.001}}]}, 
   {Hue[0.368], LineBox[{{0.368, 0}, {0.368, 0.001}}]}, 
   {Hue[0.369], LineBox[{{0.369, 0}, {0.369, 0.001}}]}, 
   {Hue[0.37], LineBox[{{0.37, 0}, {0.37, 0.001}}]}, 
   {Hue[0.371], LineBox[{{0.371, 0}, {0.371, 0.001}}]}, 
   {Hue[0.372], LineBox[{{0.372, 0}, {0.372, 0.001}}]}, 
   {Hue[0.373], LineBox[{{0.373, 0}, {0.373, 0.001}}]}, 
   {Hue[0.374], LineBox[{{0.374, 0}, {0.374, 0.001}}]}, 
   {Hue[0.375], LineBox[{{0.375, 0}, {0.375, 0.001}}]}, 
   {Hue[0.376], LineBox[{{0.376, 0}, {0.376, 0.001}}]}, 
   {Hue[0.377], LineBox[{{0.377, 0}, {0.377, 0.001}}]}, 
   {Hue[0.378], LineBox[{{0.378, 0}, {0.378, 0.001}}]}, 
   {Hue[0.379], LineBox[{{0.379, 0}, {0.379, 0.001}}]}, 
   {Hue[0.38], LineBox[{{0.38, 0}, {0.38, 0.001}}]}, 
   {Hue[0.381], LineBox[{{0.381, 0}, {0.381, 0.001}}]}, 
   {Hue[0.382], LineBox[{{0.382, 0}, {0.382, 0.001}}]}, 
   {Hue[0.383], LineBox[{{0.383, 0}, {0.383, 0.001}}]}, 
   {Hue[0.384], LineBox[{{0.384, 0}, {0.384, 0.001}}]}, 
   {Hue[0.385], LineBox[{{0.385, 0}, {0.385, 0.001}}]}, 
   {Hue[0.386], LineBox[{{0.386, 0}, {0.386, 0.001}}]}, 
   {Hue[0.387], LineBox[{{0.387, 0}, {0.387, 0.001}}]}, 
   {Hue[0.388], LineBox[{{0.388, 0}, {0.388, 0.001}}]}, 
   {Hue[0.389], LineBox[{{0.389, 0}, {0.389, 0.001}}]}, 
   {Hue[0.39], LineBox[{{0.39, 0}, {0.39, 0.001}}]}, 
   {Hue[0.391], LineBox[{{0.391, 0}, {0.391, 0.001}}]}, 
   {Hue[0.392], LineBox[{{0.392, 0}, {0.392, 0.001}}]}, 
   {Hue[0.393], LineBox[{{0.393, 0}, {0.393, 0.001}}]}, 
   {Hue[0.394], LineBox[{{0.394, 0}, {0.394, 0.001}}]}, 
   {Hue[0.395], LineBox[{{0.395, 0}, {0.395, 0.001}}]}, 
   {Hue[0.396], LineBox[{{0.396, 0}, {0.396, 0.001}}]}, 
   {Hue[0.397], LineBox[{{0.397, 0}, {0.397, 0.001}}]}, 
   {Hue[0.398], LineBox[{{0.398, 0}, {0.398, 0.001}}]}, 
   {Hue[0.399], LineBox[{{0.399, 0}, {0.399, 0.001}}]}, 
   {Hue[0.4], LineBox[{{0.4, 0}, {0.4, 0.001}}]}, 
   {Hue[0.401], LineBox[{{0.401, 0}, {0.401, 0.001}}]}, 
   {Hue[0.402], LineBox[{{0.402, 0}, {0.402, 0.001}}]}, 
   {Hue[0.403], LineBox[{{0.403, 0}, {0.403, 0.001}}]}, 
   {Hue[0.404], LineBox[{{0.404, 0}, {0.404, 0.001}}]}, 
   {Hue[0.405], LineBox[{{0.405, 0}, {0.405, 0.001}}]}, 
   {Hue[0.406], LineBox[{{0.406, 0}, {0.406, 0.001}}]}, 
   {Hue[0.40700000000000003`], 
    LineBox[{{0.40700000000000003`, 0}, {0.40700000000000003`, 0.001}}]}, 
   {Hue[0.40800000000000003`], 
    LineBox[{{0.40800000000000003`, 0}, {0.40800000000000003`, 0.001}}]}, 
   {Hue[0.40900000000000003`], 
    LineBox[{{0.40900000000000003`, 0}, {0.40900000000000003`, 0.001}}]}, 
   {Hue[0.41000000000000003`], 
    LineBox[{{0.41000000000000003`, 0}, {0.41000000000000003`, 0.001}}]}, 
   {Hue[0.41100000000000003`], 
    LineBox[{{0.41100000000000003`, 0}, {0.41100000000000003`, 0.001}}]}, 
   {Hue[0.41200000000000003`], 
    LineBox[{{0.41200000000000003`, 0}, {0.41200000000000003`, 0.001}}]}, 
   {Hue[0.41300000000000003`], 
    LineBox[{{0.41300000000000003`, 0}, {0.41300000000000003`, 0.001}}]}, 
   {Hue[0.41400000000000003`], 
    LineBox[{{0.41400000000000003`, 0}, {0.41400000000000003`, 0.001}}]}, 
   {Hue[0.41500000000000004`], 
    LineBox[{{0.41500000000000004`, 0}, {0.41500000000000004`, 0.001}}]}, 
   {Hue[0.41600000000000004`], 
    LineBox[{{0.41600000000000004`, 0}, {0.41600000000000004`, 0.001}}]}, 
   {Hue[0.417], LineBox[{{0.417, 0}, {0.417, 0.001}}]}, 
   {Hue[0.418], LineBox[{{0.418, 0}, {0.418, 0.001}}]}, 
   {Hue[0.419], LineBox[{{0.419, 0}, {0.419, 0.001}}]}, 
   {Hue[0.42], LineBox[{{0.42, 0}, {0.42, 0.001}}]}, 
   {Hue[0.421], LineBox[{{0.421, 0}, {0.421, 0.001}}]}, 
   {Hue[0.422], LineBox[{{0.422, 0}, {0.422, 0.001}}]}, 
   {Hue[0.423], LineBox[{{0.423, 0}, {0.423, 0.001}}]}, 
   {Hue[0.424], LineBox[{{0.424, 0}, {0.424, 0.001}}]}, 
   {Hue[0.425], LineBox[{{0.425, 0}, {0.425, 0.001}}]}, 
   {Hue[0.426], LineBox[{{0.426, 0}, {0.426, 0.001}}]}, 
   {Hue[0.427], LineBox[{{0.427, 0}, {0.427, 0.001}}]}, 
   {Hue[0.428], LineBox[{{0.428, 0}, {0.428, 0.001}}]}, 
   {Hue[0.429], LineBox[{{0.429, 0}, {0.429, 0.001}}]}, 
   {Hue[0.43], LineBox[{{0.43, 0}, {0.43, 0.001}}]}, 
   {Hue[0.431], LineBox[{{0.431, 0}, {0.431, 0.001}}]}, 
   {Hue[0.432], LineBox[{{0.432, 0}, {0.432, 0.001}}]}, 
   {Hue[0.433], LineBox[{{0.433, 0}, {0.433, 0.001}}]}, 
   {Hue[0.434], LineBox[{{0.434, 0}, {0.434, 0.001}}]}, 
   {Hue[0.435], LineBox[{{0.435, 0}, {0.435, 0.001}}]}, 
   {Hue[0.436], LineBox[{{0.436, 0}, {0.436, 0.001}}]}, 
   {Hue[0.437], LineBox[{{0.437, 0}, {0.437, 0.001}}]}, 
   {Hue[0.438], LineBox[{{0.438, 0}, {0.438, 0.001}}]}, 
   {Hue[0.439], LineBox[{{0.439, 0}, {0.439, 0.001}}]}, 
   {Hue[0.44], LineBox[{{0.44, 0}, {0.44, 0.001}}]}, 
   {Hue[0.441], LineBox[{{0.441, 0}, {0.441, 0.001}}]}, 
   {Hue[0.442], LineBox[{{0.442, 0}, {0.442, 0.001}}]}, 
   {Hue[0.443], LineBox[{{0.443, 0}, {0.443, 0.001}}]}, 
   {Hue[0.444], LineBox[{{0.444, 0}, {0.444, 0.001}}]}, 
   {Hue[0.445], LineBox[{{0.445, 0}, {0.445, 0.001}}]}, 
   {Hue[0.446], LineBox[{{0.446, 0}, {0.446, 0.001}}]}, 
   {Hue[0.447], LineBox[{{0.447, 0}, {0.447, 0.001}}]}, 
   {Hue[0.448], LineBox[{{0.448, 0}, {0.448, 0.001}}]}, 
   {Hue[0.449], LineBox[{{0.449, 0}, {0.449, 0.001}}]}, 
   {Hue[0.45], LineBox[{{0.45, 0}, {0.45, 0.001}}]}, 
   {Hue[0.451], LineBox[{{0.451, 0}, {0.451, 0.001}}]}, 
   {Hue[0.452], LineBox[{{0.452, 0}, {0.452, 0.001}}]}, 
   {Hue[0.453], LineBox[{{0.453, 0}, {0.453, 0.001}}]}, 
   {Hue[0.454], LineBox[{{0.454, 0}, {0.454, 0.001}}]}, 
   {Hue[0.455], LineBox[{{0.455, 0}, {0.455, 0.001}}]}, 
   {Hue[0.456], LineBox[{{0.456, 0}, {0.456, 0.001}}]}, 
   {Hue[0.457], LineBox[{{0.457, 0}, {0.457, 0.001}}]}, 
   {Hue[0.458], LineBox[{{0.458, 0}, {0.458, 0.001}}]}, 
   {Hue[0.459], LineBox[{{0.459, 0}, {0.459, 0.001}}]}, 
   {Hue[0.46], LineBox[{{0.46, 0}, {0.46, 0.001}}]}, 
   {Hue[0.461], LineBox[{{0.461, 0}, {0.461, 0.001}}]}, 
   {Hue[0.462], LineBox[{{0.462, 0}, {0.462, 0.001}}]}, 
   {Hue[0.463], LineBox[{{0.463, 0}, {0.463, 0.001}}]}, 
   {Hue[0.464], LineBox[{{0.464, 0}, {0.464, 0.001}}]}, 
   {Hue[0.465], LineBox[{{0.465, 0}, {0.465, 0.001}}]}, 
   {Hue[0.466], LineBox[{{0.466, 0}, {0.466, 0.001}}]}, 
   {Hue[0.467], LineBox[{{0.467, 0}, {0.467, 0.001}}]}, 
   {Hue[0.468], LineBox[{{0.468, 0}, {0.468, 0.001}}]}, 
   {Hue[0.46900000000000003`], 
    LineBox[{{0.46900000000000003`, 0}, {0.46900000000000003`, 0.001}}]}, 
   {Hue[0.47000000000000003`], 
    LineBox[{{0.47000000000000003`, 0}, {0.47000000000000003`, 0.001}}]}, 
   {Hue[0.47100000000000003`], 
    LineBox[{{0.47100000000000003`, 0}, {0.47100000000000003`, 0.001}}]}, 
   {Hue[0.47200000000000003`], 
    LineBox[{{0.47200000000000003`, 0}, {0.47200000000000003`, 0.001}}]}, 
   {Hue[0.47300000000000003`], 
    LineBox[{{0.47300000000000003`, 0}, {0.47300000000000003`, 0.001}}]}, 
   {Hue[0.47400000000000003`], 
    LineBox[{{0.47400000000000003`, 0}, {0.47400000000000003`, 0.001}}]}, 
   {Hue[0.47500000000000003`], 
    LineBox[{{0.47500000000000003`, 0}, {0.47500000000000003`, 0.001}}]}, 
   {Hue[0.47600000000000003`], 
    LineBox[{{0.47600000000000003`, 0}, {0.47600000000000003`, 0.001}}]}, 
   {Hue[0.47700000000000004`], 
    LineBox[{{0.47700000000000004`, 0}, {0.47700000000000004`, 0.001}}]}, 
   {Hue[0.47800000000000004`], 
    LineBox[{{0.47800000000000004`, 0}, {0.47800000000000004`, 0.001}}]}, 
   {Hue[0.47900000000000004`], 
    LineBox[{{0.47900000000000004`, 0}, {0.47900000000000004`, 0.001}}]}, 
   {Hue[0.48], LineBox[{{0.48, 0}, {0.48, 0.001}}]}, 
   {Hue[0.481], LineBox[{{0.481, 0}, {0.481, 0.001}}]}, 
   {Hue[0.482], LineBox[{{0.482, 0}, {0.482, 0.001}}]}, 
   {Hue[0.483], LineBox[{{0.483, 0}, {0.483, 0.001}}]}, 
   {Hue[0.484], LineBox[{{0.484, 0}, {0.484, 0.001}}]}, 
   {Hue[0.485], LineBox[{{0.485, 0}, {0.485, 0.001}}]}, 
   {Hue[0.486], LineBox[{{0.486, 0}, {0.486, 0.001}}]}, 
   {Hue[0.487], LineBox[{{0.487, 0}, {0.487, 0.001}}]}, 
   {Hue[0.488], LineBox[{{0.488, 0}, {0.488, 0.001}}]}, 
   {Hue[0.489], LineBox[{{0.489, 0}, {0.489, 0.001}}]}, 
   {Hue[0.49], LineBox[{{0.49, 0}, {0.49, 0.001}}]}, 
   {Hue[0.491], LineBox[{{0.491, 0}, {0.491, 0.001}}]}, 
   {Hue[0.492], LineBox[{{0.492, 0}, {0.492, 0.001}}]}, 
   {Hue[0.493], LineBox[{{0.493, 0}, {0.493, 0.001}}]}, 
   {Hue[0.494], LineBox[{{0.494, 0}, {0.494, 0.001}}]}, 
   {Hue[0.495], LineBox[{{0.495, 0}, {0.495, 0.001}}]}, 
   {Hue[0.496], LineBox[{{0.496, 0}, {0.496, 0.001}}]}, 
   {Hue[0.497], LineBox[{{0.497, 0}, {0.497, 0.001}}]}, 
   {Hue[0.498], LineBox[{{0.498, 0}, {0.498, 0.001}}]}, 
   {Hue[0.499], LineBox[{{0.499, 0}, {0.499, 0.001}}]}, 
   {Hue[0.5], LineBox[{{0.5, 0}, {0.5, 0.001}}]}, 
   {Hue[0.501], LineBox[{{0.501, 0}, {0.501, 0.001}}]}, 
   {Hue[0.502], LineBox[{{0.502, 0}, {0.502, 0.001}}]}, 
   {Hue[0.503], LineBox[{{0.503, 0}, {0.503, 0.001}}]}, 
   {Hue[0.504], LineBox[{{0.504, 0}, {0.504, 0.001}}]}, 
   {Hue[0.505], LineBox[{{0.505, 0}, {0.505, 0.001}}]}, 
   {Hue[0.506], LineBox[{{0.506, 0}, {0.506, 0.001}}]}, 
   {Hue[0.507], LineBox[{{0.507, 0}, {0.507, 0.001}}]}, 
   {Hue[0.508], LineBox[{{0.508, 0}, {0.508, 0.001}}]}, 
   {Hue[0.509], LineBox[{{0.509, 0}, {0.509, 0.001}}]}, 
   {Hue[0.51], LineBox[{{0.51, 0}, {0.51, 0.001}}]}, 
   {Hue[0.511], LineBox[{{0.511, 0}, {0.511, 0.001}}]}, 
   {Hue[0.512], LineBox[{{0.512, 0}, {0.512, 0.001}}]}, 
   {Hue[0.513], LineBox[{{0.513, 0}, {0.513, 0.001}}]}, 
   {Hue[0.514], LineBox[{{0.514, 0}, {0.514, 0.001}}]}, 
   {Hue[0.515], LineBox[{{0.515, 0}, {0.515, 0.001}}]}, 
   {Hue[0.516], LineBox[{{0.516, 0}, {0.516, 0.001}}]}, 
   {Hue[0.517], LineBox[{{0.517, 0}, {0.517, 0.001}}]}, 
   {Hue[0.518], LineBox[{{0.518, 0}, {0.518, 0.001}}]}, 
   {Hue[0.519], LineBox[{{0.519, 0}, {0.519, 0.001}}]}, 
   {Hue[0.52], LineBox[{{0.52, 0}, {0.52, 0.001}}]}, 
   {Hue[0.521], LineBox[{{0.521, 0}, {0.521, 0.001}}]}, 
   {Hue[0.522], LineBox[{{0.522, 0}, {0.522, 0.001}}]}, 
   {Hue[0.523], LineBox[{{0.523, 0}, {0.523, 0.001}}]}, 
   {Hue[0.524], LineBox[{{0.524, 0}, {0.524, 0.001}}]}, 
   {Hue[0.525], LineBox[{{0.525, 0}, {0.525, 0.001}}]}, 
   {Hue[0.526], LineBox[{{0.526, 0}, {0.526, 0.001}}]}, 
   {Hue[0.527], LineBox[{{0.527, 0}, {0.527, 0.001}}]}, 
   {Hue[0.528], LineBox[{{0.528, 0}, {0.528, 0.001}}]}, 
   {Hue[0.529], LineBox[{{0.529, 0}, {0.529, 0.001}}]}, 
   {Hue[0.53], LineBox[{{0.53, 0}, {0.53, 0.001}}]}, 
   {Hue[0.531], LineBox[{{0.531, 0}, {0.531, 0.001}}]}, 
   {Hue[0.532], LineBox[{{0.532, 0}, {0.532, 0.001}}]}, 
   {Hue[0.533], LineBox[{{0.533, 0}, {0.533, 0.001}}]}, 
   {Hue[0.534], LineBox[{{0.534, 0}, {0.534, 0.001}}]}, 
   {Hue[0.535], LineBox[{{0.535, 0}, {0.535, 0.001}}]}, 
   {Hue[0.536], LineBox[{{0.536, 0}, {0.536, 0.001}}]}, 
   {Hue[0.537], LineBox[{{0.537, 0}, {0.537, 0.001}}]}, 
   {Hue[0.538], LineBox[{{0.538, 0}, {0.538, 0.001}}]}, 
   {Hue[0.539], LineBox[{{0.539, 0}, {0.539, 0.001}}]}, 
   {Hue[0.54], LineBox[{{0.54, 0}, {0.54, 0.001}}]}, 
   {Hue[0.541], LineBox[{{0.541, 0}, {0.541, 0.001}}]}, 
   {Hue[0.542], LineBox[{{0.542, 0}, {0.542, 0.001}}]}, 
   {Hue[0.543], LineBox[{{0.543, 0}, {0.543, 0.001}}]}, 
   {Hue[0.544], LineBox[{{0.544, 0}, {0.544, 0.001}}]}, 
   {Hue[0.545], LineBox[{{0.545, 0}, {0.545, 0.001}}]}, 
   {Hue[0.546], LineBox[{{0.546, 0}, {0.546, 0.001}}]}, 
   {Hue[0.547], LineBox[{{0.547, 0}, {0.547, 0.001}}]}, 
   {Hue[0.548], LineBox[{{0.548, 0}, {0.548, 0.001}}]}, 
   {Hue[0.549], LineBox[{{0.549, 0}, {0.549, 0.001}}]}, 
   {Hue[0.55], LineBox[{{0.55, 0}, {0.55, 0.001}}]}, 
   {Hue[0.551], LineBox[{{0.551, 0}, {0.551, 0.001}}]}, 
   {Hue[0.552], LineBox[{{0.552, 0}, {0.552, 0.001}}]}, 
   {Hue[0.553], LineBox[{{0.553, 0}, {0.553, 0.001}}]}, 
   {Hue[0.554], LineBox[{{0.554, 0}, {0.554, 0.001}}]}, 
   {Hue[0.555], LineBox[{{0.555, 0}, {0.555, 0.001}}]}, 
   {Hue[0.556], LineBox[{{0.556, 0}, {0.556, 0.001}}]}, 
   {Hue[0.557], LineBox[{{0.557, 0}, {0.557, 0.001}}]}, 
   {Hue[0.558], LineBox[{{0.558, 0}, {0.558, 0.001}}]}, 
   {Hue[0.559], LineBox[{{0.559, 0}, {0.559, 0.001}}]}, 
   {Hue[0.56], LineBox[{{0.56, 0}, {0.56, 0.001}}]}, 
   {Hue[0.561], LineBox[{{0.561, 0}, {0.561, 0.001}}]}, 
   {Hue[0.562], LineBox[{{0.562, 0}, {0.562, 0.001}}]}, 
   {Hue[0.5630000000000001], 
    LineBox[{{0.5630000000000001, 0}, {0.5630000000000001, 0.001}}]}, 
   {Hue[0.5640000000000001], 
    LineBox[{{0.5640000000000001, 0}, {0.5640000000000001, 0.001}}]}, 
   {Hue[0.5650000000000001], 
    LineBox[{{0.5650000000000001, 0}, {0.5650000000000001, 0.001}}]}, 
   {Hue[0.5660000000000001], 
    LineBox[{{0.5660000000000001, 0}, {0.5660000000000001, 0.001}}]}, 
   {Hue[0.5670000000000001], 
    LineBox[{{0.5670000000000001, 0}, {0.5670000000000001, 0.001}}]}, 
   {Hue[0.5680000000000001], 
    LineBox[{{0.5680000000000001, 0}, {0.5680000000000001, 0.001}}]}, 
   {Hue[0.5690000000000001], 
    LineBox[{{0.5690000000000001, 0}, {0.5690000000000001, 0.001}}]}, 
   {Hue[0.5700000000000001], 
    LineBox[{{0.5700000000000001, 0}, {0.5700000000000001, 0.001}}]}, 
   {Hue[0.5710000000000001], 
    LineBox[{{0.5710000000000001, 0}, {0.5710000000000001, 0.001}}]}, 
   {Hue[0.5720000000000001], 
    LineBox[{{0.5720000000000001, 0}, {0.5720000000000001, 0.001}}]}, 
   {Hue[0.5730000000000001], 
    LineBox[{{0.5730000000000001, 0}, {0.5730000000000001, 0.001}}]}, 
   {Hue[0.5740000000000001], 
    LineBox[{{0.5740000000000001, 0}, {0.5740000000000001, 0.001}}]}, 
   {Hue[0.5750000000000001], 
    LineBox[{{0.5750000000000001, 0}, {0.5750000000000001, 0.001}}]}, 
   {Hue[0.5760000000000001], 
    LineBox[{{0.5760000000000001, 0}, {0.5760000000000001, 0.001}}]}, 
   {Hue[0.577], LineBox[{{0.577, 0}, {0.577, 0.001}}]}, 
   {Hue[0.578], LineBox[{{0.578, 0}, {0.578, 0.001}}]}, 
   {Hue[0.579], LineBox[{{0.579, 0}, {0.579, 0.001}}]}, 
   {Hue[0.58], LineBox[{{0.58, 0}, {0.58, 0.001}}]}, 
   {Hue[0.581], LineBox[{{0.581, 0}, {0.581, 0.001}}]}, 
   {Hue[0.582], LineBox[{{0.582, 0}, {0.582, 0.001}}]}, 
   {Hue[0.583], LineBox[{{0.583, 0}, {0.583, 0.001}}]}, 
   {Hue[0.584], LineBox[{{0.584, 0}, {0.584, 0.001}}]}, 
   {Hue[0.585], LineBox[{{0.585, 0}, {0.585, 0.001}}]}, 
   {Hue[0.586], LineBox[{{0.586, 0}, {0.586, 0.001}}]}, 
   {Hue[0.587], LineBox[{{0.587, 0}, {0.587, 0.001}}]}, 
   {Hue[0.588], LineBox[{{0.588, 0}, {0.588, 0.001}}]}, 
   {Hue[0.589], LineBox[{{0.589, 0}, {0.589, 0.001}}]}, 
   {Hue[0.59], LineBox[{{0.59, 0}, {0.59, 0.001}}]}, 
   {Hue[0.591], LineBox[{{0.591, 0}, {0.591, 0.001}}]}, 
   {Hue[0.592], LineBox[{{0.592, 0}, {0.592, 0.001}}]}, 
   {Hue[0.593], LineBox[{{0.593, 0}, {0.593, 0.001}}]}, 
   {Hue[0.594], LineBox[{{0.594, 0}, {0.594, 0.001}}]}, 
   {Hue[0.595], LineBox[{{0.595, 0}, {0.595, 0.001}}]}, 
   {Hue[0.596], LineBox[{{0.596, 0}, {0.596, 0.001}}]}, 
   {Hue[0.597], LineBox[{{0.597, 0}, {0.597, 0.001}}]}, 
   {Hue[0.598], LineBox[{{0.598, 0}, {0.598, 0.001}}]}, 
   {Hue[0.599], LineBox[{{0.599, 0}, {0.599, 0.001}}]}, 
   {Hue[0.6], LineBox[{{0.6, 0}, {0.6, 0.001}}]}, 
   {Hue[0.601], LineBox[{{0.601, 0}, {0.601, 0.001}}]}, 
   {Hue[0.602], LineBox[{{0.602, 0}, {0.602, 0.001}}]}, 
   {Hue[0.603], LineBox[{{0.603, 0}, {0.603, 0.001}}]}, 
   {Hue[0.604], LineBox[{{0.604, 0}, {0.604, 0.001}}]}, 
   {Hue[0.605], LineBox[{{0.605, 0}, {0.605, 0.001}}]}, 
   {Hue[0.606], LineBox[{{0.606, 0}, {0.606, 0.001}}]}, 
   {Hue[0.607], LineBox[{{0.607, 0}, {0.607, 0.001}}]}, 
   {Hue[0.608], LineBox[{{0.608, 0}, {0.608, 0.001}}]}, 
   {Hue[0.609], LineBox[{{0.609, 0}, {0.609, 0.001}}]}, 
   {Hue[0.61], LineBox[{{0.61, 0}, {0.61, 0.001}}]}, 
   {Hue[0.611], LineBox[{{0.611, 0}, {0.611, 0.001}}]}, 
   {Hue[0.612], LineBox[{{0.612, 0}, {0.612, 0.001}}]}, 
   {Hue[0.613], LineBox[{{0.613, 0}, {0.613, 0.001}}]}, 
   {Hue[0.614], LineBox[{{0.614, 0}, {0.614, 0.001}}]}, 
   {Hue[0.615], LineBox[{{0.615, 0}, {0.615, 0.001}}]}, 
   {Hue[0.616], LineBox[{{0.616, 0}, {0.616, 0.001}}]}, 
   {Hue[0.617], LineBox[{{0.617, 0}, {0.617, 0.001}}]}, 
   {Hue[0.618], LineBox[{{0.618, 0}, {0.618, 0.001}}]}, 
   {Hue[0.619], LineBox[{{0.619, 0}, {0.619, 0.001}}]}, 
   {Hue[0.62], LineBox[{{0.62, 0}, {0.62, 0.001}}]}, 
   {Hue[0.621], LineBox[{{0.621, 0}, {0.621, 0.001}}]}, 
   {Hue[0.622], LineBox[{{0.622, 0}, {0.622, 0.001}}]}, 
   {Hue[0.623], LineBox[{{0.623, 0}, {0.623, 0.001}}]}, 
   {Hue[0.624], LineBox[{{0.624, 0}, {0.624, 0.001}}]}, 
   {Hue[0.625], LineBox[{{0.625, 0}, {0.625, 0.001}}]}, 
   {Hue[0.626], LineBox[{{0.626, 0}, {0.626, 0.001}}]}, 
   {Hue[0.627], LineBox[{{0.627, 0}, {0.627, 0.001}}]}, 
   {Hue[0.628], LineBox[{{0.628, 0}, {0.628, 0.001}}]}, 
   {Hue[0.629], LineBox[{{0.629, 0}, {0.629, 0.001}}]}, 
   {Hue[0.63], LineBox[{{0.63, 0}, {0.63, 0.001}}]}, 
   {Hue[0.631], LineBox[{{0.631, 0}, {0.631, 0.001}}]}, 
   {Hue[0.632], LineBox[{{0.632, 0}, {0.632, 0.001}}]}, 
   {Hue[0.633], LineBox[{{0.633, 0}, {0.633, 0.001}}]}, 
   {Hue[0.634], LineBox[{{0.634, 0}, {0.634, 0.001}}]}, 
   {Hue[0.635], LineBox[{{0.635, 0}, {0.635, 0.001}}]}, 
   {Hue[0.636], LineBox[{{0.636, 0}, {0.636, 0.001}}]}, 
   {Hue[0.637], LineBox[{{0.637, 0}, {0.637, 0.001}}]}, 
   {Hue[0.638], LineBox[{{0.638, 0}, {0.638, 0.001}}]}, 
   {Hue[0.639], LineBox[{{0.639, 0}, {0.639, 0.001}}]}, 
   {Hue[0.64], LineBox[{{0.64, 0}, {0.64, 0.001}}]}, 
   {Hue[0.641], LineBox[{{0.641, 0}, {0.641, 0.001}}]}, 
   {Hue[0.642], LineBox[{{0.642, 0}, {0.642, 0.001}}]}, 
   {Hue[0.643], LineBox[{{0.643, 0}, {0.643, 0.001}}]}, 
   {Hue[0.644], LineBox[{{0.644, 0}, {0.644, 0.001}}]}, 
   {Hue[0.645], LineBox[{{0.645, 0}, {0.645, 0.001}}]}, 
   {Hue[0.646], LineBox[{{0.646, 0}, {0.646, 0.001}}]}, 
   {Hue[0.647], LineBox[{{0.647, 0}, {0.647, 0.001}}]}, 
   {Hue[0.648], LineBox[{{0.648, 0}, {0.648, 0.001}}]}, 
   {Hue[0.649], LineBox[{{0.649, 0}, {0.649, 0.001}}]}, 
   {Hue[0.65], LineBox[{{0.65, 0}, {0.65, 0.001}}]}, 
   {Hue[0.651], LineBox[{{0.651, 0}, {0.651, 0.001}}]}, 
   {Hue[0.652], LineBox[{{0.652, 0}, {0.652, 0.001}}]}, 
   {Hue[0.653], LineBox[{{0.653, 0}, {0.653, 0.001}}]}, 
   {Hue[0.654], LineBox[{{0.654, 0}, {0.654, 0.001}}]}, 
   {Hue[0.655], LineBox[{{0.655, 0}, {0.655, 0.001}}]}, 
   {Hue[0.656], LineBox[{{0.656, 0}, {0.656, 0.001}}]}, 
   {Hue[0.657], LineBox[{{0.657, 0}, {0.657, 0.001}}]}, 
   {Hue[0.658], LineBox[{{0.658, 0}, {0.658, 0.001}}]}, 
   {Hue[0.659], LineBox[{{0.659, 0}, {0.659, 0.001}}]}, 
   {Hue[0.66], LineBox[{{0.66, 0}, {0.66, 0.001}}]}, 
   {Hue[0.661], LineBox[{{0.661, 0}, {0.661, 0.001}}]}, 
   {Hue[0.662], LineBox[{{0.662, 0}, {0.662, 0.001}}]}, 
   {Hue[0.663], LineBox[{{0.663, 0}, {0.663, 0.001}}]}, 
   {Hue[0.664], LineBox[{{0.664, 0}, {0.664, 0.001}}]}, 
   {Hue[0.665], LineBox[{{0.665, 0}, {0.665, 0.001}}]}, 
   {Hue[0.666], LineBox[{{0.666, 0}, {0.666, 0.001}}]}, 
   {Hue[0.667], LineBox[{{0.667, 0}, {0.667, 0.001}}]}, 
   {Hue[0.668], LineBox[{{0.668, 0}, {0.668, 0.001}}]}, 
   {Hue[0.669], LineBox[{{0.669, 0}, {0.669, 0.001}}]}, 
   {Hue[0.67], LineBox[{{0.67, 0}, {0.67, 0.001}}]}, 
   {Hue[0.671], LineBox[{{0.671, 0}, {0.671, 0.001}}]}, 
   {Hue[0.672], LineBox[{{0.672, 0}, {0.672, 0.001}}]}, 
   {Hue[0.673], LineBox[{{0.673, 0}, {0.673, 0.001}}]}, 
   {Hue[0.674], LineBox[{{0.674, 0}, {0.674, 0.001}}]}, 
   {Hue[0.675], LineBox[{{0.675, 0}, {0.675, 0.001}}]}, 
   {Hue[0.676], LineBox[{{0.676, 0}, {0.676, 0.001}}]}, 
   {Hue[0.677], LineBox[{{0.677, 0}, {0.677, 0.001}}]}, 
   {Hue[0.678], LineBox[{{0.678, 0}, {0.678, 0.001}}]}, 
   {Hue[0.679], LineBox[{{0.679, 0}, {0.679, 0.001}}]}, 
   {Hue[0.68], LineBox[{{0.68, 0}, {0.68, 0.001}}]}, 
   {Hue[0.681], LineBox[{{0.681, 0}, {0.681, 0.001}}]}, 
   {Hue[0.682], LineBox[{{0.682, 0}, {0.682, 0.001}}]}, 
   {Hue[0.683], LineBox[{{0.683, 0}, {0.683, 0.001}}]}, 
   {Hue[0.684], LineBox[{{0.684, 0}, {0.684, 0.001}}]}, 
   {Hue[0.685], LineBox[{{0.685, 0}, {0.685, 0.001}}]}, 
   {Hue[0.686], LineBox[{{0.686, 0}, {0.686, 0.001}}]}, 
   {Hue[0.687], LineBox[{{0.687, 0}, {0.687, 0.001}}]}, 
   {Hue[0.6880000000000001], 
    LineBox[{{0.6880000000000001, 0}, {0.6880000000000001, 0.001}}]}, 
   {Hue[0.6890000000000001], 
    LineBox[{{0.6890000000000001, 0}, {0.6890000000000001, 0.001}}]}, 
   {Hue[0.6900000000000001], 
    LineBox[{{0.6900000000000001, 0}, {0.6900000000000001, 0.001}}]}, 
   {Hue[0.6910000000000001], 
    LineBox[{{0.6910000000000001, 0}, {0.6910000000000001, 0.001}}]}, 
   {Hue[0.6920000000000001], 
    LineBox[{{0.6920000000000001, 0}, {0.6920000000000001, 0.001}}]}, 
   {Hue[0.6930000000000001], 
    LineBox[{{0.6930000000000001, 0}, {0.6930000000000001, 0.001}}]}, 
   {Hue[0.6940000000000001], 
    LineBox[{{0.6940000000000001, 0}, {0.6940000000000001, 0.001}}]}, 
   {Hue[0.6950000000000001], 
    LineBox[{{0.6950000000000001, 0}, {0.6950000000000001, 0.001}}]}, 
   {Hue[0.6960000000000001], 
    LineBox[{{0.6960000000000001, 0}, {0.6960000000000001, 0.001}}]}, 
   {Hue[0.6970000000000001], 
    LineBox[{{0.6970000000000001, 0}, {0.6970000000000001, 0.001}}]}, 
   {Hue[0.6980000000000001], 
    LineBox[{{0.6980000000000001, 0}, {0.6980000000000001, 0.001}}]}, 
   {Hue[0.6990000000000001], 
    LineBox[{{0.6990000000000001, 0}, {0.6990000000000001, 0.001}}]}, 
   {Hue[0.7000000000000001], 
    LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 0.001}}]}, 
   {Hue[0.7010000000000001], 
    LineBox[{{0.7010000000000001, 0}, {0.7010000000000001, 0.001}}]}, 
   {Hue[0.7020000000000001], 
    LineBox[{{0.7020000000000001, 0}, {0.7020000000000001, 0.001}}]}, 
   {Hue[0.7030000000000001], 
    LineBox[{{0.7030000000000001, 0}, {0.7030000000000001, 0.001}}]}, 
   {Hue[0.704], LineBox[{{0.704, 0}, {0.704, 0.001}}]}, 
   {Hue[0.705], LineBox[{{0.705, 0}, {0.705, 0.001}}]}, 
   {Hue[0.706], LineBox[{{0.706, 0}, {0.706, 0.001}}]}, 
   {Hue[0.707], LineBox[{{0.707, 0}, {0.707, 0.001}}]}, 
   {Hue[0.708], LineBox[{{0.708, 0}, {0.708, 0.001}}]}, 
   {Hue[0.709], LineBox[{{0.709, 0}, {0.709, 0.001}}]}, 
   {Hue[0.71], LineBox[{{0.71, 0}, {0.71, 0.001}}]}, 
   {Hue[0.711], LineBox[{{0.711, 0}, {0.711, 0.001}}]}, 
   {Hue[0.712], LineBox[{{0.712, 0}, {0.712, 0.001}}]}, 
   {Hue[0.713], LineBox[{{0.713, 0}, {0.713, 0.001}}]}, 
   {Hue[0.714], LineBox[{{0.714, 0}, {0.714, 0.001}}]}, 
   {Hue[0.715], LineBox[{{0.715, 0}, {0.715, 0.001}}]}, 
   {Hue[0.716], LineBox[{{0.716, 0}, {0.716, 0.001}}]}, 
   {Hue[0.717], LineBox[{{0.717, 0}, {0.717, 0.001}}]}, 
   {Hue[0.718], LineBox[{{0.718, 0}, {0.718, 0.001}}]}, 
   {Hue[0.719], LineBox[{{0.719, 0}, {0.719, 0.001}}]}, 
   {Hue[0.72], LineBox[{{0.72, 0}, {0.72, 0.001}}]}, 
   {Hue[0.721], LineBox[{{0.721, 0}, {0.721, 0.001}}]}, 
   {Hue[0.722], LineBox[{{0.722, 0}, {0.722, 0.001}}]}, 
   {Hue[0.723], LineBox[{{0.723, 0}, {0.723, 0.001}}]}, 
   {Hue[0.724], LineBox[{{0.724, 0}, {0.724, 0.001}}]}, 
   {Hue[0.725], LineBox[{{0.725, 0}, {0.725, 0.001}}]}, 
   {Hue[0.726], LineBox[{{0.726, 0}, {0.726, 0.001}}]}, 
   {Hue[0.727], LineBox[{{0.727, 0}, {0.727, 0.001}}]}, 
   {Hue[0.728], LineBox[{{0.728, 0}, {0.728, 0.001}}]}, 
   {Hue[0.729], LineBox[{{0.729, 0}, {0.729, 0.001}}]}, 
   {Hue[0.73], LineBox[{{0.73, 0}, {0.73, 0.001}}]}, 
   {Hue[0.731], LineBox[{{0.731, 0}, {0.731, 0.001}}]}, 
   {Hue[0.732], LineBox[{{0.732, 0}, {0.732, 0.001}}]}, 
   {Hue[0.733], LineBox[{{0.733, 0}, {0.733, 0.001}}]}, 
   {Hue[0.734], LineBox[{{0.734, 0}, {0.734, 0.001}}]}, 
   {Hue[0.735], LineBox[{{0.735, 0}, {0.735, 0.001}}]}, 
   {Hue[0.736], LineBox[{{0.736, 0}, {0.736, 0.001}}]}, 
   {Hue[0.737], LineBox[{{0.737, 0}, {0.737, 0.001}}]}, 
   {Hue[0.738], LineBox[{{0.738, 0}, {0.738, 0.001}}]}, 
   {Hue[0.739], LineBox[{{0.739, 0}, {0.739, 0.001}}]}, 
   {Hue[0.74], LineBox[{{0.74, 0}, {0.74, 0.001}}]}, 
   {Hue[0.741], LineBox[{{0.741, 0}, {0.741, 0.001}}]}, 
   {Hue[0.742], LineBox[{{0.742, 0}, {0.742, 0.001}}]}, 
   {Hue[0.743], LineBox[{{0.743, 0}, {0.743, 0.001}}]}, 
   {Hue[0.744], LineBox[{{0.744, 0}, {0.744, 0.001}}]}, 
   {Hue[0.745], LineBox[{{0.745, 0}, {0.745, 0.001}}]}, 
   {Hue[0.746], LineBox[{{0.746, 0}, {0.746, 0.001}}]}, 
   {Hue[0.747], LineBox[{{0.747, 0}, {0.747, 0.001}}]}, 
   {Hue[0.748], LineBox[{{0.748, 0}, {0.748, 0.001}}]}, 
   {Hue[0.749], LineBox[{{0.749, 0}, {0.749, 0.001}}]}, 
   {Hue[0.75], LineBox[{{0.75, 0}, {0.75, 0.001}}]}, 
   {Hue[0.751], LineBox[{{0.751, 0}, {0.751, 0.001}}]}, 
   {Hue[0.752], LineBox[{{0.752, 0}, {0.752, 0.001}}]}, 
   {Hue[0.753], LineBox[{{0.753, 0}, {0.753, 0.001}}]}, 
   {Hue[0.754], LineBox[{{0.754, 0}, {0.754, 0.001}}]}, 
   {Hue[0.755], LineBox[{{0.755, 0}, {0.755, 0.001}}]}, 
   {Hue[0.756], LineBox[{{0.756, 0}, {0.756, 0.001}}]}, 
   {Hue[0.757], LineBox[{{0.757, 0}, {0.757, 0.001}}]}, 
   {Hue[0.758], LineBox[{{0.758, 0}, {0.758, 0.001}}]}, 
   {Hue[0.759], LineBox[{{0.759, 0}, {0.759, 0.001}}]}, 
   {Hue[0.76], LineBox[{{0.76, 0}, {0.76, 0.001}}]}, 
   {Hue[0.761], LineBox[{{0.761, 0}, {0.761, 0.001}}]}, 
   {Hue[0.762], LineBox[{{0.762, 0}, {0.762, 0.001}}]}, 
   {Hue[0.763], LineBox[{{0.763, 0}, {0.763, 0.001}}]}, 
   {Hue[0.764], LineBox[{{0.764, 0}, {0.764, 0.001}}]}, 
   {Hue[0.765], LineBox[{{0.765, 0}, {0.765, 0.001}}]}, 
   {Hue[0.766], LineBox[{{0.766, 0}, {0.766, 0.001}}]}, 
   {Hue[0.767], LineBox[{{0.767, 0}, {0.767, 0.001}}]}, 
   {Hue[0.768], LineBox[{{0.768, 0}, {0.768, 0.001}}]}, 
   {Hue[0.769], LineBox[{{0.769, 0}, {0.769, 0.001}}]}, 
   {Hue[0.77], LineBox[{{0.77, 0}, {0.77, 0.001}}]}, 
   {Hue[0.771], LineBox[{{0.771, 0}, {0.771, 0.001}}]}, 
   {Hue[0.772], LineBox[{{0.772, 0}, {0.772, 0.001}}]}, 
   {Hue[0.773], LineBox[{{0.773, 0}, {0.773, 0.001}}]}, 
   {Hue[0.774], LineBox[{{0.774, 0}, {0.774, 0.001}}]}, 
   {Hue[0.775], LineBox[{{0.775, 0}, {0.775, 0.001}}]}, 
   {Hue[0.776], LineBox[{{0.776, 0}, {0.776, 0.001}}]}, 
   {Hue[0.777], LineBox[{{0.777, 0}, {0.777, 0.001}}]}, 
   {Hue[0.778], LineBox[{{0.778, 0}, {0.778, 0.001}}]}, 
   {Hue[0.779], LineBox[{{0.779, 0}, {0.779, 0.001}}]}, 
   {Hue[0.78], LineBox[{{0.78, 0}, {0.78, 0.001}}]}, 
   {Hue[0.781], LineBox[{{0.781, 0}, {0.781, 0.001}}]}, 
   {Hue[0.782], LineBox[{{0.782, 0}, {0.782, 0.001}}]}, 
   {Hue[0.783], LineBox[{{0.783, 0}, {0.783, 0.001}}]}, 
   {Hue[0.784], LineBox[{{0.784, 0}, {0.784, 0.001}}]}, 
   {Hue[0.785], LineBox[{{0.785, 0}, {0.785, 0.001}}]}, 
   {Hue[0.786], LineBox[{{0.786, 0}, {0.786, 0.001}}]}, 
   {Hue[0.787], LineBox[{{0.787, 0}, {0.787, 0.001}}]}, 
   {Hue[0.788], LineBox[{{0.788, 0}, {0.788, 0.001}}]}, 
   {Hue[0.789], LineBox[{{0.789, 0}, {0.789, 0.001}}]}, 
   {Hue[0.79], LineBox[{{0.79, 0}, {0.79, 0.001}}]}, 
   {Hue[0.791], LineBox[{{0.791, 0}, {0.791, 0.001}}]}, 
   {Hue[0.792], LineBox[{{0.792, 0}, {0.792, 0.001}}]}, 
   {Hue[0.793], LineBox[{{0.793, 0}, {0.793, 0.001}}]}, 
   {Hue[0.794], LineBox[{{0.794, 0}, {0.794, 0.001}}]}, 
   {Hue[0.795], LineBox[{{0.795, 0}, {0.795, 0.001}}]}, 
   {Hue[0.796], LineBox[{{0.796, 0}, {0.796, 0.001}}]}, 
   {Hue[0.797], LineBox[{{0.797, 0}, {0.797, 0.001}}]}, 
   {Hue[0.798], LineBox[{{0.798, 0}, {0.798, 0.001}}]}, 
   {Hue[0.799], LineBox[{{0.799, 0}, {0.799, 0.001}}]}, 
   {Hue[0.8], LineBox[{{0.8, 0}, {0.8, 0.001}}]}, 
   {Hue[0.801], LineBox[{{0.801, 0}, {0.801, 0.001}}]}, 
   {Hue[0.802], LineBox[{{0.802, 0}, {0.802, 0.001}}]}, 
   {Hue[0.803], LineBox[{{0.803, 0}, {0.803, 0.001}}]}, 
   {Hue[0.804], LineBox[{{0.804, 0}, {0.804, 0.001}}]}, 
   {Hue[0.805], LineBox[{{0.805, 0}, {0.805, 0.001}}]}, 
   {Hue[0.806], LineBox[{{0.806, 0}, {0.806, 0.001}}]}, 
   {Hue[0.807], LineBox[{{0.807, 0}, {0.807, 0.001}}]}, 
   {Hue[0.808], LineBox[{{0.808, 0}, {0.808, 0.001}}]}, 
   {Hue[0.809], LineBox[{{0.809, 0}, {0.809, 0.001}}]}, 
   {Hue[0.81], LineBox[{{0.81, 0}, {0.81, 0.001}}]}, 
   {Hue[0.811], LineBox[{{0.811, 0}, {0.811, 0.001}}]}, 
   {Hue[0.812], LineBox[{{0.812, 0}, {0.812, 0.001}}]}, 
   {Hue[0.8130000000000001], 
    LineBox[{{0.8130000000000001, 0}, {0.8130000000000001, 0.001}}]}, 
   {Hue[0.8140000000000001], 
    LineBox[{{0.8140000000000001, 0}, {0.8140000000000001, 0.001}}]}, 
   {Hue[0.8150000000000001], 
    LineBox[{{0.8150000000000001, 0}, {0.8150000000000001, 0.001}}]}, 
   {Hue[0.8160000000000001], 
    LineBox[{{0.8160000000000001, 0}, {0.8160000000000001, 0.001}}]}, 
   {Hue[0.8170000000000001], 
    LineBox[{{0.8170000000000001, 0}, {0.8170000000000001, 0.001}}]}, 
   {Hue[0.8180000000000001], 
    LineBox[{{0.8180000000000001, 0}, {0.8180000000000001, 0.001}}]}, 
   {Hue[0.8190000000000001], 
    LineBox[{{0.8190000000000001, 0}, {0.8190000000000001, 0.001}}]}, 
   {Hue[0.8200000000000001], 
    LineBox[{{0.8200000000000001, 0}, {0.8200000000000001, 0.001}}]}, 
   {Hue[0.8210000000000001], 
    LineBox[{{0.8210000000000001, 0}, {0.8210000000000001, 0.001}}]}, 
   {Hue[0.8220000000000001], 
    LineBox[{{0.8220000000000001, 0}, {0.8220000000000001, 0.001}}]}, 
   {Hue[0.8230000000000001], 
    LineBox[{{0.8230000000000001, 0}, {0.8230000000000001, 0.001}}]}, 
   {Hue[0.8240000000000001], 
    LineBox[{{0.8240000000000001, 0}, {0.8240000000000001, 0.001}}]}, 
   {Hue[0.8250000000000001], 
    LineBox[{{0.8250000000000001, 0}, {0.8250000000000001, 0.001}}]}, 
   {Hue[0.8260000000000001], 
    LineBox[{{0.8260000000000001, 0}, {0.8260000000000001, 0.001}}]}, 
   {Hue[0.8270000000000001], 
    LineBox[{{0.8270000000000001, 0}, {0.8270000000000001, 0.001}}]}, 
   {Hue[0.8280000000000001], 
    LineBox[{{0.8280000000000001, 0}, {0.8280000000000001, 0.001}}]}, 
   {Hue[0.8290000000000001], 
    LineBox[{{0.8290000000000001, 0}, {0.8290000000000001, 0.001}}]}, 
   {Hue[0.8300000000000001], 
    LineBox[{{0.8300000000000001, 0}, {0.8300000000000001, 0.001}}]}, 
   {Hue[0.8310000000000001], 
    LineBox[{{0.8310000000000001, 0}, {0.8310000000000001, 0.001}}]}, 
   {Hue[0.8320000000000001], 
    LineBox[{{0.8320000000000001, 0}, {0.8320000000000001, 0.001}}]}, 
   {Hue[0.833], LineBox[{{0.833, 0}, {0.833, 0.001}}]}, 
   {Hue[0.834], LineBox[{{0.834, 0}, {0.834, 0.001}}]}, 
   {Hue[0.835], LineBox[{{0.835, 0}, {0.835, 0.001}}]}, 
   {Hue[0.836], LineBox[{{0.836, 0}, {0.836, 0.001}}]}, 
   {Hue[0.837], LineBox[{{0.837, 0}, {0.837, 0.001}}]}, 
   {Hue[0.838], LineBox[{{0.838, 0}, {0.838, 0.001}}]}, 
   {Hue[0.839], LineBox[{{0.839, 0}, {0.839, 0.001}}]}, 
   {Hue[0.84], LineBox[{{0.84, 0}, {0.84, 0.001}}]}, 
   {Hue[0.841], LineBox[{{0.841, 0}, {0.841, 0.001}}]}, 
   {Hue[0.842], LineBox[{{0.842, 0}, {0.842, 0.001}}]}, 
   {Hue[0.843], LineBox[{{0.843, 0}, {0.843, 0.001}}]}, 
   {Hue[0.844], LineBox[{{0.844, 0}, {0.844, 0.001}}]}, 
   {Hue[0.845], LineBox[{{0.845, 0}, {0.845, 0.001}}]}, 
   {Hue[0.846], LineBox[{{0.846, 0}, {0.846, 0.001}}]}, 
   {Hue[0.847], LineBox[{{0.847, 0}, {0.847, 0.001}}]}, 
   {Hue[0.848], LineBox[{{0.848, 0}, {0.848, 0.001}}]}, 
   {Hue[0.849], LineBox[{{0.849, 0}, {0.849, 0.001}}]}, 
   {Hue[0.85], LineBox[{{0.85, 0}, {0.85, 0.001}}]}, 
   {Hue[0.851], LineBox[{{0.851, 0}, {0.851, 0.001}}]}, 
   {Hue[0.852], LineBox[{{0.852, 0}, {0.852, 0.001}}]}, 
   {Hue[0.853], LineBox[{{0.853, 0}, {0.853, 0.001}}]}, 
   {Hue[0.854], LineBox[{{0.854, 0}, {0.854, 0.001}}]}, 
   {Hue[0.855], LineBox[{{0.855, 0}, {0.855, 0.001}}]}, 
   {Hue[0.856], LineBox[{{0.856, 0}, {0.856, 0.001}}]}, 
   {Hue[0.857], LineBox[{{0.857, 0}, {0.857, 0.001}}]}, 
   {Hue[0.858], LineBox[{{0.858, 0}, {0.858, 0.001}}]}, 
   {Hue[0.859], LineBox[{{0.859, 0}, {0.859, 0.001}}]}, 
   {Hue[0.86], LineBox[{{0.86, 0}, {0.86, 0.001}}]}, 
   {Hue[0.861], LineBox[{{0.861, 0}, {0.861, 0.001}}]}, 
   {Hue[0.862], LineBox[{{0.862, 0}, {0.862, 0.001}}]}, 
   {Hue[0.863], LineBox[{{0.863, 0}, {0.863, 0.001}}]}, 
   {Hue[0.864], LineBox[{{0.864, 0}, {0.864, 0.001}}]}, 
   {Hue[0.865], LineBox[{{0.865, 0}, {0.865, 0.001}}]}, 
   {Hue[0.866], LineBox[{{0.866, 0}, {0.866, 0.001}}]}, 
   {Hue[0.867], LineBox[{{0.867, 0}, {0.867, 0.001}}]}, 
   {Hue[0.868], LineBox[{{0.868, 0}, {0.868, 0.001}}]}, 
   {Hue[0.869], LineBox[{{0.869, 0}, {0.869, 0.001}}]}, 
   {Hue[0.87], LineBox[{{0.87, 0}, {0.87, 0.001}}]}, 
   {Hue[0.871], LineBox[{{0.871, 0}, {0.871, 0.001}}]}, 
   {Hue[0.872], LineBox[{{0.872, 0}, {0.872, 0.001}}]}, 
   {Hue[0.873], LineBox[{{0.873, 0}, {0.873, 0.001}}]}, 
   {Hue[0.874], LineBox[{{0.874, 0}, {0.874, 0.001}}]}, 
   {Hue[0.875], LineBox[{{0.875, 0}, {0.875, 0.001}}]}, 
   {Hue[0.876], LineBox[{{0.876, 0}, {0.876, 0.001}}]}, 
   {Hue[0.877], LineBox[{{0.877, 0}, {0.877, 0.001}}]}, 
   {Hue[0.878], LineBox[{{0.878, 0}, {0.878, 0.001}}]}, 
   {Hue[0.879], LineBox[{{0.879, 0}, {0.879, 0.001}}]}, 
   {Hue[0.88], LineBox[{{0.88, 0}, {0.88, 0.001}}]}, 
   {Hue[0.881], LineBox[{{0.881, 0}, {0.881, 0.001}}]}, 
   {Hue[0.882], LineBox[{{0.882, 0}, {0.882, 0.001}}]}, 
   {Hue[0.883], LineBox[{{0.883, 0}, {0.883, 0.001}}]}, 
   {Hue[0.884], LineBox[{{0.884, 0}, {0.884, 0.001}}]}, 
   {Hue[0.885], LineBox[{{0.885, 0}, {0.885, 0.001}}]}, 
   {Hue[0.886], LineBox[{{0.886, 0}, {0.886, 0.001}}]}, 
   {Hue[0.887], LineBox[{{0.887, 0}, {0.887, 0.001}}]}, 
   {Hue[0.888], LineBox[{{0.888, 0}, {0.888, 0.001}}]}, 
   {Hue[0.889], LineBox[{{0.889, 0}, {0.889, 0.001}}]}, 
   {Hue[0.89], LineBox[{{0.89, 0}, {0.89, 0.001}}]}, 
   {Hue[0.891], LineBox[{{0.891, 0}, {0.891, 0.001}}]}, 
   {Hue[0.892], LineBox[{{0.892, 0}, {0.892, 0.001}}]}, 
   {Hue[0.893], LineBox[{{0.893, 0}, {0.893, 0.001}}]}, 
   {Hue[0.894], LineBox[{{0.894, 0}, {0.894, 0.001}}]}, 
   {Hue[0.895], LineBox[{{0.895, 0}, {0.895, 0.001}}]}, 
   {Hue[0.896], LineBox[{{0.896, 0}, {0.896, 0.001}}]}, 
   {Hue[0.897], LineBox[{{0.897, 0}, {0.897, 0.001}}]}, 
   {Hue[0.898], LineBox[{{0.898, 0}, {0.898, 0.001}}]}, 
   {Hue[0.899], LineBox[{{0.899, 0}, {0.899, 0.001}}]}, 
   {Hue[0.9], LineBox[{{0.9, 0}, {0.9, 0.001}}]}, 
   {Hue[0.901], LineBox[{{0.901, 0}, {0.901, 0.001}}]}, 
   {Hue[0.902], LineBox[{{0.902, 0}, {0.902, 0.001}}]}, 
   {Hue[0.903], LineBox[{{0.903, 0}, {0.903, 0.001}}]}, 
   {Hue[0.904], LineBox[{{0.904, 0}, {0.904, 0.001}}]}, 
   {Hue[0.905], LineBox[{{0.905, 0}, {0.905, 0.001}}]}, 
   {Hue[0.906], LineBox[{{0.906, 0}, {0.906, 0.001}}]}, 
   {Hue[0.907], LineBox[{{0.907, 0}, {0.907, 0.001}}]}, 
   {Hue[0.908], LineBox[{{0.908, 0}, {0.908, 0.001}}]}, 
   {Hue[0.909], LineBox[{{0.909, 0}, {0.909, 0.001}}]}, 
   {Hue[0.91], LineBox[{{0.91, 0}, {0.91, 0.001}}]}, 
   {Hue[0.911], LineBox[{{0.911, 0}, {0.911, 0.001}}]}, 
   {Hue[0.912], LineBox[{{0.912, 0}, {0.912, 0.001}}]}, 
   {Hue[0.913], LineBox[{{0.913, 0}, {0.913, 0.001}}]}, 
   {Hue[0.914], LineBox[{{0.914, 0}, {0.914, 0.001}}]}, 
   {Hue[0.915], LineBox[{{0.915, 0}, {0.915, 0.001}}]}, 
   {Hue[0.916], LineBox[{{0.916, 0}, {0.916, 0.001}}]}, 
   {Hue[0.917], LineBox[{{0.917, 0}, {0.917, 0.001}}]}, 
   {Hue[0.918], LineBox[{{0.918, 0}, {0.918, 0.001}}]}, 
   {Hue[0.919], LineBox[{{0.919, 0}, {0.919, 0.001}}]}, 
   {Hue[0.92], LineBox[{{0.92, 0}, {0.92, 0.001}}]}, 
   {Hue[0.921], LineBox[{{0.921, 0}, {0.921, 0.001}}]}, 
   {Hue[0.922], LineBox[{{0.922, 0}, {0.922, 0.001}}]}, 
   {Hue[0.923], LineBox[{{0.923, 0}, {0.923, 0.001}}]}, 
   {Hue[0.924], LineBox[{{0.924, 0}, {0.924, 0.001}}]}, 
   {Hue[0.925], LineBox[{{0.925, 0}, {0.925, 0.001}}]}, 
   {Hue[0.926], LineBox[{{0.926, 0}, {0.926, 0.001}}]}, 
   {Hue[0.927], LineBox[{{0.927, 0}, {0.927, 0.001}}]}, 
   {Hue[0.928], LineBox[{{0.928, 0}, {0.928, 0.001}}]}, 
   {Hue[0.929], LineBox[{{0.929, 0}, {0.929, 0.001}}]}, 
   {Hue[0.93], LineBox[{{0.93, 0}, {0.93, 0.001}}]}, 
   {Hue[0.931], LineBox[{{0.931, 0}, {0.931, 0.001}}]}, 
   {Hue[0.932], LineBox[{{0.932, 0}, {0.932, 0.001}}]}, 
   {Hue[0.933], LineBox[{{0.933, 0}, {0.933, 0.001}}]}, 
   {Hue[0.934], LineBox[{{0.934, 0}, {0.934, 0.001}}]}, 
   {Hue[0.935], LineBox[{{0.935, 0}, {0.935, 0.001}}]}, 
   {Hue[0.936], LineBox[{{0.936, 0}, {0.936, 0.001}}]}, 
   {Hue[0.937], LineBox[{{0.937, 0}, {0.937, 0.001}}]}, 
   {Hue[0.9380000000000001], 
    LineBox[{{0.9380000000000001, 0}, {0.9380000000000001, 0.001}}]}, 
   {Hue[0.9390000000000001], 
    LineBox[{{0.9390000000000001, 0}, {0.9390000000000001, 0.001}}]}, 
   {Hue[0.9400000000000001], 
    LineBox[{{0.9400000000000001, 0}, {0.9400000000000001, 0.001}}]}, 
   {Hue[0.9410000000000001], 
    LineBox[{{0.9410000000000001, 0}, {0.9410000000000001, 0.001}}]}, 
   {Hue[0.9420000000000001], 
    LineBox[{{0.9420000000000001, 0}, {0.9420000000000001, 0.001}}]}, 
   {Hue[0.9430000000000001], 
    LineBox[{{0.9430000000000001, 0}, {0.9430000000000001, 0.001}}]}, 
   {Hue[0.9440000000000001], 
    LineBox[{{0.9440000000000001, 0}, {0.9440000000000001, 0.001}}]}, 
   {Hue[0.9450000000000001], 
    LineBox[{{0.9450000000000001, 0}, {0.9450000000000001, 0.001}}]}, 
   {Hue[0.9460000000000001], 
    LineBox[{{0.9460000000000001, 0}, {0.9460000000000001, 0.001}}]}, 
   {Hue[0.9470000000000001], 
    LineBox[{{0.9470000000000001, 0}, {0.9470000000000001, 0.001}}]}, 
   {Hue[0.9480000000000001], 
    LineBox[{{0.9480000000000001, 0}, {0.9480000000000001, 0.001}}]}, 
   {Hue[0.9490000000000001], 
    LineBox[{{0.9490000000000001, 0}, {0.9490000000000001, 0.001}}]}, 
   {Hue[0.9500000000000001], 
    LineBox[{{0.9500000000000001, 0}, {0.9500000000000001, 0.001}}]}, 
   {Hue[0.9510000000000001], 
    LineBox[{{0.9510000000000001, 0}, {0.9510000000000001, 0.001}}]}, 
   {Hue[0.9520000000000001], 
    LineBox[{{0.9520000000000001, 0}, {0.9520000000000001, 0.001}}]}, 
   {Hue[0.9530000000000001], 
    LineBox[{{0.9530000000000001, 0}, {0.9530000000000001, 0.001}}]}, 
   {Hue[0.9540000000000001], 
    LineBox[{{0.9540000000000001, 0}, {0.9540000000000001, 0.001}}]}, 
   {Hue[0.9550000000000001], 
    LineBox[{{0.9550000000000001, 0}, {0.9550000000000001, 0.001}}]}, 
   {Hue[0.9560000000000001], 
    LineBox[{{0.9560000000000001, 0}, {0.9560000000000001, 0.001}}]}, 
   {Hue[0.9570000000000001], 
    LineBox[{{0.9570000000000001, 0}, {0.9570000000000001, 0.001}}]}, 
   {Hue[0.9580000000000001], 
    LineBox[{{0.9580000000000001, 0}, {0.9580000000000001, 0.001}}]}, 
   {Hue[0.9590000000000001], 
    LineBox[{{0.9590000000000001, 0}, {0.9590000000000001, 0.001}}]}, 
   {Hue[0.96], LineBox[{{0.96, 0}, {0.96, 0.001}}]}, 
   {Hue[0.961], LineBox[{{0.961, 0}, {0.961, 0.001}}]}, 
   {Hue[0.962], LineBox[{{0.962, 0}, {0.962, 0.001}}]}, 
   {Hue[0.963], LineBox[{{0.963, 0}, {0.963, 0.001}}]}, 
   {Hue[0.964], LineBox[{{0.964, 0}, {0.964, 0.001}}]}, 
   {Hue[0.965], LineBox[{{0.965, 0}, {0.965, 0.001}}]}, 
   {Hue[0.966], LineBox[{{0.966, 0}, {0.966, 0.001}}]}, 
   {Hue[0.967], LineBox[{{0.967, 0}, {0.967, 0.001}}]}, 
   {Hue[0.968], LineBox[{{0.968, 0}, {0.968, 0.001}}]}, 
   {Hue[0.969], LineBox[{{0.969, 0}, {0.969, 0.001}}]}, 
   {Hue[0.97], LineBox[{{0.97, 0}, {0.97, 0.001}}]}, 
   {Hue[0.971], LineBox[{{0.971, 0}, {0.971, 0.001}}]}, 
   {Hue[0.972], LineBox[{{0.972, 0}, {0.972, 0.001}}]}, 
   {Hue[0.973], LineBox[{{0.973, 0}, {0.973, 0.001}}]}, 
   {Hue[0.974], LineBox[{{0.974, 0}, {0.974, 0.001}}]}, 
   {Hue[0.975], LineBox[{{0.975, 0}, {0.975, 0.001}}]}, 
   {Hue[0.976], LineBox[{{0.976, 0}, {0.976, 0.001}}]}, 
   {Hue[0.977], LineBox[{{0.977, 0}, {0.977, 0.001}}]}, 
   {Hue[0.978], LineBox[{{0.978, 0}, {0.978, 0.001}}]}, 
   {Hue[0.979], LineBox[{{0.979, 0}, {0.979, 0.001}}]}, 
   {Hue[0.98], LineBox[{{0.98, 0}, {0.98, 0.001}}]}, 
   {Hue[0.981], LineBox[{{0.981, 0}, {0.981, 0.001}}]}, 
   {Hue[0.982], LineBox[{{0.982, 0}, {0.982, 0.001}}]}, 
   {Hue[0.983], LineBox[{{0.983, 0}, {0.983, 0.001}}]}, 
   {Hue[0.984], LineBox[{{0.984, 0}, {0.984, 0.001}}]}, 
   {Hue[0.985], LineBox[{{0.985, 0}, {0.985, 0.001}}]}, 
   {Hue[0.986], LineBox[{{0.986, 0}, {0.986, 0.001}}]}, 
   {Hue[0.987], LineBox[{{0.987, 0}, {0.987, 0.001}}]}, 
   {Hue[0.988], LineBox[{{0.988, 0}, {0.988, 0.001}}]}, 
   {Hue[0.989], LineBox[{{0.989, 0}, {0.989, 0.001}}]}, 
   {Hue[0.99], LineBox[{{0.99, 0}, {0.99, 0.001}}]}, 
   {Hue[0.991], LineBox[{{0.991, 0}, {0.991, 0.001}}]}, 
   {Hue[0.992], LineBox[{{0.992, 0}, {0.992, 0.001}}]}, 
   {Hue[0.993], LineBox[{{0.993, 0}, {0.993, 0.001}}]}, 
   {Hue[0.994], LineBox[{{0.994, 0}, {0.994, 0.001}}]}, 
   {Hue[0.995], LineBox[{{0.995, 0}, {0.995, 0.001}}]}, 
   {Hue[0.996], LineBox[{{0.996, 0}, {0.996, 0.001}}]}, 
   {Hue[0.997], LineBox[{{0.997, 0}, {0.997, 0.001}}]}, 
   {Hue[0.998], LineBox[{{0.998, 0}, {0.998, 0.001}}]}, 
   {Hue[0.999], LineBox[{{0.999, 0}, {0.999, 0.001}}]}, 
   {Hue[1.], LineBox[{{1., 0}, {1., 0.001}}]}},
  ImageSize->800]], "Output",ExpressionUUID->"108186fd-ab12-4e81-90ca-\
2fe49827872e"]
}, Open  ]],

Cell["\<\
Morphological skeletonization can also be applied to grayscale images. This \
interactive example compares the direct calculation of the skeleton with \
using the built-in function Thinning[ ].\
\>", "Text",
 CellChangeTimes->{{3.55173845908422*^9, 3.5517384709237957`*^9}, 
   3.5517386506049356`*^9, {3.5517953506514997`*^9, 3.55179535408248*^9}, {
   3.551797785765628*^9, 3.5517977988269587`*^9}, {3.551798342316704*^9, 
   3.551798371988421*^9}},ExpressionUUID->"7a6187b1-d05f-4e6e-8274-\
dcabc06513be"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelMorphSkelXRay", "=", 
   "\"\<Applying the morphological skeleton to canvas x-rays\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoMorphSkelXRay", "=", 
   "\"\<Two ways of implementing the skeleton: the Thinning[ ] command (which \
has no options) and the difference between the opening and the erosion, \
iterated several times.\\n\\nThere are advantages to each:\\nIt's good to \
have no options becasue then there's no need to pick a parameter\\nIt's \
better to have options because then you can tailor the results.\\n\\nApplied \
to F634, the method does a reasonable job separating out all the thread tops.\
\\n\\nIn some cases (for example, L10) it may be advantageous to work with \
the positive image (and to locate the holes in the thread) rather than with \
the negative (and locate the tops of the threads)\>\""}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "img", "}"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"invert", "\[Equal]", "\"\<negative\>\""}], ",", 
        RowBox[{"img", "=", 
         RowBox[{"allImagesXray", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"img", "=", 
         RowBox[{"ColorNegate", "[", 
          RowBox[{"allImagesXray", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"GraphicsRow", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"img", ",", 
          RowBox[{"ImageAdjust", "[", 
           RowBox[{"Image", "[", 
            RowBox[{"Total", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ImageData", "[", 
                RowBox[{"ImageSubtract", "[", 
                 RowBox[{
                  RowBox[{"Erosion", "[", 
                   RowBox[{"img", ",", "r"}], "]"}], ",", 
                  RowBox[{"Opening", "[", 
                   RowBox[{
                    RowBox[{"Erosion", "[", 
                    RowBox[{"img", ",", "r"}], "]"}], ",", "1"}], "]"}]}], 
                 "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ",", "1", ",", "50"}], "}"}]}], "]"}], "]"}], 
            "]"}], "]"}], ",", 
          RowBox[{"ImageAdjust", "[", 
           RowBox[{"Thinning", "[", 
            RowBox[{"img", ",", "10", ",", "t"}], "]"}], "]"}]}], "}"}], ",", 
        
        RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "f634Tile", ",", "\"\<image\>\""}], "}"}], ",", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Range", "[", "numFilesX", "]"}], "\[Rule]", 
           "imageNamesX"}], "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "30", "]"}], ",", " ", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"invert", ",", "\"\<positive\>\"", ",", "\"\<\>\""}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"\"\<negative\>\"", ",", "\"\<positive\>\""}], "}"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "30", "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", "0.58", ",", "\"\<threshold\>\""}], "}"}], ",", 
         "0", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"info", "[", "infoMorphSkelXRay", "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"labelMorphSkelXRay", ",", "Medium"}], "]"}]}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "invert", ",", "t"}], "}"}]}], ",", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "saveDef"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.551720229834881*^9, {3.551721309514392*^9, 3.5517214222725363`*^9}, {
   3.551721557776249*^9, 3.5517215672251043`*^9}, {3.551721730801564*^9, 
   3.551721735389834*^9}, {3.551721952062069*^9, 3.551721986875291*^9}, {
   3.5517220306183987`*^9, 3.55172203183545*^9}, {3.5517363004270563`*^9, 
   3.551736314881525*^9}, {3.5517368206366873`*^9, 3.551736820747697*^9}, {
   3.551736879893882*^9, 3.551736899762793*^9}, {3.551736957602626*^9, 
   3.55173700267141*^9}, {3.5517981379824677`*^9, 3.5517981714069653`*^9}, {
   3.551798213492139*^9, 3.551798241691128*^9}, {3.551798274035735*^9, 
   3.5517983022319183`*^9}, {3.551798381765028*^9, 3.551798393765169*^9}, {
   3.5525803551814528`*^9, 3.552580411547421*^9}, {3.5525961793398037`*^9, 
   3.552596216822576*^9}, {3.552689144196113*^9, 3.5526891506880302`*^9}, {
   3.552689245839636*^9, 3.552689314220914*^9}, {3.5526893604143353`*^9, 
   3.552689450329999*^9}, {3.552689488322274*^9, 3.5526894895945177`*^9}, {
   3.552689530781617*^9, 3.5526895720526876`*^9}, {3.552689675494248*^9, 
   3.552689775979109*^9}, {3.5526898444044733`*^9, 3.552689846316188*^9}, {
   3.553358515687196*^9, 3.5533585255151176`*^9}, 3.553704601220138*^9, {
   3.5537951644702682`*^9, 3.553795174480833*^9}, {3.555105681265564*^9, 
   3.555105681948945*^9}, {3.5551549596742983`*^9, 3.5551549601379147`*^9}},
 CellTags->
  "labelMorphSkelXRay",ExpressionUUID->"e75bebd1-c5c8-4a15-b551-4300df0afdef"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 7, $CellContext`invert$$ = 
    "positive", $CellContext`t$$ = 0.58, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 7, "image"}, {
      1 -> "F458Diagonal12", 2 -> "F458Diagonal13", 3 -> "F458Diagonal29", 4 -> 
       "F458Diagonal33", 5 -> "F458Diagonal36", 6 -> "F458Diagonal45", 7 -> 
       "F634Tile", 8 -> "F659Diagonal13", 9 -> "L07 Patch 1408-1731", 10 -> 
       "L07 Patch 3283-1151", 11 -> "L10histEq", 12 -> "L10Tile", 13 -> 
       "L11Diagonal05", 14 -> "L11Diagonal24", 15 -> "L17Diagonal05", 16 -> 
       "rectModel", 17 -> "sinModel"}}, {{
       Hold[$CellContext`invert$$], "positive", ""}, {
      "negative", "positive"}}, {{
       Hold[$CellContext`t$$], 0.58, "threshold"}, 0, 1}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[30], 
         Manipulate`Place[2], 
         Spacer[30], 
         Manipulate`Place[3], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Two ways of implementing the skeleton: the Thinning[ ] command \
(which has no options) and the difference between the opening and the \
erosion, iterated several times.\n\nThere are advantages to each:\nIt's good \
to have no options becasue then there's no need to pick a parameter\nIt's \
better to have options because then you can tailor the results.\n\nApplied to \
F634, the method does a reasonable job separating out all the thread tops.\n\n\
In some cases (for example, L10) it may be advantageous to work with the \
positive image (and to locate the holes in the thread) rather than with the \
negative (and locate the tops of the threads)", WindowTitle -> "Notes", 
            WindowFloating -> True]], Appearance -> None, BaseStyle -> {}, 
          DefaultBaseStyle -> {}]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {1125., {5., 10.878072843870754`}}, Typeset`update$$ = 0,
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$13783$$ = False, $CellContext`invert$13784$$ = 
    False, $CellContext`t$13785$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 7, $CellContext`invert$$ = 
        "positive", $CellContext`t$$ = 0.58}, "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13783$$, False], 
        Hold[$CellContext`invert$$, $CellContext`invert$13784$$, False], 
        Hold[$CellContext`t$$, $CellContext`t$13785$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`img$}, 
        If[$CellContext`invert$$ == "negative", $CellContext`img$ = 
          Part[$CellContext`allImagesXray, $CellContext`i$$], \
$CellContext`img$ = ColorNegate[
            Part[$CellContext`allImagesXray, $CellContext`i$$]]]; 
        GraphicsRow[{$CellContext`img$, 
           ImageAdjust[
            Image[
             Total[
              Table[
               ImageData[
                ImageSubtract[
                 Erosion[$CellContext`img$, $CellContext`r], 
                 Opening[
                  Erosion[$CellContext`img$, $CellContext`r], 
                  1]]], {$CellContext`r, 1, 50}]]]], 
           ImageAdjust[
            Thinning[$CellContext`img$, 10, $CellContext`t$$]]}, ImageSize -> 
          900]], "Specifications" :> {{{$CellContext`i$$, 7, "image"}, {
         1 -> "F458Diagonal12", 2 -> "F458Diagonal13", 3 -> "F458Diagonal29", 
          4 -> "F458Diagonal33", 5 -> "F458Diagonal36", 6 -> "F458Diagonal45",
           7 -> "F634Tile", 8 -> "F659Diagonal13", 9 -> "L07 Patch 1408-1731",
           10 -> "L07 Patch 3283-1151", 11 -> "L10histEq", 12 -> "L10Tile", 
          13 -> "L11Diagonal05", 14 -> "L11Diagonal24", 15 -> "L17Diagonal05",
           16 -> "rectModel", 17 -> "sinModel"}, ControlType -> PopupMenu, 
         ControlPlacement -> 1}, {{$CellContext`invert$$, "positive", ""}, {
         "negative", "positive"}, ControlPlacement -> 
         2}, {{$CellContext`t$$, 0.58, "threshold"}, 0, 1, ControlPlacement -> 
         3}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[30], 
          Manipulate`Place[2], 
          Spacer[30], 
          Manipulate`Place[3], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Two ways of implementing the skeleton: the Thinning[ ] command \
(which has no options) and the difference between the opening and the \
erosion, iterated several times.\n\nThere are advantages to each:\nIt's good \
to have no options becasue then there's no need to pick a parameter\nIt's \
better to have options because then you can tailor the results.\n\nApplied to \
F634, the method does a reasonable job separating out all the thread tops.\n\n\
In some cases (for example, L10) it may be advantageous to work with the \
positive image (and to locate the holes in the thread) rather than with the \
negative (and locate the tops of the threads)", WindowTitle -> "Notes", 
             WindowFloating -> True]], Appearance -> None, BaseStyle -> {}, 
           DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["Applying the morphological skeleton to canvas x-rays", Medium],
         TrackedSymbols -> {$CellContext`i$$, $CellContext`invert$$, \
$CellContext`t$$}, SynchronousUpdating -> False, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1183., {71.91754141980782, 79.08245858019218}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelMorphSkelXRay",ExpressionUUID->"3f1b0c2f-5620-4f14-8b05-69869223b10d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 3, 34, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733343352995*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"fbf6f8fb-3fb7-4438-8c6d-05081d4aa235"],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate", "imginv", 
   "\"\\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) should be a valid image, a \
color directive, or a list of such objects.\"", 2, 3, 35, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333440784626`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"842c3323-5112-42b4-a7f2-74d02943453d"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 3, 36, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333444462814`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"903ad1a3-468b-40ab-87d4-62b95f56ae66"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 3, 37, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333447625227`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"1c835024-59b4-4b3a-8936-c70fe8bcedb5"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 3, 38, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333450591555`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"6dc7377b-ae45-4759-acfd-bfcd90271ac7"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 3, 39, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333453981338`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"69b5edf6-350a-44d8-9532-57376a159b75"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 3, 40, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733345758543*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"739d0eb5-4a8a-4d77-8f8e-7e986039ca13"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 3, 41, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333461108356`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"97eaa17e-c1a0-4642-8f1b-2767ef271e25"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Erosion\\\", \
\\\"::\\\", \\\"arg1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 3, 42, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333464532075`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"3bbe6536-2776-4e2b-b126-5cc07597c67f"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 3, 43, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333467986035`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"280a9b28-aee5-476d-b2f7-efc51fcf088f"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 3, 44, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733347120554*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"e12b4f18-6052-441b-b345-b3663303e905"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 3, 45, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333474739175`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"8bbcbafe-2a88-431b-826a-41dd133dfc59"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 3, 46, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333477954836`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"ac3fbe9c-2402-4c57-80f8-d8266c031b0d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Opening\\\", \
\\\"::\\\", \\\"arg1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 3, 47, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333481349726`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"ed2368b4-c413-4f20-9358-82eb316897e2"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 3, 48, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333484592648`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"ef3458be-c9be-474e-9b8d-c57edb8919d5"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageSubtract\\\", \
\\\"::\\\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 3, 49, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733348793887*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"e1462e0a-7593-487c-9dba-6b2353ef1108"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 3, 50, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333491234627`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"fde96047-1138-4db2-a6e6-d50d9b0f3666"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageData\\\", \\\"::\\\
\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 3, 51, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333494388275`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"69c7ccaa-2b8d-49f6-8dec-5efa6f5e0bc7"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"50\\\", \\\" \\\", RowBox[{\
\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]}]\\) should be an array of rank 2 or 3 with machine-sized \
numbers.\"", 2, 3, 52, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333497888737`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"34823032-0e29-4843-81f8-ca0f1394ec2a"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", RowBox[{\\\"50\\\", \\\" \\\", \
RowBox[{\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 3, 53, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733350147137*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"03c7785e-472c-43eb-ae07-6bac0d25a61f"],

Cell[BoxData[
 TemplateBox[{
  "Thinning", "labimginv", 
   "\"\\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is not a valid image nor label \
matrix.\"", 2, 3, 54, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333505366735`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"ed481ceb-fc8f-443d-b9c8-b5da06d5187e"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Thinning\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"0.58`\\\"}], \\\"]\\\"}]\\).\"", 2, 3, 55, 31986003932815867919, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333509183164`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"3821aabe-222a-466f-b7f5-cf4f28caed81"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", RowBox[{\\\"50\\\", \\\" \\\", \
RowBox[{\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 3, 56, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87573335126711*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"57ca6d08-f42d-4503-9eb9-f07de7625760"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageAdjust\\\", \\\"::\
\\\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 3, 57, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733351612317*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"5ac8434b-3b4d-49aa-81ce-1c796b6c23fa"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 3, 58, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87573335251402*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"aa7afabe-2b91-41c4-bef0-54122dc6e6d8"],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate", "imginv", 
   "\"\\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) should be a valid image, a \
color directive, or a list of such objects.\"", 2, 3, 59, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733352888521*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"97fd5a46-7071-47d5-80ec-65a60015dbef"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 3, 60, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333532281528`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"60ff7267-16ce-4ce8-bdb2-ba00fc59084c"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 3, 61, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733353599182*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"5f855773-e54b-4e47-a3a9-6921cddcc463"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 3, 62, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333539362297`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"7e07edc6-4a3e-4e2a-b674-a2d80bde9c41"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 3, 63, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733354287466*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"7094bf36-65a4-4386-be7b-c8f4754010f4"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 3, 64, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733354657569*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"c8768578-736e-4df5-9c78-73a9a87daab2"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 3, 65, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733354996467*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"143b7646-838c-42b6-859c-63cda4700f16"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Erosion\\\", \
\\\"::\\\", \\\"arg1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 3, 66, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733355329591*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"63d740a0-a7d0-4f9d-a3a5-954d78db4c19"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 3, 67, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733355686779*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"0db1bad3-f7a8-408e-a5e2-88bafb187ed4"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 3, 68, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733356050211*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"aa948827-e930-41b1-a281-22de37ab92a6"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 3, 69, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333564223127`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"18f9f705-8881-424d-9d54-04979326c225"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 3, 70, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333568069963`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"3e23b6ca-a9b1-45c9-ac02-17754c408eed"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Opening\\\", \
\\\"::\\\", \\\"arg1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 3, 71, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733357197468*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"0017af7c-63c0-4002-a558-34eab9c23582"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 3, 72, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333575594625`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"9d9162ae-d3cd-4680-81f6-2f497eba38d9"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageSubtract\\\", \
\\\"::\\\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 3, 73, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333579177513`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"a529f28f-0222-428e-b9c6-cfcbc3b1f714"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 3, 74, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733358289302*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"d7952f50-c45b-48db-b3e1-3abf55c1553a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageData\\\", \\\"::\\\
\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 3, 75, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333586633635`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"f7e03e3e-3b9d-437a-80c2-72d08f0171a2"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"50\\\", \\\" \\\", RowBox[{\
\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]}]\\) should be an array of rank 2 or 3 with machine-sized \
numbers.\"", 2, 3, 76, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333590359116`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"828a8fe5-e352-45a1-9cc4-14246903cb23"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", RowBox[{\\\"50\\\", \\\" \\\", \
RowBox[{\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 3, 77, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733359393156*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"32315df2-4511-460e-a3f6-4c596359471b"],

Cell[BoxData[
 TemplateBox[{
  "Thinning", "labimginv", 
   "\"\\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is not a valid image nor label \
matrix.\"", 2, 3, 78, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333597552147`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"37898cba-ea88-4047-b47c-754bb639608b"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Thinning\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"0.58`\\\"}], \\\"]\\\"}]\\).\"", 2, 3, 79, 31986003932815867919, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757333601530743`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"0d9fdb8a-9dd2-4d1d-aa68-c74dd1efa54e"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", RowBox[{\\\"50\\\", \\\" \\\", \
RowBox[{\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 3, 80, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733360544118*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"960cfe6f-f640-4bc1-8037-2d0111e95e4a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageAdjust\\\", \\\"::\
\\\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 3, 81, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875733360918435*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"8c09c86a-297b-4810-86d9-77a9e7ea6cbf"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 79, 86, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342456265454`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"a03565a4-e81c-4947-b6d1-3be8243cf130"],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate", "imginv", 
   "\"\\!\\(\\*RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}]\\) should be a valid image, a \
color directive, or a list of such objects.\"", 2, 79, 87, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342468995004`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"f816320e-77f7-4ef7-b0b0-2be6f148e1e0"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 79, 88, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342473131886`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"04f3e736-0a8b-4cfe-9976-61a18d3b2e9f"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 79, 89, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342477252235`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"cde432fa-bf30-4004-a227-8d7ce5438804"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 79, 90, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734248136109*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"de534c43-3e34-43fa-9818-937510c9c96f"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 79, 91, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734248542671*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"417c2595-abe7-4b66-b91b-96a8e54d9b5c"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 79, 92, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734248958982*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"58dd0eda-db0d-415e-8553-4f0aa20d07c6"],

Cell[BoxData[
 TemplateBox[{
  "Erosion", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is neither a rectangular array \
nor an image.\"", 2, 79, 93, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734249351338*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"ac4697b9-4866-4631-b0c8-24ea6b4fd347"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Erosion\\\", \
\\\"::\\\", \\\"arg1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 79, 94, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734249733433*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"8f462f97-a893-4ee9-967b-9425112f425d"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 79, 95, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734250126459*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"ab1dd519-5eaa-44dd-b925-53e12bace8ad"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 79, 96, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734250542762*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"33f35e4c-aa7a-4d4d-8571-b3b2d9c797aa"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 79, 97, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342509626565`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"dc478925-5176-4a6a-b84b-0c7c9eacdcca"],

Cell[BoxData[
 TemplateBox[{
  "Opening", "arg1", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\) is neither a rectangular array nor an image.\"", 2, 79, 98, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342513930845`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"d797fc6e-17c4-46ce-ba02-84c29802bddf"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Opening\\\", \
\\\"::\\\", \\\"arg1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 79, 99, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342517908225`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"71bcf25e-f75e-4c25-938e-77c5d4e940c9"],

Cell[BoxData[
 TemplateBox[{
  "ImageSubtract", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \\\"]\\\"}]\
\\).\"", 2, 79, 100, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342522475805`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"3e4a2365-cd14-4ac6-a38d-952ef1c3bcaa"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageSubtract\\\", \
\\\"::\\\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 79, 101, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734252709344*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"59d17707-4bac-40b6-a930-2a20eccae968"],

Cell[BoxData[
 TemplateBox[{
  "ImageData", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\).\"", 2, 79, 102, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734253139774*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"3e067d41-77fa-40c2-934c-a51dc7357329"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageData\\\", \\\"::\\\
\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 79, 103, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734253547371*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"f917d4b8-4891-4210-bba6-b179e45e94c1"],

Cell[BoxData[
 TemplateBox[{
  "Image", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"50\\\", \\\" \\\", RowBox[{\
\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"7\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]}]\\) should be an array of rank 2 or 3 with machine-sized \
numbers.\"", 2, 79, 104, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342540139856`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"44f44c4c-609c-4dad-9ec6-e49505b9116c"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", RowBox[{\\\"50\\\", \\\" \\\", \
RowBox[{\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 79, 105, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342545139065`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"d6e2389d-3b3c-485c-9177-92cffb0e6f81"],

Cell[BoxData[
 TemplateBox[{
  "Thinning", "labimginv", 
   "\"\\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) is not a valid image nor label \
matrix.\"", 2, 79, 106, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342549608245`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"6637ae1d-7973-4bed-bd64-2491a01b252f"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"Thinning\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"0.58`\\\"}], \\\"]\\\"}]\\).\"", 2, 79, 107, 31986003932815867919, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734255423836*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"04846491-c87b-4ae2-8bf0-06852d87cc9a"],

Cell[BoxData[
 TemplateBox[{
  "ImageAdjust", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", RowBox[{\\\"50\\\", \\\" \\\", \
RowBox[{\\\"ImageData\\\", \\\"[\\\", RowBox[{\\\"ImageSubtract\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"allImagesXray\\\", \\\"\[LeftDoubleBracket]\\\", \\\"7\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"r\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Opening\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Erosion\\\", \\\"[\\\", RowBox[{RowBox[{\\\"ColorNegate\\\
\", \\\"[\\\", RowBox[{\\\"Part\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]\\).\"", 2, 79, 108, 
   31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875734255873787*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"d80a5e1b-b831-4404-853f-c4e308f4e6e6"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ImageAdjust\\\", \\\"::\
\\\", \\\"imginv\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 79, 109, 31986003932815867919, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8757342563106003`*^9},
 CellTags->"labelMorphSkelXRay",
 CellLabel->"",ExpressionUUID->"08f92fcc-5585-47d0-bfa6-948061a7106d"]
}, Open  ]],

Cell[TextData[{
 "HW: ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " also has a built-in function SkeletonTransform[ ]. Try using this in place \
of the morphological skeleton. Do you prefer SkeletonTransform[ ] for looking \
at canvas x-rays? Do you prefer it when applying to these shapes? Explain the \
reasons for your preferences. "
}], "Text",
 CellChangeTimes->{{3.5517944836439*^9, 3.551794557351882*^9}, {
  3.551794615226047*^9, 3.551794693011743*^9}, {3.5517954045172567`*^9, 
  3.551795406774118*^9}, {3.551798433717678*^9, 
  3.551798464901042*^9}},ExpressionUUID->"6a8863ff-9126-4641-80a1-\
4e100be56456"],

Cell[CellGroupData[{

Cell[BoxData["shapes"], "Input",
 CellChangeTimes->{{3.551794640500174*^9, 
  3.551794641058689*^9}},ExpressionUUID->"a0d8c5f4-af24-4aa5-b4c7-\
7d9d19b1c18a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
R/uI7cVjvrp0K+qbTVRnMoKjfcQz6sdkdeNW1DebqM5kCkd715MayFh141bU
N5uozmQQR3vb80rITHXjVtQ3m6jOZBZHe8NTe8hAdeNW1DebqM5kHEf7kWdX
kWnqxq2obzZRnclEjvZdF7SRUerGrahvNlGdyVCO9nvXFJI56satqG82UZ3J
XI72G5d1kiHqxq2obzZRnclojvZrV9aSCerGrahvNlGdyXSO9jcXN5Nc3bgV
9c0mqjO5AUf7q+vLSatu3Ir6ZhPVmdyDo30zn9dTN25FfbOJ6kxuw9GqilKp
G7eivtlEdSbcRl1VrlY3bkV9s4nqTLiNuqpcrW7civpmE9WZcBt1Vbla3bgV
9c0mqjPhNuqqcrW6cSvqm01UZ8Jt1FXlanXjVtQ3m6jOhNuoq8rV6satqG82
UZ0Jd1K3lUvVdVtR32yiOhMOVxecdXV3VtQ3m6jOhPPVHWdRXZwV9c0mqjPh
JdQ1Z0XdmhX1zSaqM+El1DVnRd2aFfXNJqoz4VXUTefT6sqsqG82UZ0JL6Qu
O59T92VRfbZx6kB4LXXf+YS6LKeRIy+iqjqfVTflQHLkRSRV57PqmpxJjryI
66vOZ9UdOZYceREXV53PqgtyMjnyCq7sOQvqghxOjryCy3rOgrod55Mjr+Ca
nrOgrsZLkCOv4IKes6DuxauQI6/g2T1nQV2KFyJHXsFTe86CuhGvRY4c73kl
Z03diJcjR872pIazrG7EK5Ijp3pGt/miuhQvSo5H2h4rfF09i9clx/PszRS2
qGfx0uR4mI2Bwi71LF6dHE+yK03YqJ4Fe16G+kfwsy1pwkb1JvDIn2ZLoLBL
PQh+IsfDfD1Q2KVeAz+T42G2zBO+rp4Cv5DjYXaNFL6i3gEP5HiYjVOFNfUI
+C05HmbvYOGz6gXwHXI8zPbZwsfV9ef75HiYZ4wXPqLuPj8kx5M8ab/wrrr7
vEWOJ3neiuENdfF5hxxP8tQtw3fVred9cjzJsxcNv1FXng+R40ku2DX8Td13
PkqOJ7lm3fBnj8OtyPEkl22cF1c3nc+R40muXDovq645nybHk1y8d15Q3XFW
yPEk16+el1IXnEVyPEmyfV5E3W7gJ/VLwLHqagM/qx8DzlT3GvhF/R5woLrU
wIP6SeA0daOBB/WTwGnqRgMP6ieB09SNBh7UTwKnqRsNPKifBE5TNxp4UD8J
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
AAAAAAAAAAAAAAAAeIr/B81I67U=
      "], {{0, 519}, {503, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{48., Automatic},
    ImageSizeRaw->{503, 519},
    PlotRange->{{0, 503}, {0, 519}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xl8TXf+x/FLEtnEGoLYgqCpKbFvk6oOBmOpTu2K2H/V1Ggp0wZlqpRa
aquqGRTTDi1Ra20l9lJ7xB770kRiS5BEf9/JGWfuxMm9N8k993vPzev5Rx5J
xL2fs73v93zP93xPUPg7nQbmN5lM73qJL536vv/K8OF9R79eRPzwRsS7QwZF
DOjfOuK9AYMGDG8Y7iZ++b742/h8JtO/v/8NAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAVaSlpe3fv/8f//jHd999
d/To0adPn8quCABgk8TExK5du5qeKVCgQIsWLU6ePCm7LgCAdUOHDhXRne8Z
JckrVqx4/vx52aUBACw5fPiwaHgrGa42xfPnzy++Dho0SHZ1AABLIiIi1EZ4
pgwvW7ZsQkKC7AIBANpSU1Nr165t0qJE+r59+2TXCADQdu3atUKFCmlmuCIq
Kkp2jQAAbdu3b88qvZXulO+++052jQAAbcuXL7fQkSJs27ZNdo0AAG3z5s2z
0JEiHD582I5vl5ohPj7+2LFjJ06cOHLkyPr163/IsMZMVFTUTz/9JP7g+PHj
sbGxKSkpT548SU9Pt2MlAOAC9MhwkdIJCQkie1evXj1jxowJEyYMGzasVatW
VatWDc5QpkwZDw+PAgUKiK9Zva+7u7unp6eXl5evr2/lypWrVKlSrVo18bVD
hw7i1cRrzpw5U0T9qVOnxHuJhNdj5QCAk7NLhj9+/Fg0mFetWjV58uR27drV
qVOnbNmyFvI5E6XfxvwOo0wDHS0Q7xIYGFi7dm3xGREREbFo0aIff/zx119/
FZ8jDlh7ACDXF198YTkkjxw5ovkf79y5s3Hjxo8//lg0jCtUqODj42NjYutN
hH+pUqWCgoK6des2fvz49evXX716lX4YAFKkpaU9fPjw3r17IjMTExMPHjy4
c+fOXbt27d69e/PmzYsy/P3vf1+zZs3evXujM/z888+iISr++P79+8nJyZbj
K6t2uNoS/vrrr9U/Fi8lmuUzZ85s06ZNmTJlMv2X/Pnz29h41klWrfeiRYuG
hob269dPrKujR4/S8QLA7kQ8ipSOjY396aef5s+fP3r06LfffrtHjx6NGjUq
laFkyZIBAQEWOijUBHN3d/f39xd/r/zHl19+WcTXu+++O2PGjK1bt547d05k
u/KmKSkpzZs3t/CCSgB+9dVXBw4cGDt2bM2aNZW78hXK4MPne0JkUWtQPk3U
wsz/xsvLq2LFimKFiIU6f/480zMCyIHU1FTRTj558uSyZcsmTZrUuXPn2rVr
ly9fXiSM3kGnXCJs2bKlyOS6deuankVxHiRWRZMmTcaNGyc+N9XPNQDQdPfu
XXEiL5p/Q4YMadCggWjfOiCxVZqNUuU3eTPDzc8axBqoUKFCeHj4qlWrxGaS
vacAcAriPD0hIWHLli2ffPJJ+/bty5Ur93xPiPnpv979yWoPg/mbmrSCPS8w
Xw/mvy9TpkyfPn3Wrl1LmAN5U0pKypEjR/72t7+1a9euePHiebOV6wICAwP7
9++/adMmhikCeUFiYqJovA0ZMiQ4ONjd3V2NAulX+pAD5t0sISEhkyZNOnPm
DBdAAddz48aNRYsWvf766wEBAeYJoHRcmA+QgIGY9zspv/H09Gzbtm1UVBR9
LIALEK3ulStXvvbaa0WLFpWbNnCwSpUqffzxxxcvXpS9DwLItsePH2/ZsqV3
796lS5eWnSWQyc/Pr2fPnvv375e9SwKwydmzZydOnFijRg31KHaGu1oghbrR
3d3dmzdvvn79eu79BJyTaHj/+OOPHTt29PT0lJsbcDbmH981a9Zcvny52Ftk
77AA/iM+Pn7mzJmZGt4yogKGUa1atTlz5nDRE5Dr7Nmz77zzjjrOJNMdMcDz
3Nzc1I/4ChUqzJo168GDB7J3ZCDPOXbsWHh4uHoLfFb3pwNWVa5cecmSJdwf
BDjGnj17XnvtNTq9YV+hoaErVqxIS0uTvYMDLmv37t1t27ZV+0lodcMuzGe/
eeWVV3bu3Cl7TwdcTUxMzBtvvEF6Qw+Zxp26u7uLnS02Nlb2Xg+4gri4OPN+
b8Ax/Pz8xowZk5SUJPsIAIzqzp07f/3rXwsWLGhiNio4ljK9sPgmKCho6dKl
zKAFZEtqaurcuXMDAwOVA0qdkErqYY08JNMu16pVq71798o+LABj2L59e716
9eQewkAmHh4eI0aMuHfvnuzjA3Bely9f7tWrl+yDFchSSEjI2rVrZR8ogNNJ
T0+fO3euv7+/yawrEpBO7VExvyLTu3fvW7duyT5oAGfx888/N2nSROqRCmRP
+fLlV65cKfvQASRLTk7+8MMPlXGDTHICo1B31J49e169elX2YQTIsW/fvtDQ
UJPZGABGnsAQ1If3ie/LlCkTFRUl+2ACHOrRo0ejRo3y9vaWfSwC9jFgwADu
BkIecejQocaNG8s+5gA7MD95rFat2vbt22UfXoC+Zs6cqcw3yOATuAYlw5Wd
2d3d/eOPP+YJQXBJcXFx7dq1k33AAbr74x//eOHCBdkHHGBP69atK1OmjInB
J3B1SrM8ICCAW4HgGpKTk9977z1l9xbpbf4YLMD1qK0U8c3o0aPpV4GhXb9+
vVmzZuq+bWLeb+QxLVq0YAA5DGrTpk1BQUEmpo1FnqTu9oGBgZs3b5Z9OALZ
M23aNHd3d5PZ3RDEOPKUfM+I7z09PSdPniz7oARs8uDBgzfffPP5/VnGYQTI
lKn/sF+/fnSPw8nFxcU1bdpU6nEDOC9xdJw7d072YQpoi46OLl++vMlsRiAA
mQQGBm7btk32wQpktnjxYj8/PxNXMIGsKc0bb2/vhQsXyj5kgf+aMGGC7IMD
MJjIyMj09HTZxy7yuocPHw4ZMkTZJ2l+A7ZQz1W7du2akpIi+yBG3nX37t1W
rVqZ/nc6ZQBWqTEeFhbGY90gxfXr1+vWrSv7UAAM74UXXoiNjZV9QCNvOXr0
aEhIiIkpZIHcUW6FCwwM3LFjh+zDGnmFCHCxy5n+9040ADnglkF8U6xYsQ0b
Nsg+uOH61q1bV7p0aRNXMAF7E2G+YMEC2Yc4XFlUVJT6DHrZ+zvgUtQnAU2b
Nk32gQ7XtGrVKuUpxnShAHanXFpSDqsPPvhA9uEOV7N69WrlOZhEN+AAY8aM
kX3Qw3WIAFda4EwhC+hNfdbVgAEDuJETuRcVFVWgQAFTRgucJ6kBelMONKV7
PDw8PC0tTXYGwMDM+8Bl79pA3qIcdH379iXGkTPff/+90gfOXTyA46kjB/r0
6UOnCrIrKipKvYhJNzjgeOaHHq1xZIvaAie6ASfRu3dvWuOwxe7du5WnOdD8
BpwErXHY6Pjx42XKlDFlBLgyjQMAucyHhIkYf/r0qeycgJO6fPmyOhshd2IC
TsX8EmdqaqrstIDTSUxMVOYDZxQK4JzUZlV4eLjswIBzefLkSZs2bUw80Rhw
YuZTFY0ePVp2bMCJREREmO8kUvdTAFkyP0KZGguKzz77zMQwQsA41CSfM2eO
7PyAZGvWrFGmQ6EbHDAQJcPFYbt06VLZKQJpjh496u/vb6ILBTAa9Zj18/Pb
unWr7CyBBHfu3Kldu7bsPRFAbomW2C+//CI7UeBonTt3NtGFAhiZcvuP+KZc
uXKXLl2SHSpwnE8//VTdB6TugwByRXmIm/imadOm9+7dkx0tcIQffviB++gB
19OjRw/Z6QLdXbt2LSgoSPa+BsDOlHPqsWPHys4Y6Ojp06ft27c30YUCuBz1
2tbixYtlJw30EhkZaSLAAZdWuHDh/fv3yw4b2N/27ds9PDxMTAwOuLoqVapc
uXJFduTAnuLj49V5ZclwwIUpR3fbtm2ZotaVDB482EQvCpCXMLehy1i7dq2S
3mQ44PLMD/Nvv/1Wdvwgt27cuFG5cmWT2b0AAFybGuMBAQExMTGyQwi50r9/
f7m7EwAplDZbWFjYgwcPZOcQcuiHH36QvR8BkEM99Y6IiJAdRciJ27dvBwcH
y96PAMihzIil9KusWLFCdiAh2/r27WviOiaAjIkNL1++LDuTkA2bNm1STqPI
cCCPU0KgQ4cOsmMJtnr48GFoaKi67YhxIC9TH/ozZcoU2eEEmyjTg6sBToYD
eZkaAt7e3gcOHJCdT7AiJiamePHisvcaAM4oLCzs8ePHslMKlvTs2dPExFYA
sjB+/HjZKYUsrV69WtlMBDiATJRY8PT03Ldvn+ysgoaUlJRatWrJ3k0AOCmR
4erNm/SoOKFp06bJ3kcAODX1DH3ChAmyEwv/4+rVq6VKlZK7ewBwcuqVMi8v
r4MHD8rOLfzXu+++a6IbHIANlKAICwtLT0+XHV34txMnThQsWNBEhgOwjZIV
s2fPlp1e+LdevXqZzC5YAIBlSlaUKlXq2rVrsgMsr9u1axfNbwA5M2TIENkZ
ltd17NhR9l4AwKjc3d1FO1B2jOVdPOUBQC41bdqU4eJSPH36tEWLFqZnXVsA
kF1KT+yXX34pO8/yIuXOei5lAsgZNT3Kly/PxU3Ha9WqlYnZZQHkghrjo0aN
kh1pecu6detkb3wArkCdXfzIkSOygy2vePr0abNmzWRveQAupUuXLrKzLa9Y
u3at7K0NwNWIBvn27dtlx1ue8Kc//cnEcBQAdqL2iosTfCZR0dvevXs9PDxM
zI4CwH7c3NyUSFmxYoXskHNxnTt3NjGkEIBdqZFSp06dlJQU2Tnnso4dO+bl
5WWiEQ5AN/Pnz5cddS5r8ODBsjcvABf30ksvPXr0SHbauaBr1675+/vL3rwA
XJlyjr9w4ULZgeeCpk6daqIXBYCelF7xmjVrPnz4UHbmuZTk5OSQkBDZmxeA
i1MvbtIUt6+VK1eamB0FgM7yZzBlNMWZk9aOWrZsaaIjBYDOzAct0xS3lwMH
Dij39QCAw9SvXz81NVV2/rkChhQCkCIqKkp2/hnezZs3AwICZG9JAHmL0nP7
+9//XnYEGt7cuXNN9IQDcCw3Nzflm+joaNkpaGxhYWEmZikE4HBK7HTr1k12
ChrYnj17lE9DMhyAI6kDxX19fU+ePCk7C41q0KBBJjpSAEgVEREhOwsN6c6d
O6VLlzZxaw8Aqfz9/W/evCk7EY3nm2++UVagOKMhwwFINGvWLNmJaDwdO3aU
vd0A5HVKA7J27dpPnjyRHYpGcubMGR8fH9lbDwD+Y+PGjbJz0UjEmYvsLQYA
/70e1717d9m5aCQNGzY0MSIFgNPw8fGJjY2VHY3GcOjQIfUmKQBwEtOmTZOd
jsYwceJEE41wAE6mbt26zGRolVhFtWvXlr2tAEDDpk2bZGeks9u3b5/srQQA
mSk9A3369JGdkc5u9OjRsrcVAGSmTJ/i7+9/9epV2THpvNLS0l544QXZ2woA
MlMHGc6dO1d2UjqvvXv3yt5QAKBBzfBWrVrJTkrnNWHCBNkbCgA0qLPR+vj4
nD59WnZYOqmmTZuaGFUIwPnke0Z8/+mnn8oOS2d07NixAgUKyN5QAGAFz9nU
NG3aNGX90A4H4Mzc3d2PHz8uOzKdziuvvGIiwAE4NyWjZs6cKTsyncvFixcL
Fy4se+MAgBVKhjdr1kx2ajqXb7/9VvaWAQBbeXl5nTp1SnZwOpHw8HDZ2wQA
bKIMMpwyZYrs4HQW9+/fDwoKkr1ZAMAmSoY3btxYdnY6i127dsneJgBgK6VL
3N3dne4Uxbhx42RvEwCwiQhw9SE1zJ2iaNKkidyNAgA50KlTJ9nxKV9cXFyh
QoVMjAwHYDQlSpS4ceOG7BCVbM2aNbK3AwDkkEgw2SEq2bBhw0w0wgEYjZJa
4eHhskNUprS0tJo1a5qejdUBAKNQMrxGjRopKSmyo1Sa2NhYX19fsR7U67wA
YCzHjh2THaXSLF26VFkJ9KUAMBwluD7//HPZUSpN9+7dZW8EAMghJcPz7AjD
tLS00NBQ2RsBAHJIyfDAwMCkpCTZgSrB6dOn6QYHYFxqJ/Du3btlB6oEy5Yt
k7v+AcAuJk+eLDtQJXjnnXdkr3gAsIO2bdvKDlQJGjVqJHvFA4AdlCpVKj4+
XnamOtTly5eLFy8ue8UDgH3s379fdqw61I8//mhiWDgAV5HXusTfe+89U8Yt
9sQ4ABfQtWtX2bHqUO3btzfRDgfgKipVqpR3Jk5JSEgoW7asiamuABif0hb1
9vY+ceKE7HB1kDNnznh4eJhohwNwCUqULVu2THa4OsiSJUtkr3IAsLN+/frJ
DlcHGTFihOyVDQB29uqrr8oOVwdp3Lix7JUNAHaj9KUUKVLk9u3bsvNVd0lJ
SeXKlZO9ygHAzjw8PI4fPy47YnV36NAhpisE4JK++OIL2RGrOy5oAnBV77//
vuyI1d1bb70lezUDgC5+//vfy45Y3bVt21b2agYAXVSsWPHevXuyU1ZH8fHx
JUqUkL2aAUAXXl5eMTExsoNWR3FxcT4+PrJXMwDoZd26dbKDVkdRUVEmbrEH
4LrGjBkjO2h1NHXqVBNTXQFwXeHh4bKDVkf9+/c30Q4H4Lpce2hKzZo1Za9g
ANBR0aJFExISZGetLn799Vdl2nDa4QBcVeHCha9cuSI7bnURExOjDEohwwG4
sA0bNsiOW11s3LjRxAVNAK5LaaDOmTNHdtzqYvz48coy0g4H4JKUcPv4449l
x60ulEEpJvpSALgoJdw6deokO2510aJFC9krGAB0pGR4aGio7Li1v8TERH9/
f9krGAB0pGR4pUqVkpKSZIeund2+fbtIkSKyVzAA6EjJ8GLFil26dEl26NrZ
oUOHPDw8ZK9gANCRkuHi65EjR2SHrp394x//kL12AUBf6oCNqKgo2aFrZ9On
T5e7bgFAb/kziG8mT54sO3TtbOjQobLXLgA4yLBhw2SHrp01btxY9koFAAcZ
PHiw7NC1p7S0tJdeekn2SgUAB3Gx23xu374dGBgoe6UCgINUq1bt0aNHsqPX
bmJjY729vWWvVABwkFKlSj148EB29NpNdHS0iWlSAOQZJUuWTExMlB29dvPl
l1+ayHAAeUaJEiXi4+NlR6/dREZGmshwAHmGh4fHL7/8Ijt67SYiIsJEhgPI
S7Zt2yY7eu2mV69eJp7gA8B+lKfJqKmS75lsvYKbm5s6w4ndG5mrV6+WHb32
kZaWVq9ePRPtcAD2o5m6np6epUuXDg4ODgsLe+2110aNGvV+BvHNyJEjxVfx
y2bNmlWrVq1s2bIFCxbUtcIFCxbITl/7uH//fkBAgIl2OAAdFCtWrEWLFiNG
jFi8ePEvv/xy584dqwOzxR8kJSWdOHFiyZIlY8eObdOmjXgRuxe2cOFCx2Ss
3hITE5UMpx0OIGcytbpFg/CFF14YNmzYypUrb9++nfuYio+P37Jly7hx4xo2
bKjezKL01eSgl0Yxffr03BfmDC5fvqw8/YEMB5AzanqULFlSRPeOHTuePHmi
U2TFxMRMmTKlbt266psqSZ7dmidOnKhThQ4m1rZ61cCO2xRA3iFSVITqwoUL
HfaMs7S0tOjo6IEDBxYqVChnNU+dOtUxpept1apVyhKR4YCu1FN+9VjL9I0e
oy/0JtK7bdu2GzduTE9Pl5JgFy9ejIyMNH8csI3rMCIiQkrBdvfVV1/ptnkB
/HdYnWZEq79XOgTc3NykFGk786Vo3Ljx9u3bZWfYv12/fv2DDz4oUaKEUpgt
vSuvvvqq7Krtgyf4AI7k7e0tTv8LZvDz8zPoc2yDg4O/+eabp0+fyg6w/3Hr
1q0RI0b4+vqabBho5zIZPmnSJIdscyAvKlCgwO9+97s33njjs88+W7Zs2bff
fnvs2DFx+n8ug/hmz549y5cvX7p06YQJE9q2bVujRg3nHOWrNmtFQkZGRt67
d092dGXpzJkznTp1srAIij/84Q+yK7WPrl27OmIPAFya+T2Jgmhgt27desGC
BadPn05NTbX9eBR/fPz48UWLFvXt27ds2bJZvb7DqIP3lB8bN2589OhR/eLI
jr7//ntlBWbVkeUy7fDmzZs7fscAXIx6UbJp06bz5s27cOFC7o/NpKSkdevW
9e/fX487XGxfLuWzQ5xQTJkyJVufR9LdvHmzR48embaRymUyvGHDho7eLeBC
NK8c5Wy0qub1PstvJItmqc2aNdu6daseB+n169dnzZr1u9/9LtM7OmCdKG/x
4osv7t69W49Fc4BvvvnGfNSKyjUy/MmTJzxJE7mR1aALqwljfoddVn9pPmYj
Z/dx6EQdRqL82KhRI5Heel/gS0lJiYqKevnll9Ua1Cmh7L505hula9eud+/e
1XXR9Hbx4sWwsDB1wylnFq6R4ffv369evbrd9wHkHZkyJCAgoFWrViEhIbb8
x0yxLP5v+fLlg4ODRYNTfFOhQoXnHxHoDDGuhKeSAyVLllywYIF+9yQ+Lz09
fc2aNaJhrBajxzIqSycW85NPPnHYounq8ePHw4cPN18618jwmzdvKpOlANll
nh4ibNu0afPPf/7z1q1bv2XkzJtvvmnLfy9atOigQYNWrVoVHR197dq1pKQk
ZUKkuxmOHj36008/LVq0KDw8XLR1neSpr2obtXPnzjdu3JBy5IpPjYULF4pP
OvOq7LuY/v7+P/zwg5Sl04/Yl9T7Ol0jw8URV6pUKftu+jzL/J47y10E6p8p
DdHczNvjYObVKr+pWLFiZGTkmTNnMu1a27dvt/pS4qvtKZGWlnbhwoWvvvpK
fFj4+fk9X48DVqB6Gu7h4TFz5kx7H47ZlpCQID4B1asPSnm5uUtIXcAqVaq4
0mNuzO3atUsJPdcYW3jixAl3d3c77eDQJg4Kn2d8fX09PT2z+ktDZLhSpAiK
li1brly5Mjk5WXPX2rFjh9VXe+mll0Qy52C/vXz58vz582vWrOnINaaO0Kha
terevXtzd+TZkzhVqV27tkmreyq7C6j836ZNm165ckX2YulI5F6lSpXEYsou
xA4OHz5sx50cQsGCBRs0aNC+ffsxY8YsXrx4y5YtO3fuPHXqlGipnj59WnwV
61wcdKL9+cUXX/zf//1fixYtQkJCnP8Oa5WXl1ePHj327Nljedfatm2b1Zeq
X79+bvbe1NTUdevWiWa5I5M8LCzs0qVLuSlbD/fv33/vvfcKFChgyvWDAMRH
s3g12Quku3Pnzo0ePVp2FXawf/9+O+3a1qnnvPmfMf9X89NhpxqB8Lznz9mL
FSsmkmTs2LHR0dHiAM/u+ATRlI2NjV21apWI9Bo1apjnucN6CbJaTPN3F2cQ
PXv2PHLkiC0LJVqqVsMklxmu2r17d8eOHdX1Zt/9J5/ZzTVt27Z15hEamzZt
qlixorIGbB+yYj5UQ+zGDx48kL0cDuLIK9H6WbBggb12dVt2FZ3+2JHMc6lo
0aKdO3f+17/+FR8fb68tIvargwcPfvDBB+rAA5NZL6WshRUNPNH2PnbsmO0L
ItaJ5qBcc+JsxV7r7beMHvhGjRrZfSWoH2FDhgyRNTWf7a5fvy5y2JSdkYfq
Av7xj3/MCy1wFyNO5+2+z1sgdqoiRYoEBgZWrlxZZFSvXr369evXv39/kYTV
qlWrUqVK6dKlCxcu7JzzRajEUrz66qtfffWVrmMSHj9+vG3btm7duvn4+Ehc
WLEtXn/99WyltyIhIUGdRC4r4nPBvistLS1t0aJF5qM1ck/Jt7ffftu+peon
NTX1k08+sf06l7KAeaQLxfXMnz/fLjv58+fd6j+JA1k0DCIiIlasWHHgwIFL
ly4lJiamZzCvRPwoDsBff/31woUL4tR48eLF4eHhL7/8skiwfM+N91B+dEDU
q1f8lR+9vb27d+++d+9eR07XdubMmeHDh6ttWmWp9etdMX/lWrVqbdiwIWdl
29IO79Kli33XlUJ8fAwdOlQJsRx3Rpn36YmNrkedulqzZk3JkiVN/9sX9PyG
Vv6pdevWeacLxcV89NFH2dqxLezt5vuJr69vw4YNx44dK0I7N/0MItXFueGm
TZvER8ALL7ygjuhwWC+x+hZ+fn4DBw6MiYmx48rPllu3br3zzjvKAGnzo08n
4vCfPXu2OBfIccG2ZLg4/7LjKspk165dSn9UztaVuku/8sorDns2jX2J3VUZ
r6J5gSDfs7nK6UIxtFGjRmV339aU79l4M3HUTJgw4fz583YvVeT5oUOHRIu0
UqVKdqnZ9kXr2LGjxPQ2d/bs2W7duimHnn6fXyJaL1++nMtSpWe4INqW77//
voXBnBYoq7dOnTri3FDXInUlmkCvvvqq5gIqn1Ai5O14NQeOl7MMV1unaowU
KlRInG9GR0fnpuVmo+Tk5H/961/NmzdXazA/C7BLsqkv8tJLL23evFnvJcqu
LVu2KNMfZbrdJmdLav4KpUuXXrFihV2KdIYMV2zbtq1y5cqmZ01ry6vLfIWU
KVPm+XuXDCclJaVLly6Zlk45XkJCQkTIyy4QuTJ69OjsHvXqrYXKj4ULFx46
dKhdZtrMLhFl7dq1s296q4oWLTpt2jSx/zt+uWwhTn5Hjhzp5eUlSnV3d8/x
sptn2muvvWbHOzucJ8MF0ZYWu4rp2aA7CyWpPQxira5fv94x5TmAOB9RFl8s
l7KAxYsX379/v+y6kFtvv/12do96tZUiUm7YsGFxcXFyF2Hr1q3q2aK9YrxZ
s2axsbFyl8sWO3furFatWm6WVFlj3t7eU6dOte+FWqfKcIVYRqv9Kmr7ZPz4
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
      "], {{0, 631}, {492, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{38.209191759112514`, Automatic},
    ImageSizeRaw->{492, 631},
    PlotRange->{{0, 492}, {0, 631}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1EGOJUlahdEEJgzZArtgypBpIxbQLYoWk0KqRkLslhnLaArl6Hl6R7m9
Z2afx4tzpCpl1SDC7eZ/79//4T9+929//e3btz/97a//+t3v/+sff/nl9//9
z3/363/8y89/+vc//vzTv/7Tz//50x9/+uUf/vA3v/7P//mrb9/+99d//v/P
fwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFb6
djN1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7U
YQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9
NEd1HmPqtB7UYQA71EtzVOcxpk7rQR0GsEO9NEd1HmPqtB7UYQA71EtzVOcx
pk7reTdMY8UnwfuZsgAT1XmMqdN63g3TWPFJ8H6mLMBEdR5j6rSed8M0VnwS
DMlP98USJSY+f4M6refdMI0VnwRD8tN9sUSJic/foE7reTdMY8UnwZD8dF8s
UWLi8w8hTP/Jf/6cCX93wzRWfBIMyU/3xRIlVj9/4s//S7/iU5ibw5Q0VnwS
DMlP98USJfY8fMpvufKLbmtWAhPTWPFJMCQ/3RdLlNj55K+Z8Hevv316Gis+
CYbkp/tiiRL7H/vVEv7ulVcvSmPFJ8GQ/HRfLFGieubXSfi75967NI0VnwRD
8tN9sUSJ9oFfIeHvRl+6IY0VnwRD8tN9sUSJOzztvRP+7qmDWpvGik+CIfnp
vliixH0e9a4J39bL9w6vyk93bqf2uNtz3i/h25p4+fCc/HTndmqPez7knRK+
rYmXD8+pS/Ap3TlDf8XP2dI2mKDuCtxCXUS4qu4K3EJdRLiq7grcQl1EuKru
CtxCXUSYrK4UrFU3DCarKwVr1Q2DyepKwVp1w2CyulKwVt0wmKyuFKxVNwwm
qysFa9UNg8nqSsFadcNgsrpSsFbdMJisrhSsVTcMJqsrBWvVDYPJ6krBWnXD
YLK6UrBW3TCYrK4UrFU3DCarKwVr1Q2DyepKwVp1w2CyulKwVt0wmKyuFKxV
NwwmqysFa9UNg8nqSsFadcNgsrpSsFbdMJisrhSsVTcMJqsrBWvVDYPJ6krB
WnXDYLK6UrBW3TCYrK4UrFU3DCarKwW3UBcRrDEMqPsKRhsG1H0Fow0D6r6C
0YYBdV/BaMOAuq9gtGFA3Vcw2jCg7isYbRhQ9xWMNgyo+wpGGwbUfQWjDQPq
voLRhgF1XynV1wd8JvViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSB
AfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSB
AfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi
YbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfViYbSBAfVi8T7q
W4bfVrcEbqSuI/y2uiVwI3Ud4bfVLYFbqIsIA+q6QKnuHzyprg7sVncOJqhr
BDvUPYP56lbBEnWxYK26YTBH3STYqi4cPK9uD2Tq8sGYujFwC3UR4bfVLYHb
qUsJf1FdDripuppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO1c2Am6qrCefq
ZsBN1dWEc3Uz4KbqasK5uhlwU3U14VzdDLipuppwrm4G3FRdTThXNwNuqq4m
nKubATdVVxPO1c2Am6qrCefqZsBN1dWEc3Uz4KbqasK5uhlwU3U14VzdDLip
uppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO1c2Am6qrCefqZsBN1dWEc3Uz
4KbqasK5uhlwU3U14VzdDLipuppwrm4G3FRdTThXNwNuqq4mnKubATdVVxPO
1c2AO6p7CR+p+wH3UjcSLqmLArG6gvCMujcQqGsHr6o7BJvUVYOZ6j7BcnXJ
YIm6WLBK3S1YqK4XfFF19fms6suFL6quPp9VfbnwRdXVx/oBA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgD
A+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rF
wmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFwmgDA+rFolRfH3wydWX5
6uoGwCdTV5avrm4AfDJ1Zfnq6gbAJ1NXlq+ubgB8MnVl+erqBsAnU1eWr65u
AHwydWX56uoGwCdTVxYuqYsCd1F3ES6piwLL1SWDmeo+wXJ1yWCmuk+wXF0y
mKnuEyxXlwxmqvsEy9Ulg5nqPsFydclgprpPsFxdMpip7hMsV5cMZqr7BMvV
JYOZ6j7BcnXJYKa6T7BcXTKYqe4TLFeXDGaq+wTL1SWDmeo+wXJ1yWCmuk+w
XF0ymKnuEyxXlwxmqvsEy9Ulg5nqPsFydclgprpPsFxdMpip7hMsV5cMZqr7
BMvVJYOZ6j7BcnXJ4JK6KHAXdRfhkroocBd1F+GSuihwF3UX4ZK6KHAXdRfh
kroocBd1F+GSuihwF3UX4ZK6KHAXdRfhkroocBd1F+GSW131ojLCFavPG6a4
1VUvKiNcsfq8YYpbXfWiMsJEq1sAH7vVuS5qGUy0ugXwsVud66KWwUSrWwAf
u9W5LmoZTLS6BfCxW53ropbBRKtbAB+71bkuatlS7/GKe7rnva3+KvjYrc71
uRK13uktd3PPe1v9VfCxW53rcyVq5S96myR/tODEJqS0+qvgY7c61+dK1Arf
9WZJ/mjSWU1OafVXwcduda7PlaiVvO4tk/zRC6e08G9k9VfBx251rs+VqLX5
jW+c5I9Gsx11z6+Cj93qXJ8rUWvnM987yR89ke2Qe34VfOxW5/pciVp7HvsV
kvzR09kuTWn1V8HHbnWuz5WotfrJXyfJH72Y7aKUVn8VvJm5s/C6dY96p5Se
MyXb6Smt/ip4M3Nn4XUrnjbxR31qr+ewIqXVXwVvZu4svK7O41ydyhz3TGn1
V8GbmTsLr6vzOFenckkdErBDvTRHdR7n6lQuqUMCdqiX5qjO41ydyiV1SMAO
9dIc1Xmcq1O5pA4J2KFemqM6j3N1KpfUIQE71EtzVOdxrk7lkjokYId6aY7q
PM7VqVxShwTsUC/NUZ3HuTqVS+qQgB3qpTmq8zhXp3JJHRKwQ700R3Ue5+pU
LqlDAnaol+aozuNcncoldUjADvXSHNV5nKtTuaQOCdihXpqjOo9zdSqX1CEB
O9RLc1Tnca5O5ZI6JGCHemmO6jzO1alcUocE7FAvzVGdx7k6lUvqkIAd6qU5
qvM4V6dySR0SsEO9NEd1HufqVC6pQwJ2qJfmqM7jXJ3KJXVIwA710hzVeZyr
U7mkDgnYoV6aozqPc3Uql9QhATvUS3NU53GuTuWSOiRgh3ppjuo8ztWpXFKH
BOxQL81Rnce5OpVL6pCAHeqlOarzOFenckkdErBDvTRHdR7n6lQuqUMCdqiX
5qjO41ydyiV1SMAO9dIc1Xmcq1O5pA4J2KFemqM6j3N1KpfUIQE71EtzVOdx
rk7lkjokYId6aY7qPM7VqVxShwTsUC/NUZ3HuTqVS+qQgB3qpTmq8zhXp3JJ
HRKwQ700R3Ue5+pULqlDAnaol+aozuNcncoldUjADvXSHNV5nKtTuaQOCdih
XpqjOo9zdSqX1CEBO9RLc1Tnca5O5ZI6JGCHemmO6jzO1alcUocE7FAvzVGd
x7k6lUvqkIAd6qU5qvM4V6dySR0SsEO9NEd1HufqVC6pQwJ2qJfmqM7jXJ3K
JXVIwA710hzVeZyrU7mkDgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgDf0f2ng6
8A==
      "], {{0, 480}, {487, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{40., Automatic},
    ImageSizeRaw->{487, 480},
    PlotRange->{{0, 487}, {0, 480}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3UFuJEuSGNCAtNFCizoCdQMuBa2opXbECNpzBuoZaNMiegYYzI5HyCPw
CHkEHiGPwCPkDUreP0csdjIrmUxGhJm5vwf8Rv9G/d8Z7hFu4Rbm7v/lH/7v
3/3jf5im6Z//U/uPv/v7f/3vf/nL3//b//zR/uZ//fmf/88//flP//t//Plf
/vRPf/rLf/2H/9j+x//c/ux/a3/99b//BAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgMHs9/uXP2w2m6ffe3x8vCOZ1ilnuqx16KFnWxdH32UA
39WGstvb24lOtc4VrYButLf06GGV+bVujb6zAGa23W5//PgRPb4yj9aVrUOj
7ymARby+vsoKdqB1YuvK6LsJYEH7/f7h4SF6uOV6rft8qAIG8fz8LCtYTuuy
1nHR9w7Aqna7naxgIa2zWpdF3zUAAWQFq5D9A9hsNtGDMee0Doq+RwBS2O12
PmMl1DpF9g/gPVteZGOTCoDfseVFEjapADjv+fk5eqgenTJ1gEv4jBXFhyqA
L/EZa30+VAFcwWqsNVlRBfAdT09P0QN5/1ojR/czQHnqLhalpgJgLuoulqCm
AmB2bVy9ubmJHuD70RpTqAJYgkLBuSj/A1iUgPV9QhXACtpIe39/Hz3kV9Wa
TqgCWI2lWFdojRbdbwDDEbC+RKgCiCJgXUioAoglYH1KqALIQMA6Q6gCSEJZ
++8oVgdIRcD6SKgCSKiNzLZmetOaQqgCyMnmtwe2qwVI7uXlJTpWxNtut9H9
AMAnNptNdLiI1C4/ugcAuMiwNe3q1QEKGbNEUBEgQDmjVVyorAAoaqgPWD5X
AdQ1yElY7TKjWxqA6+33++7zge0Cfa4CqG673UbHk2VZXQXQh7u7u+iQspR2
adGtC8A8Xl9fo6PKUtqlRbcuALN5enqKDizzaxcV3a4AzKm/Hdrtsg7Qpefn
5+gIM6d2OdEtCsAiupletQuJbksAltLN9MrECqBvHUyvTKwAutfB9MrECmAE
pfdiaj8+uv0AWMPj42N0zLle+/HR7QfAGkpvbWHzCoBxFN050K6AAEMpWmuh
vgJgKPv9PjryXMNWSwCjKXessAOCAQZULhkoDQgwoHKVgaoBAcZ0e3sbHYIu
1X5qdGsBEKPQMmGLggGGtd1uo6PQpdpPjW4tAGIU+nTloxXAyErscGsnW4DB
ldiCyYZLAIN7enqKjkWfaz8yup0AiLTZbKJj0efaj4xuJwAivby8RMeiz7Uf
Gd1OAEQqURaoIBCA6Fj0uegWAiBedCz6XHQLARAv+W6BdggE4Gf6JVcWWwHw
U7QCoALRCoD8RCsA8hOtAMgv+ZmMzmEE4Gf6jW1taQvAT9EKgApEKwDyE60A
yE+0AiA/0QqA/EQrAPITrQDIb7vdRkekc9rPi24hAOK9vLxER6Rz2s+LbiEA
4olWAOQnWgGQn2gFQH6iFQD5iVYA5CdaAZCfaAVAfqIVAPnt9/voiHRO+3nR
LQRACtER6ZzotgEgi+iIdE502wCQRXREOie6bQDIIjoinRPdNgBkER2Rzolu
GwCyiI5I50S3DQBZREekc6LbBoAsoiPSOdFtA0AW0RHpnOi2ASCLHz9+RAel
09oPi24bALK4u7uLjkuntR8W3TYAZCFaAZCfaAVAfqIVAPmJVgDkJ1oBkJ9o
BUB+ohUA+YlWAOQnWgGQn2gFQH4PDw/Rcem0x8fH6LYBIIunp6fouHRa+2HR
bQNAFqIVAPmJVgDkJ1oB2ex2u5d39vt99C8inmhFZm2Yej9qtUEs+hcxm0Pn
bjabx8fHu7u729vbT4eFm5ub9icfHh7a+CCKjUa0IoPDwNU6vQ1EbThqg9Kn
d0gb3NqfbANdG+4MXFW0943WX/f395d08SXav6fdM9vt1g3QPdGKKG14aYNM
G2pmHLjaMNgGQ1OwVFpHPz8/t47+8ePHLB39O6332/+RsNUr0YqVHcauNrAs
ev+0gbENj8auQOt09Emt69t0O7oBmJloxWraABKyGt0r98ralDkkSB25vb1t
/R7dGMxGtGIFbdC45Bv60toQ2gbS6Mbo1uvr6+Pj49Lpvq+6ubkRs/ogWrGo
NlDM9VlqLm04bYNqG1qj26YfbdacYTJ1RntZkhusTrRiIW1wyDCfOqMNsEaw
b2pvI2l3xv6o9bi3lLq22230HXSajE1dbUBI/qb9XhtsZYqukHDWfIk2s95s
NtGNxzXau2X07XOal96i2lCQ7cvFJXzduFzROPVee0VRdVOOaMVc2uNfKCl0
kph1Xv7s7uXaO5UETi2iFbNoD37FKdVJvsh/tNvtqr+KnOQcvUJEK76vPfLR
98v82uBsT4yff0yZ057ZOgtZwSpEK76jg+zfeW2gHnkoK/oV8qvabNqbSX6i
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
09Q=
      "], {{0, 524}, {570, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{38., Automatic},
    ImageSizeRaw->{570, 524},
    PlotRange->{{0, 570}, {0, 524}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
d4TE4nK5uJsFRJdMJhVcsq6hEiHCRfzDhw/ckRCRwWDAbmlwr4GBAe5UlVRF
RUU4HM4kMufn5/v7+9FodHd3Ny9bpx4fH1dXV3MHQFB6vR6nBsC9QqEQd6oy
ePPmTZqYUI3yer1ms1mn09Gkkv5ps9lqa2tfvHjx0NvC8Xh8Y2NjZ2dndHT0
yZMn3N9baNPT07nlMijfyMgId57yaG5uphHUtWisrKxUVVWl2fBQpVJ5PJ57
38imodTU1BT9FaWlpfTTaCqqsEXphdDT01OwNAeFiEQict+cJGuVlZU07Jmd
nR0bG6OLu9/vz/B80u7u7jQhpVmkILtSywtdKSRLe5Cpra0tMQ8RFllJSYnP
55ufn78WzN3d3aGhIayqyg4NXKXJ+WQySfP6wIWurq6BgYG+vr7UdkZnZ2fS
fAbIGk0JbTZb0Y6yskZVq7e3d29vj2Z/k5OTTqezaN8BzIvq6moJsj0Wi7lc
rrs+g9VqbWtro9pFDbq5uYkj6oRFM6M//vhDdnvO8EptFqHX61Htc6fVat1u
d2tr6/Pnz+kXND188uQJXQWovDQ1NdEoaHFxMce32tfX1zN8uYNalj4P/WGq
oj09Panz6VZXV6empvB2tlBobEwdEPeHQTR0UaARrMPhePPmDV1eaVj7oMSm
+XvWb6JpNBq6MNHfTv3CYDDY7fbXr1/j8BRBHBwc0HWkrq4ur+kGkDepukH1
x2Kx0CSOipjH46GpXFdXF6XuzfewPn/+nPfZOtVPEVYgQ0oymfz69avX68UN
ZJCRVCmjCjY8PLy9vZ1K5sK949/b28vbT+Ga8/NzanoabuGtN5AXGlNVVlbW
19cXLnU/fPjA3UHhdouLi4FAQNl7OwDcRGM2ul7TfLO7u5umnO3t7S0tLc3N
zVSs8Nqj4Gi4NTY2Rs2n1+u58whACjROo4s1d8+DnGxtbXk8HkwSoRjgjFdl
mJ6edjqdWP8AykYZPjExwd3bID+CwSAeI4KydXZ2cvczyJt4PN7b24tdU0CR
TCbTysoKdyeDPEsmk6Ojo3iGCApDMwjuvgWFknqGWF1djc0fQAHUavXCwgJ3
r4KCOz4+7uvrs9vtuCEPsjY0NMTdmUA6kUikubkZS7ZApgKBAHcfAqnt7e3R
dYqGW9zZB/AANptN2LMsodA2Nzdpkpj5/sMAjKxWaywW4+40wO/4+Pjjx4/Y
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
      "], {{0, 550}, {400, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{29.545454545454547`, Automatic},
    ImageSizeRaw->{400, 550},
    PlotRange->{{0, 400}, {0, 550}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
inv+/HkJHklTwVLHgfuIBcB7uNqjvWu92Wy22WzUeq+qqmpsbHz27FlmVDNd
fKmjurOzU7KypU1zF4YAVIy43GvM1taWeq/1FHBqq1dWVtbV1QUCgYGBAerR
bGxsUG9UCQs90BlGG2fUV69ecZcliLSwsKD8u83UMqfLd0VFhdfr9fl84XA4
Ho9PT08nEol0Os1dhLlQY4O78ASgsyse32tJJBLh/k5dR5dvunY/evSImuUv
Xrx4+/bt/Py8Sm8mR6NR7uIUA8N0tWRoaIj7C3XHaDSWl5f7/f7Xr19TTBR+
+c4L9YjLysq4C1iMiYkJ7uIEMdrb22X9qlCiqW9LnQj6wXTJbre73W6Px9PR
0TEyMjI+Pk6Xcu5ikNHo6KisJVwyVGXCRzVA6a2urlJVyvc9efjwISV6c3Nz
cXGROoZLl75+/aqlq/mt9vb2suOi1Y7OYNzFCcWiNpt8r+J6vd7t7W3uQ1QE
bYzYuXN5yyX3oC9QOGqtxeNxOcbhW63W5ubmGwcA69PKyopmVjZ8+vQpd3FC
UUKhkPBvBV0OPn36xH1kiqOZmc+pcYjbeqoWDofFfh/8fj914bkPS4lWV1e1
MWLnzuWJnbs4oXDj4+NCvgYOh6Ourq6zs/P8/Jz7mJRLGxPrZYyMjHAXJxSo
mBY+XbnKysoCgUAwGMRdOylmZmY0M42h1Wrd3d3lLlEoRF5DdEwmU0NDQ0dH
x+jo6NTUVCKRwGSqebm4uKitrZUviSXW19fHXaJQiMnJSSn1S5f1R48eTU9P
c++v6kWjUc3czDebzWjjqdH8/HzumqWGXH9///LyMveeaoesw6JKrLe3l7s4
IW/n5+c/+xJWV1dTS2B1dZV7H7VGMwN071xe7j9//sxdopC34eHhq/VIjfm2
tjZMhy6fw8PDe/fuceVUOLyLp0bpdDrzDjg15l+8eIHljEtAS1MT22y29fV1
7hKFvKVSKTpjj42Nce+IjlCBc+dVGIzRBZBibm5OMzfzqVe4trbGXaIAKtDR
0cGdV2Hw7B5Aivn5ec0M1bPb7Zubm9wlCqB06+vryp+nVLr+/n7uEgVQuouL
i7GxMc307isrK5UwGzmA8j1//pw7r8K8e/eOuzgB1EEzb+Deu3cPr1oDSHF6
eup2u7kjKwZGdQJINDAwwJ1XMajDwl2WAOrw4cMHbTzFs9lssq4PDqAZBwcH
mpkzHyN2ACR6+/atNi73TqeTuywBVKOlpYU7sgLQuQvTLgFIdG2uA/Xq6uri
LksAdZBjURIWdrsdM+gCSLG8vOxyubgjK0Y4HOYuTgB1mJmZ0cY0O36/n7ss
AVTD6/VyR1YAi8WC2dgAJGpqauKOrBi4pwcg0dzcnDbeu/d4PNxlCaAalZWV
3JEVwGg04sE9gEQ9PT3ckRUD9/QAJOrs7OTOqxjUVfn06RN3cQKoQCQS4c6r
ME1NTdzFCaAC375908wreC6X6/T0lLtEAVSAesTceRXDYDB8+fKFuzgBVKCh
oYE7r2IYjcbFxUXu4gRQus3NTW2My82IRCLcJQqgdPF4nDupImG1a4BbjY2N
cSdVJJfLxV2iAEo3OjrKnVSRqGv//v177kIFULRgMMidVMEwmR5AbkNDQ9wx
FcxgMAwPD3OXK4Bytbe3c8dUPMyiCfAzBwcHDoeDO6OyqK6upqPjLmAAxZmb
m+NOp4ww1QbAjz5+/MgdTRlZrdalpSXuMgZQllgsxh1NeTU1NaXTae5iBlCQ
6elpbSx9lQPexwG4amVlRUuD8G/U0dHBXcwACrK7u2uxWLhzKS86QNzMB8i6
uLhwu93cuZTd4OAgd0kDKMi9e/e4Qyk7q9W6t7fHXdIASlFTU8MdylLAe/cA
WQ8ePOBOZClg3myALM1Mn5VbRUUFd0kDKIXP5+NOZClgSj2ALJ2knuAtPICM
uro67jiWyMzMDHdhAyiCTvr1JBqNchc2gCLoJ/VWq3V0dHRlZYW7yAGY6Sf1
GRaLJRgMYtAO6FljYyN3EEvKaDSazWYM2gE96+jo4A5i6VDDJpFI7OzscJc6
AKfz83Nq8Wr+fds7lwvcY2odgKzBwUHNT69BqV9bW+MuaQAF0XwHv7y8HDfx
AK6Kx+MavtzToY2OjnKXMYCyaH6GjWfPnnGXMYDijI2NaXhCLY/Hw13AAEoU
Doe50ykXk8mE1+4AbuT3+7kDKpeenh7u0gVQoo2NDboscgdUFg0NDdylC6BQ
/f393AGVhdVq3dra4i5dAIVqbm7mzqgsBgYGuIsWQLnq6+u5MypeVVUVd7kC
KNfS0pLRaOSOqWDUyD86OuIuWgDlam1t5Y6pYAaD4ePHj9zlCqBcyWTS4/Fw
J1WwtrY27nIFUDRq51OrmDupIrnd7ouLC+5yBVC0eDyupeBTI392dpa7UAGU
joLv8/kcDgd3ZMXAID0Aiba2tlwuF3dkBaAzGHdZAqjG1NSUBt7LM5vN29vb
3GUJoBrU2rfb7dzBLVYsFuMuSAA1ociofeKdcDjMXYoAKuP1ermDWxQMyAfI
19LSks1m485u4err69PpNHcpAqjM0NAQd3YL53K5kskkdxECqMzXr1/v3r3L
Hd8COZ3O8/Nz7iIEUJ/t7e2ysjLuBBeCUo9xuQCF+fLlixpn3LLb7aenp9yF
B6BWapxg0+FwHB4ecpccgFodHx/X1dVx5zg/Xq+Xu9gA1G1zc1NdS+cEAgHu
MgNQvcePH3NHOQ/Pnz/nLjAAdRseHlbXGF2MyAUoxs7OjupexIvH49zFBqBW
6XTa5/Nxhzg/drv9+PiYu+QA1KqlpYU7xHnD+rYABVPpGrhlZWUYmAdQgGg0
qsZReaSpqQmpB8jXxMSESiNP+vv7ucsPQGXevXun3sjfubzWcxchgJp0d3dz
p7ZYdMoKBoPcBQmgDpFIhDuyYhgMhpGREe7iBFABahtz51UYCn5LS0sqleIu
VABFa2ho4A6rYFjsEiA3LV3rs5qbmzFUD+BnXr9+zZ1RWTx+/BjT6AHcaGpq
ijugcikvL19cXOQuYADFOTg40NKq1tfY7faFhQXuMgZQnNraWu50yoiCPz8/
z13GAMoyMDDAHU15YYEMgGsmJye5cym7p0+fchczgIJMTExwh7IU2tvb8V4e
QIYGxuFLhAE8ABnNzc3ccSwdv9/PXd4A/NQ4ZVYxqEfDXeQAzPSW+rq6OnTw
Qef0lnqLxYIxe6BzbW1t3EEstd9//5271AE4jY6Ocqew1MbHx7lLHYCT3lr4
pKOjg7vUAXgkk0ldPbbLamxs5C57AB7Pnj3jzh8Pj8eD2/igQ7Ozs+patVYg
Sv3JyQl3DQCU2vPnz7nDx6aiooK7+AEY6PCBXZbb7cb8WqBD7e3t3OFj4/f7
MYE26JCer/UDAwPcxQ/A4O7du9zhY/Px40fu4gcotenpaVUvZ1kMh8Oxs7PD
XQMApZNOp8fGxux2O3f42GBuDdCVaDRaVlbGHTtOBoNhdnaWux4ASiQYDOp2
WE5WXV0ddz0AlAhFnjtw/Ewm0/T0NHdVAJRCX18fd+AUwW63Y3AO6AGu8lc1
Nja+ffuWuvaLi4vb29vclQMg2MXFhX5mvc6LwWAwGo02m62hoWF9fZ27ogDE
SKfTgUCAO14qgBk2QBuo99rU1MSdJ3VobW3lri4AAUKhEHeY1MFqtWKpa9CA
s7Mzl8vFnScVqKioiMfj3NUFIEA4HObOk6IZDAa32z08PIyneKAB379/7+np
MZvN3MFSFioQi8Vy7969pqamoaGhubk57ooCEGNxcbGqqoo7YUphMpm8Xu/z
588jkcjW1tb+/j53/QAINjMzY7PZuKOmFNRhxwUdtI0uZE6nkztqSvHrr79S
T4e7TgDkpcPFa25EnfdQKMRdGwCyW11dNRqN3IFjZjAYnj59urKywl0bAKWA
kfYOhwOP3UGNIpFIIBAYGxvb3t5eX1+PxWITExMzMzO5/9Xy8rJup7/LqKio
SCQSpakjAIH29/dtNlsmv9Q5zTxwd7lcr169yv0P6SzBHTtOPp8PC1eBSoXD
YQq72+3OXrgp8kdHR7f+w/v37/PmjlFbW1symSxB7QDI4fHjx1e/zwaDoa6u
bmtrK/e/0u2te2oLvX//vjRVA5CXVCr16dOnz58/3/qb4+PjDocj85WmyIdC
ofPz87Ozs5/9/sXFhW4jTx35W293ALCgzFKvM/NFLS8v7+npOT4+vvE319fX
v3//np3nymg00s9TU1P03aYzxo3LsY2MjPDFjhM1ijACB5Tp27dv2VXksg/T
6SK1t7eX/Z2VlZXFxUX6YW1tja7sh4eH9AvZr7fhEv1b6uBTa58+7cuXL9l/
m20Y6IfJZBoeHmaoSwBpHj16dOey+/n69eulpaVsazwQCExPT9PVamhoyG63
u91uahJEIhGK/B+3TWtJX/uampre3l59TpKD9ShByajT7fV671xOx5r5m42N
DYvFkvn20mWawp75mYJMEfZ4PL/++iudB6xWK1uolI3OkLu7u7zVCpADNeNt
Nhs1zqlvnv1Lna8zVSRMaAkKR9d6aslXVlZe/UtqoHJHR62oRRSLxbhqE0Ci
eDw+MjKSTqf/uJyu9tu3b/39/dzpUavq6mru+gTIG139JyYmsLJkYeiEyV2B
AHk7PT1tbm7mTo8qGY3Gq48sAdRiaGiIOz1qZTabV1dXuSsQID/UvK+rq+NO
j1pRtwi38kBd5ufnGxoauKOjYjabDatPglpEo1Gfz6fzKS+KV1tby12TALfb
399vbGzEHXshRkdHuesT4BYLCwsej4c7Kxpht9ulTC0CwGhubo6+qNxZ0Q68
ZAcKNzY2ln3FBopHTSasPglKln2bHoQwGAyYMAcUa39/3+/3c6dEa/A2vUQX
Fxc62ahynJycVFdXc0dEa+rq6rgrFuBmOzs7GIEjnMPh2Nzc5K5bfbm4xL0X
KrC7u1tZWckdEa1xOp2ZuQShlIqPvE5OGvqcvE5WFPnl5WXuigWlUNqZRLcT
U8vH4/FguTq4SlGpPz8/1+HE1LKqqanZ2dnhrliAn+rq6uJOiabU1tYi8qBk
q6ureI1OoLKyssxaAACKhTF4YkWjUe4qBcjl+PgYC1UIZLfbry4BBqBAdGHi
DoqmuFyu7e1t7loFyAXP6MX65ZdfuKsU4BYYjCdWKBTirlKAXHZ3d/H6vEAm
kwlTXoPCTUxMcAdFU9xudyqV4q5VgFy6u7u5g6Ipra2tVKqZpQABlKmnp4c7
KJoSiUS4qxTgFki9QNS8V9S7FQA/Oj8/x3zXAg0ODnJXKcAtYrGY0WjkzopG
mEwmDM4B5VtcXEQLXxSsRw+qEI/HqSvKHRctoGI8PT3lrk+A2y0tLWHduuJR
GU5PT3NXJoAkBwcHeNuueF1dXdw1CZAHDMIv3suXL7mrESAPmE+jeEajMRwO
c9ckgFTBYJA7NFpgMplWVla4KxNAko6ODu7EaER3dzd3ZQJIgiUsRTGbzZj6
HlShqqqKOy7a8eTJE+76BLid1+vlzop2WK1WTIgNyofUi4U3bUH5KioquIOi
KQ6HA8vXgsLpai4di8UyMDAg95zA4+Pj3LUKkEsqlSorK5M1BUpgMpmam5sz
j9SXl5fle7/Y5XIdHBxw1yrALfr6+mSKgEI0NjZ++fLl6iGXl5fLtK2Ojg6u
egSQLpFIaHty7B+Hyz558kSmbdG1HstdgSq8evVKphQoAfXlrx0vdb3l29z7
9+9ZKhEgX9QMli8IvHp6en48Xgo+XZfl2FxmcmwA5Ts4OKiurpYjBex8Pt+N
hyzTm0cOhwNjdUAt5Ovt8qqrq7vxeL99+0YJFb45g8GAR/agCktLSyaTSXgE
lCDHPJaRSET45uhMgrVvQBWGh4eFf/+VIPekdnIs7kknz6mpqVLWHUBhsgPy
zWaz2BTwstlsuWevjcfj9DtiN2q1WuljS1Z3AAXY3t7OhJ0aw5ubm1oarSdl
Als52jnUhEDvHpTsw4cPd67chtLYFJq3jpfb29uTY5yS3+8vSe0BFCLzDIsu
9xcXF5OTk9lJ8ulvKA5ut1vVzX6Xy/X9+/cch59KpWS6mf/58+eSVSJAXjJv
3lG0BwYG7HZ75ktLV/zR0dFQKLS6ujozM0ONf5W+jE8nrlsfoDc3N8ux6ZaW
ltLUIEC+KOzXvq50fcwk5dpV8tmzZ3KkQ1Z0NltbW8tdAvPz83I08hsbG2Ws
NoAiUHf+WhuervhnZ2c3/vL79+/zGsuqhEW1pDxKm52dzbZzRAkEAqLrCkAM
6s7/2HofHh7+2e+fnJwEg0H6J7cO7KF+wdzcHPUg/H4/45t9Eh+gf/z4UexO
UhGJqyUAwVpbWzNfVKvVSj16ukDTn7eOMUskEhMTE9T3p37xo0ePHjx4kF04
jz7hWq92c3OTuhJSYkVtCbHp+/G1u5+Jx+MCN00tqJ2dnQKrBEBmlNDMF7Ws
rGxmZsbhcNB1/Nu3b/l+ztevX9va2hoaGn42TIU+PEcHgZoE09PT1LkQuzxH
Xi1t2nOBTX06JeZbhgAlQC387MT4dHmqqKgwGo30A0VYjs3t7e3d+GIvXWSz
008tLCwInOfK4/HktYcCl/+rqamRoQgBikWt9B8j5nQ6k8mkfBt98eLFtRt9
1E24+gvUYBAVPWq65HUsAp9R4oYeKBP1xzNfUYqh2+22XGpvb5d7u6Ojo9ln
B7Tdax2Krq4uUdGTMi73qp6eHiHbpV5SLBYTXWwAAtBlPfMttVqt0WiUWtdr
a2upVKoEm15cXOzv73/z5s3R0dHVvz88PBT7UkxlZaX0vdrY2BDStcfS9qBM
Hz58yLa0qUdP19/9/X3unfojHA4XH7pr6Eil7wCdi4rfInVS5CsigIJlh9tR
55e+pXSNKysrGxsb450aQo4ltqU/v/vjpvGKBaDT6bVJuQGUINuHzdy9z3S0
qZddmhb+z1xtgYgSDAal74CoeXQxQz4o0MrKSnZozZ3Ly1Nzc/PS0hLvXlFL
Q/hr/nmlfm5uTshGMTwPlCkWi2UHpOV110tW7e3tQnKXlWOM8Y/evHkjZKN4
Xg+Kle3GPnz4kHtf/iR8Kst79+7lftH+qqdPnwrZaHV1taylBFCwhYWFTD/6
0aNH3PvypxvfCSpSZ2enxK3X19cL2SKdPWQtJYCCZabQMRqNTqdzY2ODe3f+
RJ1rsevP0qdJmc4unU7fvXtXyBb7+vpKUFAABciMPM/cyvvZm/UshM/jMTY2
dutGj46Ort7hLEaO2fgBeI2MjGS+pdSb5t6Xv/n27ZvYQXpSUn96eorUg4ad
nJzE4/Genp7y8nJqAI+Pj3Pv0d9QAN1ut5AAZkg5QIErAb148aIEpQSQl83N
Tbq+f/r0KZlMTk9Ph0KhRCJxcXHBvV9/mpiYEJK+rBuXuL2KOvUCX/y59iIh
ALvl5eWhoaFrHfmVlRXegXlXCR+a++TJk9xb3NraEjgs8NaTDECJ0Td8cHBw
YGBgYWFB1rfpCzY5OSkqgBm3PkqjM96Nk34UJq/B/wAls7i4SNf33OvBMRLY
3iatra23bpFOgH6/X8jmuru7S1BEABoj9q3bqqoqKf2X7e1tIQviYBw+QL7O
z8+FT1Pv8/mkDM0t/mxjMBjyGvwPAH9czrIl6iHaVVIeo4+NjRW5lfr6+hIU
EYDGyLTArtvtvvXpZDEPDS0WS0VFhfRh/wCQJcekOuTu3bu3pj4ajRb8+Zl3
+ZXzRgOAigQCAYFhzzCbzZToWzc9NzdX8IN76piUoHAANEn4jDokHA5L2fTS
0lLBb/z9bOkfALhVeXm52MhLX1264NRTWyKRSMhaLABadXp6KuSheZbFYtnc
3JS49bW1tcIeH1D7RNZiAdCwr1+/Clxhli7ceT09X19fzy7NkxdMgw9QsGJ6
1j/Kd3Ds0dFRYQOEMBs2QMGWl5cFpj7f199SqVSORbdzGBkZkalAADRPbOrz
Xc/6j0LvJX78+FGO0gDQA7GpNxgM+T5QoxNFvlsxm83SbxgCwDViU38n/1ns
Cki9cpYRAVCjlZUVsanP9+56Aam/da4eAMhBeOotFsvOzo70HSgg9ZgUF6AY
wWBQYOSJyWRaX1+XvgP5pt5gMMzMzMhXIADadnFxUV1dzZv6fO/hU1tid3dX
vjIB0LZUKiVqKYosm822v78vcQeSyaTT6czr8+n3z8/PZS0WAA2ja31bW5vY
fn1es9htbW3lOx44EAjIVyAAOlHA/bQc8hqUW8A4fInv8AJADmLftJ2ampK+
6XzfuaNThBImz8nMEaSc1YsA8iU29XmNzcv3uaGUufhK5uIS914AFEJg6qmT
Tl116ZumU0Ren4/xOQDF297eFvh+vc1mOz4+lr71fOfIxeJWAMVbWloSuNCk
1Wo9OjqSvvW85sOnsxPtrWwlAaAXq6urAp/c5Zt6unZL/3DqichXDgD6EY1G
BV7r6XJ8eHgofevUT5f+4U1NTfKVA4B+jI+Pi4o8cblcZ2dn0rdeUVEh/cPf
vn0rXzkA6EcikRDYws9rCE06nZY+PS9eugEQReCsGvmOlT05ObHZbBI/3Gq1
4qUbACFEpZ7a9vkOWfn06ZP0WwrNzc0ylQCA3oiaGfvhw4f5bpr66dI//82b
N3IcPoAOxWKx4iNPClhRuq+vT/rnS1krEwCkKGYt6auePXuW76alr6VrsVhW
VlbkOHwAHVpYWBDyvL6AEfJer1fih/t8PjmOHUCfvnz5wpL6dDotfQVt3MoD
EEjU3byurq68tru3tyf9rZ9IJCLT4WfhnVnQD1EzY+e73OT09LTENobdbs9r
bD8A5CZqbF5vb29e25X+tl1VVZVMxw6gT3Nzc8X36+m8MT8/n9d2pae+vr5e
pmMH0KdQKFRk5O9cDpKnFnte26WzjcQPb2lpkenYAfRpampKyD38fG+4vXv3
Tsp2m5ubT05OZDp2AN2S/tz8Z2w2W17r3aTTabvdLuWTCxjyBwC3am9vLyby
Lpcr33dgu7q6JH44mvcAclhYWJB45b3GaDS+evUqr2k0/sjnToLFYvn06ZNM
Rw2gc4Vd7p1OZ15bOT4+7u/vl/6gEDPiAsgnr/nrstxu962fvLW19eHDB8pv
a2ur9Jlz7lw+F6BGSAmOHUCffD5fAamnYHq93gcPHjQ1NT1+/Jg+pKKioq6u
rqGhwe/3058ej6fgyfap04G1awHkU1jqZdXW1sZdKgBaRhdo7pT/DfUF8lpD
BwDypbTUV1ZWchcJgMYpLfVYxVI6LK0LhWlsbOQO+l8MBsPU1BR3kagGRT6d
TnPvBaiPcu7mmc3m0dFR7vIA0L7q6mr2sD948GBoaAizYgKURk1NDVfeHQ5H
V1cXlqgGKLHSX+vtdjt1K6j/jhdpAViU7Frvcrm6u7vHxsbyWvAaAMS6uLgo
/hV76phnf6bruMfjoYBT693tdldWVjY0NHR2dkYikXxf0AMAOezv71ut1mLy
ToleX18fHh5ubW0NBoOZ63g6nf7+/TseKgEo0O7ubsHvyBA8aANQnXxT7/P5
ampqqHlA/6qvr4979wEgb9TCl5566q1n/hWdKzY3N3n3HAAKMzc3J31+m8eP
H3PvLwAUa2pqSnrzHr14AA2IRCISI08dAeoOcO8vABQrGo1KTD2WnAPQhtev
X0tMfb4L1wKAMrW1tUlM/djYGPfOAoAAz549k5h66gtw7ywACNDS0iIl8haL
ZXd3l3tnAUAAv98vJfUej4d7TwFADIkv3AUCAe49BQAxysvLpaT+/fv33HsK
AAKcnZ05nc5bI28ymdQ+o10ymaQ/U6lU5gcA3UokEpToW1PvcDjUHhbK+x+Y
RxrgMvVSXr1pb2/n3lMAECMejxsMhltTj2UpADRjaGjo1shbLJadnR3uPQUA
Maqqqm5Nvdfr5d5NABAgmUwGAoFbI09aWlq4dxYAirW2tlZRUSEl8uS3337j
3l8AfRkdHfVd6uvri8ViFFiJ/3B9ff3z589zlz5fEY1Gy8rKJEaeRCIRWQ8Q
AK6anZ299mTNbDY3NDS8ffs28wA6Y2lpaWFhgdI9Pz8/MTExMjJCZ4mrK1MU
jLau9vE5ACqSTqc9Hs/P8uh2u9vb25ubm+kHyqbhX4pP+lUOh+P09JS7JAD0
orOzU2yEC0Ddf+5iANCLUCjEnfh/ampq4i4JAF2gvrn0OerlQ/swOzvLXRgA
Gvf169dnz54pIfLk5cuX3OUBoHGRSMTlcnFn/U+YRgNAPhcXF/F4/Gdz2ths
ts7OTvqzlJG3WCzU6uAuGABtGhwcLCsr+9kTN4fDMT8/T7927969Uqa+q6uL
u2AAtKm1tTVH9Oj6vrCwQL+2srJy49wXd+/erampkTItRr5mZma4ywZAm375
5Zef5c5sNsdiscyvUfv/xt/p6+tLJpMSp7aWjs4k1OngLRkArTo7OwuHwx0d
HVar9WruqMFPf5/9NYr/jfGkq3xjYyP1AgRGvrKyEm/TA5TA06dPs7mjq/zw
8PDV/0tde4G5voY2R+eN2tranp6eaDSq9vnxANRie3vb5/NVV1dT/JeXl6/9
X2pvS3wX/kd2u72+vp56ARTqrq6upqYmalr09/cPDAxMTk7Ozs4mEonv37+z
HDUA5JBOp+lCPDExQa19Cu/PMl5RUUFdA/qdyCX64ejoSMrnn56enp+fy30U
AFCAtbU1t9v9Y97v3r2b75yWmWmiU6lU5oezszPcxANQmg8fPvw4XIfa8KFQ
qODPzESeIPIAikKRpD44dc+vPZ2nfvre3l4xH0udemrbY20IAKU5ODj47bff
hoaGgsGg1+ul/vvAwMD4+Hjxn3w17xeXiv9MACgeXZGXlpaOj49lveeGdj4A
AAAAAAAAAAAAAAAAAAAAAKjR+SXuvQCA0sE4ZwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAOX4/1BvDnI=
      "], {{0, 600}, {338, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{26.839999999999996`, Automatic},
    ImageSizeRaw->{338, 600},
    PlotRange->{{0, 338}, {0, 600}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3VtIY9m/J/CamTzkJTBCXvKQhzzkIQ9CEARLpHEQwSnwIWfIg1IIHjwe
p8AzhUd6HKQEsZAukC6QRgSb0BRShEKKUIgECaGQQCgtBC+IiuIV8a5R4zVJ
z6/Nvz2euli57LV++/L9QIudislev/z2L2vvvfZajn/+P//U+F8fPXr072b6
8U/1//d/tLTU/7//9d/pf7z/9u//+1//7V8a/ue/tf7Lv/5LS8k//zd6cPW/
pP/76/c/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAdO3i4uL09PT+I5eXl9FodHJycm9vb3l5+f4/xePxm5sbuRsI
AGA409PT9HNubi4UCvX19Q3+zefz9fT01NbWtra2/vbbb3ePb21tUd0+Pj6e
mpri3nYAAH3y+/1UaakIFxUVld0ym/9aF+1hdrudntnU1EQFnHrXExMTVKuX
lpa4WwMAoGGJRCIWix0dHVHXt6amxu12/7Aa/5DX63358uXQ0FAqleJuHwCA
JlFX+eDggHrLDofDZDLlX5nvs1gsHo+ns7Nzb2/vz9svAu7mAgCo3enp6dLS
0vn5eVtbm91uLygoULYyf8FqtdJXgN/vn52dTddqAAD42urqKv0cGhoqLy8X
Wpa/UFhYSCWavhS4AwAAoFJ9fX1er1dmZb7P4/FM3jo6OuKOBAAAv5ubm8vL
S/qlpaXFYrFwFec0q9Xa2dlJm5RMJq+urrhjAwDAaXt7OxwOFxUV8Vbm++rq
6ubn5+fm5rhjAwDAKRqNlpWVcZfkL9H3RSAQ4I4NAACbtrY20SM0cmYymYaG
hr64ixwAQPdubm56enoUH9isuObmZu5QAQDIc35+zjhOIysWiwUnOgDAOEZG
Rrjrbhaok//69evJyUnusAEAiBWJRKxWK3fRzU76XDSm7AAAHRsfH9dccU4z
m82Hh4fc8QMAEOLi4kK1ozUy4XA4VlZWuKMIAKCwQCDw/Plz7hKbr6amJu5A
AgAoLBwOcxdXBVD/nxoSjUa5wwkAoJiKigru4qqMxsbGeDzOHU4AAGW8fv06
k7WotOLNmzfcEQUAUMDu7i77xHTKcrvdoVBocXGRO7QAAHlpa2vjLqjKGxgY
4I4rAEDu1tfXx8bGNDrg+WGFhYUYDg0A2hWLxd69e6f+SZBy4/F4uAMMAJCj
m5ubqqoq7joqSmlpKXeAAQByFAwGuYuoQDabbWJiAhNEA4AWdXR0cBdRsV6/
fo17VQBAW66urpaWlurr67krqFg4xQEAmkP1ube3V2fDnr9mNpvHxsa4gw0A
kIV4PD40NMRdPoWjL6BQKMQdbACALEQikZqaGu7yKUNlZeXZ2Rl3vAEAsqDp
qZ4z53Q69/f3uYMNAJAFu93OXTtlKCoqOj8/5w42AECmAoGA7i8OppnN5tHR
UayrAgBa4ff79TSh6ANMJtPg4CBmhAYArfD5fMapz9RY7ngDAGRKl3OKfhPV
ZzpY4I43AECmdH9n930NDQ3c8QYAyJSh6nNtbS13vAEAMmWc+py+PsgdbwCA
TBmqPuP6IABoCK4PAgCok3HGP5Pm5mbueAMAZCoUChnk/kHqP0ciEe54AwBk
6vr62mazcddOGag+Y34kANAQ49Rns9m8tbXFHW8AgExRfbZardy1U4bW1tZk
MskdbwCATKVSqa6uLu7aKUNLS8vo6Ch3vAEAskBVS/dDOOgYYXJykr6MuIMN
AJCFmZkZ3U/Rb7PZuMMMAJC1w8NDp9PJXUHFevLkCTrPAKBFb9++5a6gYr1/
/547xgAAuZidnTWZTNxFVBQ6OsCyVgCgUclk0uv1ctdRUcrKyrgDDACQu+np
ae46KoTdbh8fH+eOLgBA7g4PDwsKCrirqfJqamrC4TB3dAEA8jI5Oam/Eh0I
BBKJBHdoAQDypbO5OB4/fnxzc8MdVAAABQwNDelputEPHz5wRxQAQDEej4e7
rCrj5cuX3LEEAFDSwcFBYWEhd3HNl81m29zc5I4lAIDCfD4fd33NV0dHB3cU
AQCE6O3t1e4dhW1tbdzxAwAQyO12cxfarNF3Cm329fU1d/AAAARaWVlxuVzc
FTc7TqeTO2wAADIsLy87HA7uopspq9UajUa5YwYAIAn1ojVRogsKCjDPBgAY
zebmpson8E8vX8UdJwAABtSLVm2JrqurQ3EGACNbXl5++vQpdzH+ksfjwdz7
AAB/3o6L5i7J/+Hnn3/mjgcAgIqMjY1VV1fz3r3icrlGRka4IwEAoC4rKyuL
i4vBYJClRJvN5tbW1rW1Ne4wAACoTiwWOzs7o18CgUBdXZ3VapVWmZuamtbX
17kDAACgDaurq+3t7Xa7XWhxfvr06cLCAndbAQC0Z3Nzs7u7m6q0sic96AVb
W1uHhoZSqRR3EwEANCyZTI6Ojr58+TKfQk1/WFBQ0NnZ+e7dO3pB7jYBAOjK
4eHh1tbWwMBA7S2Xy/XACRCbzUZPSD/zl19+oT/c3d3lbgEAgCEcHR1tb2+P
3zM0NDQyMpL+fWNjg+o59zYCAMBfUJMBAAAAAAAAAAAAAAAAAAAAWBwcHGxu
bn79+PHx8cbGhvztAQAwuHg87vf7JycnR0ZGAoFAZ2dn2T3Nzc0tLS19fX3d
3d30nOXl5aOjI+5NBgDQs5ubm+Hh4bpbLpcrw/u7LRYLPfnp06eDg4NjY2N7
e3vc7QAA0I+1tTXqDFdUVOQ2Bcd9BQUFHz58iEQi3G0CANCw8fFxv99PvV9l
J4U2mUxms/nVq1dYMwUAIFvn5+dUmSWsqFJaWhoMBjGvHQDAD8XjcZ/PV1xc
LLoy31dbW3twcMDddAAA9VpdXS0sLJRZme8UFBR0dXXFYjHuGAAAqE57e7u0
xQe/p7y8/PT0lDsSAAAq0tbWxluZ77hcrr6+Pu54AADwm5iY8Hq93FX5S7/9
9ht3YAAAOE1NTdlsNu5i/G3oRQOAYU1OTrKfcH4YSjQAGFA0Gi0oKOAuwD9W
XV2dSCS4owUAII/kEc75wLloADCO9vZ2CfcGKqi/v587ZgAAYqVSKfUMpcuc
w+E4OTnhDh4AgECLi4vctTZHlZWV3MEDABBlf38/83mb1cZkMmG+OwDQn6ur
q8+fP/f393NX2bygRAOA/tzc3MzOzjqdTu4Sm6+ysrKLiwvucAIAKKm6upq7
uCoDXWgA0JNIJKKtAXUPKCkpocMB7ogCACggmUzqpvP8CGehAUBHqPPMXVMV
Rl1o7qACAORrZ2fn6dOn3AVVYVarNR6Pc4cWACAv6QW4uQuq8qqrq8/Ozrij
CwCQu7m5Oe5SKkR5efnV1RV3dAEAcldTU8NdSkWJRCLc0QUAyFE8Hudaj1sC
+urhDjAAQI6Gh4e5i6hARUVF29vb3DEGAMiaRqcSzZzL5drY2OAOMwBA1qg+
NzQ0cBdRsSYmJrjDDACQtWQyabfbuSuoWIFAgDvMAADZSSQSJycnuq/PnZ2d
3JEGAMjO9vZ2MBjUwYSiD/N4PNyRBgDIWiQSsVgs3BVUrOLiYu4wAwBkbXBw
0Gw2c1dQsQoLC4+Pj7kjDQCQnZGREd33nx0Ox8LCAnekAQCy09/fr5s5+b/H
6XRiCDQAaI6+b05JowOEYDDIHWkAgOyEQiHdn9+wWq3j4+PckQYAyE44HNZ9
fSZ+v5870gAA2RkbG9N9fbbb7fPz89yRBgDIjhHqMxkcHOSONABAdoLBoBHq
M85vAIC2JJPJnZ0d3c+/Qf744w/uYAMAZMEg82+Quro6+jLijjcAQHaM0H/u
6elJpVLckQYAyEIikTBCfa6treWONABAdqg+G+H8RnV19efPn7mDDQCQBTrq
b2pq4i6fwtXV1W1tbXEHGwAgC1Sf6+vrucuncJWVldyRBgDIjkHqs9Vqvbm5
4Q42AEAWrq+vjXB+w263oz4DgLZEIpHff/+du3wKZ7PZuCMNAJC1np4e7vIp
HPWfV1ZW4vE4d7ABADKVSqWePXvGXT6Fczqdnz9/3tvb4443AEAWhoeHucun
cBaL5dOnT9yRBgDIjt/v5y6fwpnNZp/Pxx1pAIDsGGGJK6rPmGIUADRnYmLC
ZrNxV1Dhuru7uSMNAJCdSCRSUFDAXT7FogOEsbEx7kgDAGRnfn7eCFPYtbW1
cUcaACA7CwsLRji/0dnZyR1pAIAsnJ+fj46OlpWVcZdP4VpbWxOJBHe8AQAy
RSVrf3/fCPW5oqIiFotxxxsAIDulpaXc5VO4hoYGLEEIAJpjhPrsdruHhoa4
Iw0AkB0j1OeqqirMvwEAmlNUVMRdPoUrKCjY3t7mjjQAQHYaGxu5y6dwTqcT
/WcA0BwjLKFCxwiHh4fckQYAyM7z58+5y6cMa2tr3JEGAMjOq1evuGuncCaT
aWNjgzvSAABZ2NraCoVC3OVTOIvFEggE5ufnueMNAJCp5eXl9+/fc5dP4aj/
3NfXxx1sAIDsTE1NcZdP4ag+z83NcUcaACA7nz9/5i6fMjx79ow70gAA2TFC
fbZYLPX19Y9vdXR0eL3e9O8vXry4+728vLynp+fr33/66ae73+9UVVV1d3ff
/f7LL788/kpnZ6fH4/n6cXHo7ehNh4eHJyYmLi8vuTMLAPL16dMn7vIJyisp
Kfnjjz9w1ySApq2trblcLu5yAkKYzeampqaZmRnuLAOAXFAXy+12cxcSEMhm
s2EFcwAtQn02iPr6+lQqxZ1uAJCFvb09nN8wiKamplAodHp6yp10AJCRsbGx
mpoa7soBkni93qurK+6kA4CMzMzMGGEJQrjT09PDnXQAkBE62i0vL+euGSCP
w+Ho7+/HDZUAkp2fn+/v72f7V/X19dw1A6Sib2Sc5QCQJh6Pd3R0NDc3j46O
Zvu3Xq+Xu2CAVCaTKRKJiMhDAPgC7WtVVVW037lcrhwWCvn1119ph+WuGSBV
ZWWliFQEgDtUjfv7++92uuLi4t3d3WxfpKurC/XZaMxm88jIiIicBACyuLj4
xdBlp9OZw0IhfX19qM8GRN/ssVhMRGYCGNnMzExzczN1gb7e6T5//pztqw0O
DqI+G5DH4wmHwyLyE8CwpqenbTbbN/c4h8ORw0KoqM/G5PV6ReQngGFRt9lq
tX5vj8uhPh8fHy8tLVksFpmVAdSAPnTc6w2giGAw+OTJkx/udJOTk1m97MbG
RktLyzdPlYC+FRQUoD4D5I+Kc4YllOpzMpnM6sWXl5dxfsOAUJ8B8hSPxz0e
T4bFmcqs3++fmprK6i12d3fRfzYgnN8AyMfS0lJFRUVWO93w8HC277K9vY36
bEAul+v8/FxE3gLo3v0bTzLX3d2d7U5H9VnxfR/UjxLs5OREUPYC6NjAwEAO
e5zJZKL+c7brzcVisZKSEsV3f1A5+irHLBwAWdnZ2Xn9+nXOO11NTU2273h2
dpbJyBDQE4fDcXR0JCKBAfRqY2PD6XTms9/lMPv66elptme5QevoExeRwAB6
tb6+nv9SgD/99FO275tIJFpbWxXZ60ETTCbT2NiYiBwG0KV3794VFhbmv+u1
t7dn+9axWAz9Z0MpLy+/vr4WkcYA+kOdGaVGuDU2Nmb77qFQqLOzU5F3B/Wz
2Ww5TKIFYEzU41Vw7ystLc1hG7q7uxXcBlAtq9WK9WEBMqRscX50e+iaw2ag
PhvEmzdvFM9hAF1SvDg/Qn2G76urq7u4uFA8jQH0R0RxJna7fWho6ObmJquN
wfln3QsEAqlUSlAyA+iJoOJMqqqqZmdns706PzY2VlBQIGiTgJfL5fL7/SjO
AJkQV5wf3fafFxYWst0k1GddcrvdAwMDqMwAGXrx4oXQXZLKbDQazXarIpEI
6rNumM3m2tpan893dnYmIocBdElozznN6XQuLy9nu2EG6T9TcEr0q7+//+3b
t6FQKIcDKACDk1CcH90OcJ2YmMh222Kx2PfWnNWToaEhEZ+seiwuLl5dXXFv
BYCWpFIpOcU5LRAIZLV5+/v73d3dRqjPAwMDgj5iANCoDx8+SCtBdAi/tLSU
1eZdXl4eHR3lOW+eJtTU1CQSCUGfMgBoC1WDFy9eOBwOmVUot6N4yRvJor6+
HvUZANJmZ2flV6FgMJjtdqZSKSOc30B9BoC09fV1RaYMzVZzc3MOW9vQ0CB/
UyXzer2ozwCwubnJUpxJX19ftltL/efS0lKWrZXJYrFgeAMAyByw8QWfz5fD
up+NjY1cGyxNU1MT+s8ABtff328ymbiqUH19fQ639BqhPttsNvSfAYxsYGCA
twoNDg7msNltbW28my0B6jOAkU1OTvLWn0gkcn5+nsOWd3V1MW65HBQfTBYE
YExUGCsrKxmLz9zcXM4bb4T6bLVaMTcFgDExroLtcrnyKc7Hx8fv37/n2nhp
LBYLlkYFMKBgMMhVdjo6Oi4vL/PZ+PHx8b6+Pq7tl8bpdE5NTe3u7ir1oQOA
+u3t7XEN2KisrNzf38+/CYFAgGX7ZbJarfQ1Go/H8w8XAGjC3NxcSUkJS8Hp
6upSqhWLi4u6n4LDYrGEw2GlIgYA6sd1Z7SCxZmEQiGz2czSEJk6OjoUDBoA
qNnMzAz1yuTXmc7OTmUbYoT+8yMBcQMAdZqammKZ9k1EkZmbm7Pb7fLbIhN9
k46NjSkeOgBQIY/HI7/IKHta487s7Kzu6zNpa2sTET0AUJXu7m755UVQcSbb
29tGWEKlvb1dUAABQCWomsnvbYo7d3p5efn582fGmx+lwflnAN3r6emRXFhe
vnwprjmJRGJtba28vFxyo+Srra2l9m5sbNDPnZ2deDx+dnaWDkIsFjs9PU0/
np6GNP00esLJycldrFZWVr74hUJHP1dXV+nnwcHBxcVF+vH0I2Rra4t+Xl9f
fzFSfXNz8+739Hvd3Nwc3UrPE0Jbcvf69HZ7e3tXV1e0zenH6c/plekn/VMy
maQH05u0vr5OP3d3d2nL6U3T70IPbt1KPyf9h2Tjb7Tl9GTa5vTj9IT0+wJo
SzAYlHw3Smtr69TUlOj9paysTGajuNDXEB37lJaWOhyOwltVt1wuV/p3ery4
uJh+oadVVFTQg/RPVX+z2Wx0oEG/WK1W+kmvRo+kH6efTqfT7XbTL/SH6UfS
r0OxLSoqon+9ex16hB7/4nd6X9etklu0JelXfvz4Mf2kP6cXoe2hx2n77X+j
f6I/pAfpF3o8/ZOeTM+k56ffnR68ezK9mv0r6Re/e1r6memWktevX/t8Psxe
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
iZs+zm635zx1/5+3SzYbdjg0HVmnLwgadimrTBweHkr4LN6+fcvdUDCoFy9e
CM3tnMf5HxwchEIh0ZNJqlD61D1Oe2bih6vMK8LlcuW8AgVAPiSkdz7zJo2P
j4vePFVpbm7O54jDgORMTosuNMj38uVL0YlN+vr6ct7CVCol7vS4qlAnLZ9A
GZmEoT4YCw3yCV2t/k6eCwadnZ3pe41Ct9tNlRkXoXLW09Mj+jMymUy4nRBk
onyTcGD49OnTPBesPz091eukHLTXl5SU5HwvPJBEIjE9PS3hG5zeYmVlhbu5
YAjUW8t5Hv7Mmc3mubm5PDd1b29vdnb22bNnordWsvLycoydy9/FxUU0Gs1z
XtwMeb3e3BZxA8hKd3e3hHyuqalR6q7kmZkZ3axRaLVaOzo6wuGwIpGBP2/v
JXQ4HKI/OEX6GwAPo8ogofNMVWhkZETBLqLo+RbkqKqqwsSVIshJD/r4cDsn
iHN5eSlnmRK3263sllPXRdPz2tlstnyGGsID4vH44OCgnM+xt7eXu7mgWx8/
ftRuGmt3jcLOzs6cly2AH1pdXaWjkurqagkfpd1u524u6NPKyoqE03SPbi92
5zms7pvOz88fP34sYfsVVFpaijl25Hj16pWED5QO4hoaGm5ubribC3ojelWg
O+KWbzs8PNTKhULakevr67EilTQbGxtFRUVyPtzx8XHu5oKuHBwcyKlsNptN
XPZSv0UTt6vU1tbOzMwICgJ8z9jYmJw5tSjJNzc3uZsLOnF1deV2uyXkLXUa
RV9AWV1dFb18cz5o23w+HyY4YjE3N6fUMpo/1N7ezt1c0AlpV7dp75CwJNDP
P/8spznZqqurm5iYEN18+J7j4+NAICDt4x4ZGeFuMWgeFWdpI9N+++03OY2S
M0owc06nc3JyUk7b4QHX19fScqOoqGh3d5e7xaBhV1dXcsZsPLqtUdIuh4VC
ITmN+iEK7+vXr7e3t+U0HH5odHRU2qfvcrni8Th3i0GTqFrKGRT66Pbu15aW
Fmk3wFI3ScLk1Q+jo5LKyspYLCanyZChZDIp8/Aqn3XcwMjkzPCcRtUylUrJ
XGmCDg0YLxTSF9/IyAgmzFGnYDAoc3E0zD4K2RobG5Mwz8ad7u5u+W2Uc0vC
F+hLobm5WX5jISuSl4Cn3Y27xaAZq6urMu/joJLFchZub2+vrKxMWjMf3c4r
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
AAAAAAD5/j9NV+e8
      "], {{0, 480}, {480, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{36., Automatic},
    ImageSizeRaw->{480, 480},
    PlotRange->{{0, 480}, {0, 480}}]}], "}"}]], "Output",ExpressionUUID->\
"19ed27cb-2977-42f5-9669-1cb4d8285b7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"One", " ", "possible", " ", 
   RowBox[{"answer", ":", " ", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "img", "}"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"invert", "\[Equal]", "\"\<negative\>\""}], ",", 
           RowBox[{"img", "=", 
            RowBox[{"allImagesXray", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"img", "=", 
            RowBox[{"ColorNegate", "[", 
             RowBox[{"allImagesXray", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"GraphicsRow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"img", ",", 
             RowBox[{"ImageAdjust", "[", 
              RowBox[{"SkeletonTransform", "[", 
               RowBox[{"img", ",", "t"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}]}], "]"}], ",", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "f634Tile", ",", "\"\<image\>\""}], "}"}], ",", 
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"Range", "[", "numFilesX", "]"}], "\[Rule]", 
              "imageNamesX"}], "]"}], ",", 
            RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"Spacer", "[", "30", "]"}], " ", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"invert", ",", "\"\<positive\>\"", ",", "\"\<\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<negative\>\"", ",", "\"\<positive\>\""}], "}"}]}], 
            "}"}], "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<The morphological skeleton applied to canvas x-rays\>\"", ",", 
         "Medium"}], "]"}]}], ",", 
      RowBox[{"TrackedSymbols", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "invert", ",", "t"}], "}"}]}], ",", 
      RowBox[{"SaveDefinitions", "\[Rule]", "saveDef"}]}], "]"}]}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.551736645717691*^9, 3.551736671202897*^9}, {
   3.551736703703436*^9, 3.551736752629221*^9}, {3.551795383774*^9, 
   3.5517953868401327`*^9}, {3.551795422104644*^9, 3.551795430102908*^9}, 
   3.553704603258709*^9, {3.553795196091916*^9, 
   3.5537952026663647`*^9}},ExpressionUUID->"ced7d747-03a4-473b-af2b-\
694e468bf287"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ultimate Erosion", "Subsection",
 CellChangeTimes->{{3.551799259498135*^9, 3.551799262523559*^9}},
 CellTags->
  "ultimate erosion",ExpressionUUID->"aefcc26e-5944-4d17-9f05-28fcffec11d7"],

Cell[TextData[{
 "Dilation makes white objects larger; erosion makes them smaller. If an \
image is eroded, then eroded again and again, eventually there will be \
nothing left but black. Returning one step backwards (i.e., before the final \
erosion) only a single white point remains, the most central point in the \
object. The idea behind ",
 StyleBox["ultimate erosion",
  FontSlant->"Italic"],
 " is to erode each object to nothingness and then go one step backwards to \
return a single central point for each object. While ultimate erosion can be \
implemented exactly as described, there is a better way. Taking the ",
 ButtonBox["distance transform",
  BaseStyle->"Hyperlink",
  ButtonData->{"visualVocabDistance.nb", None}],
 " creates a topographic surface of all the objects; the highest point in \
each connected surface is a central point. Accordingly, much the same method \
can arise by finding the maxima of the Distance transform."
}], "Text",
 CellChangeTimes->{{3.551799806892016*^9, 3.551800084816833*^9}, {
  3.551800193958016*^9, 3.5518003098907013`*^9}, {3.551800356327573*^9, 
  3.551800428882772*^9}, {3.5518013592504168`*^9, 3.5518013592575293`*^9}, {
  3.552689871732149*^9, 
  3.5526898774744463`*^9}},ExpressionUUID->"9bbb3912-6f09-4939-983c-\
31c4ec9b7c83"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "labelUltimateErosion", "=", 
   "\"\<Ultimate erosion (right) of a binary image (left) shows one point for \
each separated white ball\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "infoUltimateErosion", "=", 
   "\"\<Click to work with several synthetic 'new images.'\\n\\nObserve that \
the center of each circle is found by the ultimate erosion.\\n\\nWhen \
multiple circles overlap, there is often a dotted line of answers.\>\""}], 
  ";", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rd", "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{"setToOne", "=", 
         RowBox[{"Round", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"100", "/", "2"}], ",", 
               RowBox[{"100", "/", "4"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"3", ",", "10"}], "}"}], "]"}], ",", "2"}], "}"}]}], 
            "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"synSkelImg", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"White", ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"setToOne", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"RandomChoice", "[", 
                  RowBox[{"Range", "[", 
                   RowBox[{"5", ",", "20"}], "]"}], "]"}]}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "setToOne", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{"Background", "\[Rule]", "Black"}]}], "]"}]}], ";", 
        RowBox[{"rd", "=", "0"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"GraphicsRow", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"synSkelImg", ",", 
         RowBox[{"distImg", "=", 
          RowBox[{"ImageAdjust", "[", 
           RowBox[{"DistanceTransform", "[", "synSkelImg", "]"}], "]"}]}], 
         ",", 
         RowBox[{"Dilation", "[", 
          RowBox[{
           RowBox[{"MaxDetect", "[", "distImg", "]"}], ",", "1"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], ",", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rd", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<New Image\>\"", ",", 
             RowBox[{"rd", "=", "1"}]}], "]"}], "&"}]}], "}"}], "]"}], ",", 
       RowBox[{"Spacer", "[", "20", "]"}], ",", 
       RowBox[{"info", "[", "infoUltimateErosion", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"labelUltimateErosion", ",", "Medium"}], "]"}]}], ",", 
    RowBox[{"TrackedSymbols", "\[Rule]", 
     RowBox[{"{", "rd", "}"}]}], ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "\n"}], "Input",\

 CellChangeTimes->{{3.551910096159931*^9, 3.551910096226419*^9}, {
  3.5526901829744873`*^9, 3.552690183377265*^9}, {3.5526903363199263`*^9, 
  3.552690365881194*^9}, {3.552690399029601*^9, 3.552690510187092*^9}, {
  3.5527597427043657`*^9, 3.5527597448593817`*^9}},
 CellTags->
  "labelUltimateErosion",ExpressionUUID->"ffd35b8d-3cc5-457e-8b5b-\
2100879d8d77"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`rd$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`rd$$], 1, ""}, 
      Dynamic[Button["New Image", $CellContext`rd$$ = 1]& ]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
          Graphics[{
            RGBColor[0, 0, 1], 
            Disk[{0, 0}, 10], 
            GrayLevel[1], 
            Disk[{0, 6}, 2.2], 
            Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
          CreateDocument[
           Internal`PopupWindowNotebook[
           "Click to work with several synthetic 'new images.'\n\nObserve \
that the center of each circle is found by the ultimate erosion.\n\nWhen \
multiple circles overlap, there is often a dotted line of answers.", 
            WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
          None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    1000., {216., 222.22114444400984`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`rd$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (If[$CellContext`rd$$ == 1, $CellContext`setToOne = Round[
            Abs[
             RandomVariate[
              NormalDistribution[100/2, 100/4], {
               RandomInteger[{3, 10}], 2}]]]; $CellContext`synSkelImg = 
          Graphics[
            Table[{White, 
              Disk[
               Part[$CellContext`setToOne, $CellContext`i], 
               RandomChoice[
                Range[5, 20]]]}, {$CellContext`i, 1, 
              Length[$CellContext`setToOne]}], Background -> 
            Black]; $CellContext`rd$$ = 0; Null]; 
       GraphicsRow[{$CellContext`synSkelImg, $CellContext`distImg = 
          ImageAdjust[
            DistanceTransform[$CellContext`synSkelImg]], 
          Dilation[
           MaxDetect[$CellContext`distImg], 1]}, ImageSize -> 800]), 
      "Specifications" :> {{{$CellContext`rd$$, 1, ""}, 
         Dynamic[Button["New Image", $CellContext`rd$$ = 1]& ], 
         ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
           Graphics[{
             RGBColor[0, 0, 1], 
             Disk[{0, 0}, 10], 
             GrayLevel[1], 
             Disk[{0, 6}, 2.2], 
             Rectangle[{-1, -6.5}, {1.8, 1.8}]}, ImageSize -> 15], 
           CreateDocument[
            Internal`PopupWindowNotebook[
            "Click to work with several synthetic 'new images.'\n\nObserve \
that the center of each circle is found by the ultimate erosion.\n\nWhen \
multiple circles overlap, there is often a dotted line of answers.", 
             WindowTitle -> "Notes", WindowFloating -> True]], Appearance -> 
           None, BaseStyle -> {}, DefaultBaseStyle -> {}]}]}, 
      "Options" :> {
       FrameLabel -> 
        Style["Ultimate erosion (right) of a binary image (left) shows one \
point for each separated white ball", Medium], 
        TrackedSymbols -> {$CellContext`rd$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{1058., {282.91754141980783`, 290.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`setToOne = {{9, 32}, {80, 21}, {77, 16}, {
        64, 9}, {81, 32}, {15, 75}, {43, 77}, {63, 
        34}}, $CellContext`synSkelImg = Image[CompressedData["
1:eJzt3UFuJEuSGNDCaKPFAKkbEDpBbgfaEFpqlcAIWhMzUGugTSfQM4CgFY/A
I/AIPAKPwCPwCHWEkPfPEYudzEomkxFhZu7vAb/Rv1H/d4Z7hFu4hbn7f/7n
/T/+r7/78ePHv/7H9h//+E//57/+5S//9H//+39qf/M//vyv//tf/vyn//nf
/vxvf/qXP/3lH/75P7T/8e/bn/0v7a+//ncAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAYzWazuf3Dfr+//72Hh4dnkmmdcqbLWoceerZ1cfRd
BvBdbSh7eXmZ6FTrXNEK6EZ7S48eVplf69boOwtgZrvd7ufPn9HjK/NoXdk6
NPqeAljEzc2NrGAHWie2roy+mwAWtNlsHh8fo4dbrte6z4cqYBB3d3eyguW0
LmsdF33vAKxqu93KChbSOqt1WfRdAxBAVrAK2T+A/X4fPRhzTuug6HsEIIXt
duszVkKtU2T/AN6z5UU2NqkA+B1bXiRhkwqA8+7u7qKH6tEpUwe4hM9YUXyo
AvgSn7HW50MVwBWsxlqTFVUA33F/fx89kPevNXJ0PwOUp+5iUWoqAOai7mIJ
aioAZtfG1dfX1+gBvh+tMYUqgCUoFJyL8j+ARQlY3ydUAaygjbRPT0/RQ35V
remEKoDVWIp1hdZo0f0GMBwB60uEKoAoAtaFhCqAWALWp4QqgAwErDOEKoAk
lLX/jmJ1gFQErI+EKoCE2shsa6Y3rSmEKoCcbH57YLtagORub2+jY0W83W4X
3Q8AfGK/30eHi0jt8qN7AICLDFvTrl4doJAxSwQVAQKUM1rFhcoKgKKG+oDl
cxVAXYOchNUuM7qlAbjeZrPpPh/YLtDnKoDqdrtddDxZltVVAH14fn6ODilL
aZcW3boAzOPm5iY6qiylXVp06wIwm/v7++jAMr92UdHtCsCc+tuh3S7rAF26
u7uLjjBzapcT3aIALKKb6VW7kOi2BGAp3UyvTKwA+tbB9MrECqB7HUyvTKwA
RlB6L6b246PbD4A1PDw8RMec67UfH91+AKyh9NYWNq8AGEfRnQPtCggwlKK1
FuorAIay2WyiI881bLUEMJpyxwo7IBhgQOWSgdKAAAMqVxmoGhBgTC8vL9Eh
6FLtp0a3FgAxCi0TtigYYFi73S46Cl2q/dTo1gIgRqFPVz5aAYysxA63drIF
GFyJLZhsuAQwuPv7++hY9Ln2I6PbCYBI+/0+OhZ9rv3I6HYCINLt7W10LPpc
+5HR7QRApBJlgQoCAYiORZ+LbiEA4kXHos9FtxAA8ZLvFmiHQAB+pF9yZbEV
AD9EKwAqEK0AyE+0AiA/0QqA/JKfyegcRgB+pN/Y1pa2APwQrQCoQLQCID/R
CoD8RCsA8hOtAMhPtAIgP9EKgPx2u110RDqn/bzoFgIg3u3tbXREOqf9vOgW
AiCeaAVAfqIVAPmJVgDkJ1oBkJ9oBUB+ohUA+YlWAOQnWgGQ32aziY5I57Sf
F91CAKQQHZHOiW4bALKIjkjnRLcNAFlER6RzotsGgCyiI9I50W0DQBbREemc
6LYBIIvoiHROdNsAkEV0RDonum0AyCI6Ip0T3TYAZBEdkc6JbhsAsvj582d0
UDqt/bDotgEgi+fn5+i4dFr7YdFtA0AWohUA+YlWAOQnWgGQn2gFQH6iFQD5
iVYA5CdaAZCfaAVAfqIVAPmJVgDk9/j4GB2XTnt4eIhuGwCyuL+/j45Lp7Uf
Ft02AGQhWgGQn2gFQH6iFZDNdru9fWez2UT/IuKJVmTWhqn3o1YbxKJ/EbM5
dO5+v394eHh+fn55efl0WHh9fW1/8vHxsY0PothoRCsyOAxcrdPbQNSGozYo
fXqHtMGt/ck20LXhzsBVRXvfaP319PR0SRdfov172j2z2+3cAN0TrYjShpc2
yLShZsaBqw2DbTA0BUuldfTd3V3r6J8/f87S0b/Ter/9HwlbvRKtWNlh7GoD
y6L3TxsY2/Bo7Aq0Tkef1Lq+TbejG4CZiVaspg0gIavRvXKvrE2ZQ4LUkZeX
l9bv0Y3BbEQrVtAGjUu+oS+tDaFtII1ujG7d3Nw8PDwsne77qtfXVzGrD6IV
i2oDxVyfpebShtM2qLahNbpt+tFmzRkmU2e0lyW5wepEKxbSBocM86kz2gBr
BPum9jaSdmfsj1qPe0upa7fbRd9Bp8nY1NUGhORv2u+1wVam6AoJZ82XaDPr
/X4f3Xhco71bRt8+p3npLaoNBdm+XFzC143LFY1T77VXFFU35YhWzKU9/oWS
QieJWeflz+5err1TSeDUIloxi/bgV5xSneSL/Efb7bb6q8hJztErRLTi+9oj
H32/zK8NzvbE+PHHlDntma2zkBWsQrTiOzrI/p3XBuqRh7KiXyG/qs2mvZnk
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
hf+NmA==
         "], "Byte", ColorSpace -> "RGB", ImageSize -> {38., Automatic}, 
         Interleaving -> True]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellTags->
  "labelUltimateErosion",ExpressionUUID->"c194804a-44a6-4896-9afd-\
cb1fa59c1586"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
WindowSize->{1141.2, 568.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowCellBracket->False,
ShowSelection->True,
ShowCellLabel->False,
ShowCellTags->False,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"48be8bdd-e703-4142-80c7-9fd99be51d3e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "representation"->{
  Cell[1221, 41, 395, 6, 83, "Section",ExpressionUUID->"c2dc1044-f686-4fea-a152-65417f1403bd",
   CellTags->"representation"]},
 "erosion and dilation"->{
  Cell[152998, 2815, 252, 5, 67, "Subsection",ExpressionUUID->"47d2c683-a317-42d5-946b-1587d8d54b16",
   CellTags->"erosion and dilation"]},
 "labelErodeDilateBW"->{
  Cell[154846, 2860, 5777, 130, 488, "Input",ExpressionUUID->"0937552f-696a-4fdb-bdd5-a717a33c1cab",
   CellTags->"labelErodeDilateBW"],
  Cell[160626, 2992, 17312, 314, 588, "Output",ExpressionUUID->"ec73d8c0-18e9-4e8a-9cc9-a16495b4d2b7",
   CellTags->"labelErodeDilateBW"]},
 "labelCloseOpenBW"->{
  Cell[179722, 3357, 6454, 146, 464, "Input",ExpressionUUID->"8bb32603-ee96-4176-ba6f-4502467f4f03",
   CellTags->"labelCloseOpenBW"],
  Cell[186179, 3505, 7859, 177, 532, "Output",ExpressionUUID->"3002cd7b-049b-41c8-94a1-ed64a47d8dd8",
   CellTags->"labelCloseOpenBW"]},
 "labelGrayMorph"->{
  Cell[196308, 3734, 5213, 130, 583, "Input",ExpressionUUID->"4919b145-e985-49cd-a09e-7ed9c5e89b9a",
   CellTags->"labelGrayMorph"],
  Cell[201524, 3866, 25537, 441, 376, "Output",ExpressionUUID->"e06ff959-cd89-4ed7-ae5a-0d895686287a",
   CellTags->"labelGrayMorph"]},
 "labelXRayMorph"->{
  Cell[292384, 5500, 5364, 124, 535, "Input",ExpressionUUID->"acbdf8ce-78b4-46f6-8c9f-61ba15543ad3",
   CellTags->"labelXRayMorph"],
  Cell[297751, 5626, 7949, 151, 264, "Output",ExpressionUUID->"328995d8-98a2-42d2-b62a-f9a0050857ea",
   CellTags->"labelXRayMorph"],
  Cell[305703, 5779, 453, 9, 35, "Message",ExpressionUUID->"7a181ef4-91a1-4dcd-81cf-172a4e8f42f8",
   CellTags->"labelXRayMorph"],
  Cell[306159, 5790, 473, 10, 35, "Message",ExpressionUUID->"87f9db8f-8d17-45d9-ac33-34db5d275e4b",
   CellTags->"labelXRayMorph"],
  Cell[306635, 5802, 613, 11, 35, "Message",ExpressionUUID->"c6a28fa6-e0f1-4602-b786-4d9710585c59",
   CellTags->"labelXRayMorph"],
  Cell[307251, 5815, 456, 9, 35, "Message",ExpressionUUID->"c6bee696-2273-4a44-9dc6-294b531d4afc",
   CellTags->"labelXRayMorph"],
  Cell[307710, 5826, 476, 10, 35, "Message",ExpressionUUID->"4247c8d9-3a9c-4e84-a3b9-9065723c51f9",
   CellTags->"labelXRayMorph"],
  Cell[308189, 5838, 614, 11, 35, "Message",ExpressionUUID->"59b472d7-ebef-46bf-8c0e-ba53c1841bf3",
   CellTags->"labelXRayMorph"]},
 "labelColorMorph"->{
  Cell[373056, 7021, 4256, 100, 416, "Input",ExpressionUUID->"7a1d1f83-eed5-421c-a8c2-0d37b1308e85",
   CellTags->"labelColorMorph"],
  Cell[377315, 7123, 6797, 128, 264, "Output",ExpressionUUID->"d465af6e-f200-401e-845c-3888a19a2a9a",
   CellTags->"labelColorMorph"],
  Cell[384115, 7253, 457, 9, 35, "Message",ExpressionUUID->"ce87efe8-81c1-429e-b648-b8978f8eda2e",
   CellTags->"labelColorMorph"],
  Cell[384575, 7264, 474, 10, 35, "Message",ExpressionUUID->"f126658d-8a53-4bd8-b3ce-b27378220c9a",
   CellTags->"labelColorMorph"],
  Cell[385052, 7276, 613, 11, 35, "Message",ExpressionUUID->"af7405b6-525a-416e-b82e-947659bfee09",
   CellTags->"labelColorMorph"],
  Cell[385668, 7289, 711, 13, 58, "Message",ExpressionUUID->"51708d01-d10e-4d14-89a1-40d0bc360989",
   CellTags->"labelColorMorph"],
  Cell[386382, 7304, 458, 9, 35, "Message",ExpressionUUID->"6d9a8f2f-ac38-4f01-b372-f2479d2a8af3",
   CellTags->"labelColorMorph"],
  Cell[386843, 7315, 476, 10, 35, "Message",ExpressionUUID->"c6934935-d0d5-44a0-8b3d-1ec2c6ab178a",
   CellTags->"labelColorMorph"],
  Cell[387322, 7327, 617, 11, 35, "Message",ExpressionUUID->"a7b8bf81-9863-4906-9b62-3bda2aec8bfb",
   CellTags->"labelColorMorph"],
  Cell[387942, 7340, 712, 13, 58, "Message",ExpressionUUID->"037efc30-62ae-48bc-bd98-b845d103753d",
   CellTags->"labelColorMorph"]},
 "labelBorders"->{
  Cell[391817, 7430, 4717, 118, 416, "Input",ExpressionUUID->"58532ff0-d532-41cf-93cf-2da5ac733938",
   CellTags->"labelBorders"],
  Cell[396537, 7550, 14718, 268, 926, "Output",ExpressionUUID->"c75e5be9-5eae-46cb-9120-80fa354d9bbc",
   CellTags->"labelBorders"]},
 "labelBordersBW"->{
  Cell[475679, 8992, 6994, 162, 583, "Input",ExpressionUUID->"7c411ce2-054b-4095-95b8-651b88f0fa87",
   CellTags->"labelBordersBW"],
  Cell[482676, 9156, 8685, 172, 198, "Output",ExpressionUUID->"cea20827-675c-444e-8d4f-dbc59f34e43f",
   CellTags->"labelBordersBW"],
  Cell[491364, 9330, 455, 9, 35, "Message",ExpressionUUID->"d07f18c2-9cbe-4b89-b34f-0d008f2c8267",
   CellTags->"labelBordersBW"],
  Cell[491822, 9341, 544, 10, 35, "Message",ExpressionUUID->"c5a89aa3-8ea2-4a04-a8e5-ad9b40c54a2a",
   CellTags->"labelBordersBW"],
  Cell[492369, 9353, 588, 11, 35, "Message",ExpressionUUID->"e2e58fde-4858-42de-8d37-2543549d8ed1",
   CellTags->"labelBordersBW"],
  Cell[492960, 9366, 672, 12, 35, "Message",ExpressionUUID->"462c9f1b-2244-4623-9058-f8168853eb46",
   CellTags->"labelBordersBW"],
  Cell[493635, 9380, 585, 11, 35, "Message",ExpressionUUID->"9da168ec-8e37-471f-832a-87f6fc7abd65",
   CellTags->"labelBordersBW"],
  Cell[494223, 9393, 574, 11, 35, "Message",ExpressionUUID->"0f89a7b1-ac0b-4faf-a3a7-59b4302b2fca",
   CellTags->"labelBordersBW"],
  Cell[494800, 9406, 586, 11, 35, "Message",ExpressionUUID->"9fcbcd07-7756-4a51-a999-d7603d4a49b5",
   CellTags->"labelBordersBW"],
  Cell[495389, 9419, 587, 11, 35, "Message",ExpressionUUID->"d2c33eab-6aac-4602-b210-b688d8aa7808",
   CellTags->"labelBordersBW"],
  Cell[495979, 9432, 672, 12, 35, "Message",ExpressionUUID->"486f6e6d-c6d9-41cc-9bee-13101066ba49",
   CellTags->"labelBordersBW"],
  Cell[496654, 9446, 456, 9, 35, "Message",ExpressionUUID->"24b0e96e-4140-4517-8307-cfd27a8083d3",
   CellTags->"labelBordersBW"]},
 "morphological gradient"->{
  Cell[561855, 10637, 6137, 160, 607, "Input",ExpressionUUID->"bc6f203e-bea7-4550-b765-078bf7ea2f0c",
   CellTags->{"morphological gradient", "labelBoundary1D"}],
  Cell[567995, 10799, 27391, 473, 572, "Output",ExpressionUUID->"49582a19-a7b9-4813-adeb-3b1fd1951948",
   CellTags->{"morphological gradient", "labelBoundary1D"}]},
 "labelBoundary1D"->{
  Cell[561855, 10637, 6137, 160, 607, "Input",ExpressionUUID->"bc6f203e-bea7-4550-b765-078bf7ea2f0c",
   CellTags->{"morphological gradient", "labelBoundary1D"}],
  Cell[567995, 10799, 27391, 473, 572, "Output",ExpressionUUID->"49582a19-a7b9-4813-adeb-3b1fd1951948",
   CellTags->{"morphological gradient", "labelBoundary1D"}]},
 "labelPeaks"->{
  Cell[596360, 11301, 5226, 128, 488, "Input",ExpressionUUID->"44f8c23e-8b8a-4d74-9a56-f253e4acdbea",
   CellTags->"labelPeaks"],
  Cell[601589, 11431, 7492, 148, 228, "Output",ExpressionUUID->"fb84783b-b07b-46cb-9e6a-54cd7fe170c4",
   CellTags->"labelPeaks"],
  Cell[609084, 11581, 454, 9, 35, "Message",ExpressionUUID->"a4cb68f0-07b2-4837-9eb9-7c9c43b5d68c",
   CellTags->"labelPeaks"],
  Cell[609541, 11592, 496, 10, 35, "Message",ExpressionUUID->"dcea3472-8b85-44bf-a933-d396eb85de7b",
   CellTags->"labelPeaks"],
  Cell[610040, 11604, 471, 10, 35, "Message",ExpressionUUID->"fd247ef6-0ee3-4c9a-94fe-ce2b9378f186",
   CellTags->"labelPeaks"],
  Cell[610514, 11616, 588, 11, 35, "Message",ExpressionUUID->"3aab116b-1df8-4bfb-9416-2063b422feba",
   CellTags->"labelPeaks"],
  Cell[611105, 11629, 479, 10, 35, "Message",ExpressionUUID->"9c2e60aa-3653-4169-9b66-8c3f2d5bb7ec",
   CellTags->"labelPeaks"],
  Cell[611587, 11641, 560, 12, 35, "Message",ExpressionUUID->"902162b1-a60e-4b13-b9ff-b3209ffc89a5",
   CellTags->"labelPeaks"],
  Cell[612150, 11655, 653, 13, 35, "Message",ExpressionUUID->"b1c3c3a2-4f1e-44b3-98a7-e2b74443f837",
   CellTags->"labelPeaks"],
  Cell[612806, 11670, 444, 9, 35, "Message",ExpressionUUID->"3ff13534-a591-4e2e-a452-209c0d310ace",
   CellTags->"labelPeaks"]},
 "labelBottomHat"->{
  Cell[678084, 12865, 5341, 127, 488, "Input",ExpressionUUID->"c3ed62d6-2266-432d-9397-50e373ae12a7",
   CellTags->"labelBottomHat"],
  Cell[683428, 12994, 7495, 148, 228, "Output",ExpressionUUID->"ad45eebb-174e-4181-a87c-6cc315aeedbc",
   CellTags->"labelBottomHat"],
  Cell[690926, 13144, 456, 9, 35, "Message",ExpressionUUID->"c32a3887-1907-4a66-aec9-c76701cf3ab6",
   CellTags->"labelBottomHat"],
  Cell[691385, 13155, 498, 10, 35, "Message",ExpressionUUID->"f6b1c4a5-ae8e-4c90-b65c-349c8e7c4e5e",
   CellTags->"labelBottomHat"],
  Cell[691886, 13167, 477, 10, 35, "Message",ExpressionUUID->"a61d911b-5196-4017-b7bc-224db625df30",
   CellTags->"labelBottomHat"],
  Cell[692366, 13179, 594, 11, 35, "Message",ExpressionUUID->"86e5aad4-4ba4-4069-83ed-125e786d88b5",
   CellTags->"labelBottomHat"],
  Cell[692963, 13192, 486, 10, 35, "Message",ExpressionUUID->"60c4583b-970e-4b83-9912-747b12cd5a16",
   CellTags->"labelBottomHat"],
  Cell[693452, 13204, 571, 12, 35, "Message",ExpressionUUID->"1558be04-df20-4e30-a372-f9216f214dbe",
   CellTags->"labelBottomHat"],
  Cell[694026, 13218, 664, 13, 58, "Message",ExpressionUUID->"e3739383-0406-41ab-bcae-78aeb5267e41",
   CellTags->"labelBottomHat"],
  Cell[694693, 13233, 450, 9, 35, "Message",ExpressionUUID->"47554f85-8ca8-483d-8b36-d5270f0be1da",
   CellTags->"labelBottomHat"]},
 "morphological skeletonization"->{
  Cell[696019, 13270, 287, 5, 66, "Subsection",ExpressionUUID->"5c8ea418-a98c-4672-9f5a-8d3ab7a968f9",
   CellTags->"morphological skeletonization"]},
 "labelSkeletonBW"->{
  Cell[698210, 13324, 4065, 101, 437, "Input",ExpressionUUID->"6b971e01-d456-493c-89d6-6f808cd10388",
   CellTags->"labelSkeletonBW"],
  Cell[702278, 13427, 18485, 328, 236, "Output",ExpressionUUID->"b46a2eed-40d9-4a5a-8e22-8fe8020ba4cb",
   CellTags->"labelSkeletonBW"]},
 "labelThinningBW"->{
  Cell[785035, 14928, 3191, 74, 347, "Input",ExpressionUUID->"4ef7e757-448f-4a3a-a9e9-34722dea70da",
   CellTags->"labelThinningBW"],
  Cell[788229, 15004, 281787, 4660, 808, "Output",ExpressionUUID->"43feef37-51f0-4f52-a13e-2098587be657",
   CellTags->"labelThinningBW"]},
 "labelMorphSkelXRay"->{
  Cell[1134419, 20838, 5693, 124, 497, "Input",ExpressionUUID->"e75bebd1-c5c8-4a15-b551-4300df0afdef",
   CellTags->"labelMorphSkelXRay"],
  Cell[1140115, 20964, 6889, 136, 174, "Output",ExpressionUUID->"3f1b0c2f-5620-4f14-8b05-69869223b10d",
   CellTags->"labelMorphSkelXRay"],
  Cell[1147007, 21102, 458, 9, 35, "Message",ExpressionUUID->"fbf6f8fb-3fb7-4438-8c6d-05081d4aa235",
   CellTags->"labelMorphSkelXRay"],
  Cell[1147468, 21113, 492, 10, 35, "Message",ExpressionUUID->"842c3323-5112-42b4-a7f2-74d02943453d",
   CellTags->"labelMorphSkelXRay"],
  Cell[1147963, 21125, 530, 10, 35, "Message",ExpressionUUID->"903ad1a3-468b-40ab-87d4-62b95f56ae66",
   CellTags->"labelMorphSkelXRay"],
  Cell[1148496, 21137, 530, 10, 35, "Message",ExpressionUUID->"1c835024-59b4-4b3a-8936-c70fe8bcedb5",
   CellTags->"labelMorphSkelXRay"],
  Cell[1149029, 21149, 617, 12, 35, "Message",ExpressionUUID->"6dc7377b-ae45-4759-acfd-bfcd90271ac7",
   CellTags->"labelMorphSkelXRay"],
  Cell[1149649, 21163, 602, 12, 35, "Message",ExpressionUUID->"69b5edf6-350a-44d8-9532-57376a159b75",
   CellTags->"labelMorphSkelXRay"],
  Cell[1150254, 21177, 1002, 17, 59, "Message",ExpressionUUID->"739d0eb5-4a8a-4d77-8f8e-7e986039ca13",
   CellTags->"labelMorphSkelXRay"],
  Cell[1151259, 21196, 530, 10, 35, "Message",ExpressionUUID->"97eaa17e-c1a0-4642-8f1b-2767ef271e25",
   CellTags->"labelMorphSkelXRay"],
  Cell[1151792, 21208, 452, 9, 35, "Message",ExpressionUUID->"3bbe6536-2776-4e2b-b126-5cc07597c67f",
   CellTags->"labelMorphSkelXRay"],
  Cell[1152247, 21219, 617, 12, 35, "Message",ExpressionUUID->"280a9b28-aee5-476d-b2f7-efc51fcf088f",
   CellTags->"labelMorphSkelXRay"],
  Cell[1152867, 21233, 600, 12, 35, "Message",ExpressionUUID->"e12b4f18-6052-441b-b345-b3663303e905",
   CellTags->"labelMorphSkelXRay"],
  Cell[1153470, 21247, 1004, 17, 59, "Message",ExpressionUUID->"8bbcbafe-2a88-431b-826a-41dd133dfc59",
   CellTags->"labelMorphSkelXRay"],
  Cell[1154477, 21266, 617, 12, 35, "Message",ExpressionUUID->"ac3fbe9c-2402-4c57-80f8-d8266c031b0d",
   CellTags->"labelMorphSkelXRay"],
  Cell[1155097, 21280, 452, 9, 35, "Message",ExpressionUUID->"ed2368b4-c413-4f20-9358-82eb316897e2",
   CellTags->"labelMorphSkelXRay"],
  Cell[1155552, 21291, 602, 12, 35, "Message",ExpressionUUID->"ef3458be-c9be-474e-9b8d-c57edb8919d5",
   CellTags->"labelMorphSkelXRay"],
  Cell[1156157, 21305, 458, 9, 35, "Message",ExpressionUUID->"e1462e0a-7593-487c-9dba-6b2353ef1108",
   CellTags->"labelMorphSkelXRay"],
  Cell[1156618, 21316, 1004, 17, 59, "Message",ExpressionUUID->"fde96047-1138-4db2-a6e6-d50d9b0f3666",
   CellTags->"labelMorphSkelXRay"],
  Cell[1157625, 21335, 456, 9, 35, "Message",ExpressionUUID->"69c7ccaa-2b8d-49f6-8dec-5efa6f5e0bc7",
   CellTags->"labelMorphSkelXRay"],
  Cell[1158084, 21346, 1130, 18, 59, "Message",ExpressionUUID->"34823032-0e29-4843-81f8-ca0f1394ec2a",
   CellTags->"labelMorphSkelXRay"],
  Cell[1159217, 21366, 1156, 20, 59, "Message",ExpressionUUID->"03c7785e-472c-43eb-ae07-6bac0d25a61f",
   CellTags->"labelMorphSkelXRay"],
  Cell[1160376, 21388, 511, 10, 35, "Message",ExpressionUUID->"ed481ceb-fc8f-443d-b9c8-b5da06d5187e",
   CellTags->"labelMorphSkelXRay"],
  Cell[1160890, 21400, 629, 12, 35, "Message",ExpressionUUID->"3821aabe-222a-466f-b7f5-cf4f28caed81",
   CellTags->"labelMorphSkelXRay"],
  Cell[1161522, 21414, 1155, 20, 59, "Message",ExpressionUUID->"57ca6d08-f42d-4503-9eb9-f07de7625760",
   CellTags->"labelMorphSkelXRay"],
  Cell[1162680, 21436, 456, 9, 35, "Message",ExpressionUUID->"5ac8434b-3b4d-49aa-81ce-1c796b6c23fa",
   CellTags->"labelMorphSkelXRay"],
  Cell[1163139, 21447, 457, 9, 35, "Message",ExpressionUUID->"aa7afabe-2b91-41c4-bef0-54122dc6e6d8",
   CellTags->"labelMorphSkelXRay"],
  Cell[1163599, 21458, 490, 10, 35, "Message",ExpressionUUID->"97fd5a46-7071-47d5-80ec-65a60015dbef",
   CellTags->"labelMorphSkelXRay"],
  Cell[1164092, 21470, 530, 10, 35, "Message",ExpressionUUID->"60ff7267-16ce-4ce8-bdb2-ba00fc59084c",
   CellTags->"labelMorphSkelXRay"],
  Cell[1164625, 21482, 528, 10, 35, "Message",ExpressionUUID->"5f855773-e54b-4e47-a3a9-6921cddcc463",
   CellTags->"labelMorphSkelXRay"],
  Cell[1165156, 21494, 617, 12, 35, "Message",ExpressionUUID->"7e07edc6-4a3e-4e2a-b674-a2d80bde9c41",
   CellTags->"labelMorphSkelXRay"],
  Cell[1165776, 21508, 600, 12, 35, "Message",ExpressionUUID->"7094bf36-65a4-4386-be7b-c8f4754010f4",
   CellTags->"labelMorphSkelXRay"],
  Cell[1166379, 21522, 1002, 17, 59, "Message",ExpressionUUID->"c8768578-736e-4df5-9c78-73a9a87daab2",
   CellTags->"labelMorphSkelXRay"],
  Cell[1167384, 21541, 528, 10, 35, "Message",ExpressionUUID->"143b7646-838c-42b6-859c-63cda4700f16",
   CellTags->"labelMorphSkelXRay"],
  Cell[1167915, 21553, 450, 9, 35, "Message",ExpressionUUID->"63d740a0-a7d0-4f9d-a3a5-954d78db4c19",
   CellTags->"labelMorphSkelXRay"],
  Cell[1168368, 21564, 615, 12, 35, "Message",ExpressionUUID->"0db1bad3-f7a8-408e-a5e2-88bafb187ed4",
   CellTags->"labelMorphSkelXRay"],
  Cell[1168986, 21578, 600, 12, 35, "Message",ExpressionUUID->"aa948827-e930-41b1-a281-22de37ab92a6",
   CellTags->"labelMorphSkelXRay"],
  Cell[1169589, 21592, 1004, 17, 59, "Message",ExpressionUUID->"18f9f705-8881-424d-9d54-04979326c225",
   CellTags->"labelMorphSkelXRay"],
  Cell[1170596, 21611, 617, 12, 35, "Message",ExpressionUUID->"3e23b6ca-a9b1-45c9-ac02-17754c408eed",
   CellTags->"labelMorphSkelXRay"],
  Cell[1171216, 21625, 450, 9, 35, "Message",ExpressionUUID->"0017af7c-63c0-4002-a558-34eab9c23582",
   CellTags->"labelMorphSkelXRay"],
  Cell[1171669, 21636, 602, 12, 35, "Message",ExpressionUUID->"9d9162ae-d3cd-4680-81f6-2f497eba38d9",
   CellTags->"labelMorphSkelXRay"],
  Cell[1172274, 21650, 460, 9, 35, "Message",ExpressionUUID->"a529f28f-0222-428e-b9c6-cfcbc3b1f714",
   CellTags->"labelMorphSkelXRay"],
  Cell[1172737, 21661, 1002, 17, 59, "Message",ExpressionUUID->"d7952f50-c45b-48db-b3e1-3abf55c1553a",
   CellTags->"labelMorphSkelXRay"],
  Cell[1173742, 21680, 456, 9, 35, "Message",ExpressionUUID->"f7e03e3e-3b9d-437a-80c2-72d08f0171a2",
   CellTags->"labelMorphSkelXRay"],
  Cell[1174201, 21691, 1130, 18, 59, "Message",ExpressionUUID->"828a8fe5-e352-45a1-9cc4-14246903cb23",
   CellTags->"labelMorphSkelXRay"],
  Cell[1175334, 21711, 1156, 20, 59, "Message",ExpressionUUID->"32315df2-4511-460e-a3f6-4c596359471b",
   CellTags->"labelMorphSkelXRay"],
  Cell[1176493, 21733, 511, 10, 35, "Message",ExpressionUUID->"37898cba-ea88-4047-b47c-754bb639608b",
   CellTags->"labelMorphSkelXRay"],
  Cell[1177007, 21745, 629, 12, 35, "Message",ExpressionUUID->"0d9fdb8a-9dd2-4d1d-aa68-c74dd1efa54e",
   CellTags->"labelMorphSkelXRay"],
  Cell[1177639, 21759, 1156, 20, 59, "Message",ExpressionUUID->"960cfe6f-f640-4bc1-8037-2d0111e95e4a",
   CellTags->"labelMorphSkelXRay"],
  Cell[1178798, 21781, 456, 9, 35, "Message",ExpressionUUID->"8c09c86a-297b-4810-86d9-77a9e7ea6cbf",
   CellTags->"labelMorphSkelXRay"],
  Cell[1179257, 21792, 461, 9, 35, "Message",ExpressionUUID->"a03565a4-e81c-4947-b6d1-3be8243cf130",
   CellTags->"labelMorphSkelXRay"],
  Cell[1179721, 21803, 493, 10, 35, "Message",ExpressionUUID->"f816320e-77f7-4ef7-b0b0-2be6f148e1e0",
   CellTags->"labelMorphSkelXRay"],
  Cell[1180217, 21815, 531, 10, 35, "Message",ExpressionUUID->"04f3e736-0a8b-4cfe-9976-61a18d3b2e9f",
   CellTags->"labelMorphSkelXRay"],
  Cell[1180751, 21827, 531, 10, 35, "Message",ExpressionUUID->"cde432fa-bf30-4004-a227-8d7ce5438804",
   CellTags->"labelMorphSkelXRay"],
  Cell[1181285, 21839, 616, 12, 35, "Message",ExpressionUUID->"de534c43-3e34-43fa-9818-937510c9c96f",
   CellTags->"labelMorphSkelXRay"],
  Cell[1181904, 21853, 601, 12, 35, "Message",ExpressionUUID->"417c2595-abe7-4b66-b91b-96a8e54d9b5c",
   CellTags->"labelMorphSkelXRay"],
  Cell[1182508, 21867, 1003, 17, 59, "Message",ExpressionUUID->"58dd0eda-db0d-415e-8553-4f0aa20d07c6",
   CellTags->"labelMorphSkelXRay"],
  Cell[1183514, 21886, 529, 10, 35, "Message",ExpressionUUID->"ac4697b9-4866-4631-b0c8-24ea6b4fd347",
   CellTags->"labelMorphSkelXRay"],
  Cell[1184046, 21898, 451, 9, 35, "Message",ExpressionUUID->"8f462f97-a893-4ee9-967b-9425112f425d",
   CellTags->"labelMorphSkelXRay"],
  Cell[1184500, 21909, 616, 12, 35, "Message",ExpressionUUID->"ab1dd519-5eaa-44dd-b925-53e12bace8ad",
   CellTags->"labelMorphSkelXRay"],
  Cell[1185119, 21923, 601, 12, 35, "Message",ExpressionUUID->"33f35e4c-aa7a-4d4d-8571-b3b2d9c797aa",
   CellTags->"labelMorphSkelXRay"],
  Cell[1185723, 21937, 1005, 17, 59, "Message",ExpressionUUID->"dc478925-5176-4a6a-b84b-0c7c9eacdcca",
   CellTags->"labelMorphSkelXRay"],
  Cell[1186731, 21956, 618, 12, 35, "Message",ExpressionUUID->"d797fc6e-17c4-46ce-ba02-84c29802bddf",
   CellTags->"labelMorphSkelXRay"],
  Cell[1187352, 21970, 453, 9, 35, "Message",ExpressionUUID->"71bcf25e-f75e-4c25-938e-77c5d4e940c9",
   CellTags->"labelMorphSkelXRay"],
  Cell[1187808, 21981, 604, 12, 35, "Message",ExpressionUUID->"3e4a2365-cd14-4ac6-a38d-952ef1c3bcaa",
   CellTags->"labelMorphSkelXRay"],
  Cell[1188415, 21995, 460, 9, 35, "Message",ExpressionUUID->"59d17707-4bac-40b6-a930-2a20eccae968",
   CellTags->"labelMorphSkelXRay"],
  Cell[1188878, 22006, 1004, 17, 59, "Message",ExpressionUUID->"3e067d41-77fa-40c2-934c-a51dc7357329",
   CellTags->"labelMorphSkelXRay"],
  Cell[1189885, 22025, 456, 9, 35, "Message",ExpressionUUID->"f917d4b8-4891-4210-bba6-b179e45e94c1",
   CellTags->"labelMorphSkelXRay"],
  Cell[1190344, 22036, 1132, 18, 59, "Message",ExpressionUUID->"44f44c4c-609c-4dad-9ec6-e49505b9116c",
   CellTags->"labelMorphSkelXRay"],
  Cell[1191479, 22056, 1160, 20, 59, "Message",ExpressionUUID->"d6e2389d-3b3c-485c-9177-92cffb0e6f81",
   CellTags->"labelMorphSkelXRay"],
  Cell[1192642, 22078, 513, 10, 35, "Message",ExpressionUUID->"6637ae1d-7973-4bed-bd64-2491a01b252f",
   CellTags->"labelMorphSkelXRay"],
  Cell[1193158, 22090, 630, 12, 35, "Message",ExpressionUUID->"04846491-c87b-4ae2-8bf0-06852d87cc9a",
   CellTags->"labelMorphSkelXRay"],
  Cell[1193791, 22104, 1158, 20, 59, "Message",ExpressionUUID->"d80a5e1b-b831-4404-853f-c4e308f4e6e6",
   CellTags->"labelMorphSkelXRay"],
  Cell[1194952, 22126, 460, 9, 35, "Message",ExpressionUUID->"08f92fcc-5585-47d0-bfa6-948061a7106d",
   CellTags->"labelMorphSkelXRay"]},
 "ultimate erosion"->{
  Cell[1293202, 23812, 193, 3, 66, "Subsection",ExpressionUUID->"aefcc26e-5944-4d17-9f05-28fcffec11d7",
   CellTags->"ultimate erosion"]},
 "labelUltimateErosion"->{
  Cell[1294712, 23844, 3797, 97, 347, "Input",ExpressionUUID->"ffd35b8d-3cc5-457e-8b5b-2100879d8d77",
   CellTags->"labelUltimateErosion"],
  Cell[1298512, 23943, 15347, 277, 581, "Output",ExpressionUUID->"c194804a-44a6-4896-9afd-cb1fa59c1586",
   CellTags->"labelUltimateErosion"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"representation", 1314480, 24243},
 {"erosion and dilation", 1314635, 24246},
 {"labelErodeDilateBW", 1314801, 24249},
 {"labelCloseOpenBW", 1315101, 24254},
 {"labelGrayMorph", 1315394, 24259},
 {"labelXRayMorph", 1315684, 24264},
 {"labelColorMorph", 1316764, 24281},
 {"labelBorders", 1318115, 24302},
 {"labelBordersBW", 1318401, 24307},
 {"morphological gradient", 1320016, 24332},
 {"labelBoundary1D", 1320367, 24337},
 {"labelPeaks", 1320713, 24342},
 {"labelBottomHat", 1322026, 24363},
 {"morphological skeletonization", 1323394, 24384},
 {"labelSkeletonBW", 1323567, 24387},
 {"labelThinningBW", 1323862, 24392},
 {"labelMorphSkelXRay", 1324161, 24397},
 {"ultimate erosion", 1334400, 24546},
 {"labelUltimateErosion", 1334566, 24549}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 639, 17, 60, "Input",ExpressionUUID->"bd7c0dd5-016e-4280-9f2e-e4a659409e4e"],
Cell[CellGroupData[{
Cell[1221, 41, 395, 6, 83, "Section",ExpressionUUID->"c2dc1044-f686-4fea-a152-65417f1403bd",
 CellTags->"representation"],
Cell[1619, 49, 177, 3, 35, "Input",ExpressionUUID->"ed3ca97c-69ec-4950-8dde-047d1b1fbc57"],
Cell[1799, 54, 154, 3, 35, InheritFromParent,ExpressionUUID->"b7f531e9-5265-4f9a-ac9f-4feb08b2b741"],
Cell[1956, 59, 1193, 19, 101, "Text",ExpressionUUID->"a81b2b7c-7d93-49f8-8359-480450a26794"],
Cell[CellGroupData[{
Cell[3174, 82, 5158, 137, 345, "Input",ExpressionUUID->"08f8b39f-dd9f-4250-8b39-6e06ba28a656"],
Cell[8335, 221, 9214, 227, 387, "Output",ExpressionUUID->"d19d195a-58ad-48db-b907-aafe55b0c3a7"]
}, Open  ]],
Cell[17564, 451, 144, 3, 43, "Text",ExpressionUUID->"803fd959-3f14-489b-8317-d1b0e946563c"],
Cell[17711, 456, 772, 11, 187, "Text",ExpressionUUID->"856064b6-f395-45be-aadb-798daa8c5541"],
Cell[CellGroupData[{
Cell[18508, 471, 160, 3, 35, "Input",ExpressionUUID->"b29031c4-58c8-4913-9c6d-f078b9fedd32"],
Cell[18671, 476, 63643, 1148, 60, "Output",ExpressionUUID->"2a9f3613-4667-4c98-a31a-f885ba1da99e"]
}, Open  ]],
Cell[82329, 1627, 798, 12, 187, "Text",ExpressionUUID->"3272c210-bf80-4e35-bf1d-515ad025e7c8"],
Cell[CellGroupData[{
Cell[83152, 1643, 34537, 575, 213, "Input",ExpressionUUID->"1237abf6-e4aa-4d8a-9de7-ca492156e595"],
Cell[117692, 2220, 35269, 590, 546, "Output",ExpressionUUID->"6ddbdb0b-0d07-4241-8511-c77887b65638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152998, 2815, 252, 5, 67, "Subsection",ExpressionUUID->"47d2c683-a317-42d5-946b-1587d8d54b16",
 CellTags->"erosion and dilation"],
Cell[153253, 2822, 1568, 34, 187, "Text",ExpressionUUID->"b057e201-5bb7-43e0-8fd8-2ff95813676e"],
Cell[CellGroupData[{
Cell[154846, 2860, 5777, 130, 488, "Input",ExpressionUUID->"0937552f-696a-4fdb-bdd5-a717a33c1cab",
 CellTags->"labelErodeDilateBW"],
Cell[160626, 2992, 17312, 314, 588, "Output",ExpressionUUID->"ec73d8c0-18e9-4e8a-9cc9-a16495b4d2b7",
 CellTags->"labelErodeDilateBW"]
}, Open  ]],
Cell[177953, 3309, 573, 10, 130, "Text",ExpressionUUID->"5f5ffd45-e62a-40b2-8a0a-ed19eb7ab73a"],
Cell[178529, 3321, 314, 7, 72, "Text",ExpressionUUID->"f011b4f7-a877-4c1f-a66f-15026c25aaf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178880, 3333, 262, 4, 67, "Subsection",ExpressionUUID->"4a6dd3b6-15a9-4e77-9a14-cb6cd9e659bf"],
Cell[179145, 3339, 552, 14, 72, "Text",ExpressionUUID->"02788ce7-03bd-4fd3-9eec-3531d91a239a"],
Cell[CellGroupData[{
Cell[179722, 3357, 6454, 146, 464, "Input",ExpressionUUID->"8bb32603-ee96-4176-ba6f-4502467f4f03",
 CellTags->"labelCloseOpenBW"],
Cell[186179, 3505, 7859, 177, 532, "Output",ExpressionUUID->"3002cd7b-049b-41c8-94a1-ed64a47d8dd8",
 CellTags->"labelCloseOpenBW"]
}, Open  ]],
Cell[194053, 3685, 539, 10, 72, "Text",ExpressionUUID->"b3c376d8-5413-4fd5-ab4b-f0d62b9a3e5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194629, 3700, 169, 3, 67, "Subsection",ExpressionUUID->"5c632c62-1df3-41a8-80a2-77aa3e761ec0"],
Cell[194801, 3705, 1482, 25, 187, "Text",ExpressionUUID->"3caa871d-484c-4cf8-99f9-3b72fb3c19fc"],
Cell[CellGroupData[{
Cell[196308, 3734, 5213, 130, 583, "Input",ExpressionUUID->"4919b145-e985-49cd-a09e-7ed9c5e89b9a",
 CellTags->"labelGrayMorph"],
Cell[201524, 3866, 25537, 441, 376, "Output",ExpressionUUID->"e06ff959-cd89-4ed7-ae5a-0d895686287a",
 CellTags->"labelGrayMorph"]
}, Open  ]],
Cell[227076, 4310, 1137, 20, 130, "Text",ExpressionUUID->"7b527760-5c40-482c-bae4-21974e135db4"],
Cell[CellGroupData[{
Cell[228238, 4334, 160, 3, 35, "Input",ExpressionUUID->"4271a69b-f7f9-4d44-9361-33153dfd2693"],
Cell[228401, 4339, 63643, 1148, 60, "Output",ExpressionUUID->"035a810c-cbaf-4482-b61b-ff15bcfb96d3"]
}, Open  ]],
Cell[292059, 5490, 300, 6, 72, "Text",ExpressionUUID->"5037c76a-6862-4e28-8d17-0fb4ad1b448a"],
Cell[CellGroupData[{
Cell[292384, 5500, 5364, 124, 535, "Input",ExpressionUUID->"acbdf8ce-78b4-46f6-8c9f-61ba15543ad3",
 CellTags->"labelXRayMorph"],
Cell[297751, 5626, 7949, 151, 264, "Output",ExpressionUUID->"328995d8-98a2-42d2-b62a-f9a0050857ea",
 CellTags->"labelXRayMorph"],
Cell[305703, 5779, 453, 9, 35, "Message",ExpressionUUID->"7a181ef4-91a1-4dcd-81cf-172a4e8f42f8",
 CellTags->"labelXRayMorph"],
Cell[306159, 5790, 473, 10, 35, "Message",ExpressionUUID->"87f9db8f-8d17-45d9-ac33-34db5d275e4b",
 CellTags->"labelXRayMorph"],
Cell[306635, 5802, 613, 11, 35, "Message",ExpressionUUID->"c6a28fa6-e0f1-4602-b786-4d9710585c59",
 CellTags->"labelXRayMorph"],
Cell[307251, 5815, 456, 9, 35, "Message",ExpressionUUID->"c6bee696-2273-4a44-9dc6-294b531d4afc",
 CellTags->"labelXRayMorph"],
Cell[307710, 5826, 476, 10, 35, "Message",ExpressionUUID->"4247c8d9-3a9c-4e84-a3b9-9065723c51f9",
 CellTags->"labelXRayMorph"],
Cell[308189, 5838, 614, 11, 35, "Message",ExpressionUUID->"59b472d7-ebef-46bf-8c0e-ba53c1841bf3",
 CellTags->"labelXRayMorph"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308840, 5854, 162, 3, 35, "Input",ExpressionUUID->"4a1f9d93-05ea-43e4-9afc-cf33be38c042"],
Cell[309005, 5859, 63643, 1148, 60, "Output",ExpressionUUID->"1f4724c7-42b6-46fc-acdd-31f670c7821a"]
}, Open  ]],
Cell[372663, 7010, 368, 7, 72, "Text",ExpressionUUID->"46bb5d97-6c3d-428e-b4cf-1fea5d431507"],
Cell[CellGroupData[{
Cell[373056, 7021, 4256, 100, 416, "Input",ExpressionUUID->"7a1d1f83-eed5-421c-a8c2-0d37b1308e85",
 CellTags->"labelColorMorph"],
Cell[377315, 7123, 6797, 128, 264, "Output",ExpressionUUID->"d465af6e-f200-401e-845c-3888a19a2a9a",
 CellTags->"labelColorMorph"],
Cell[384115, 7253, 457, 9, 35, "Message",ExpressionUUID->"ce87efe8-81c1-429e-b648-b8978f8eda2e",
 CellTags->"labelColorMorph"],
Cell[384575, 7264, 474, 10, 35, "Message",ExpressionUUID->"f126658d-8a53-4bd8-b3ce-b27378220c9a",
 CellTags->"labelColorMorph"],
Cell[385052, 7276, 613, 11, 35, "Message",ExpressionUUID->"af7405b6-525a-416e-b82e-947659bfee09",
 CellTags->"labelColorMorph"],
Cell[385668, 7289, 711, 13, 58, "Message",ExpressionUUID->"51708d01-d10e-4d14-89a1-40d0bc360989",
 CellTags->"labelColorMorph"],
Cell[386382, 7304, 458, 9, 35, "Message",ExpressionUUID->"6d9a8f2f-ac38-4f01-b372-f2479d2a8af3",
 CellTags->"labelColorMorph"],
Cell[386843, 7315, 476, 10, 35, "Message",ExpressionUUID->"c6934935-d0d5-44a0-8b3d-1ec2c6ab178a",
 CellTags->"labelColorMorph"],
Cell[387322, 7327, 617, 11, 35, "Message",ExpressionUUID->"a7b8bf81-9863-4906-9b62-3bda2aec8bfb",
 CellTags->"labelColorMorph"],
Cell[387942, 7340, 712, 13, 58, "Message",ExpressionUUID->"037efc30-62ae-48bc-bd98-b845d103753d",
 CellTags->"labelColorMorph"]
}, Open  ]],
Cell[388669, 7356, 454, 8, 101, "Text",ExpressionUUID->"6cfc39bc-019f-4980-9326-0baa90b62bd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389160, 7369, 303, 5, 67, "Subsection",ExpressionUUID->"fc8d0a16-66f1-4726-b219-1fc2ac157610"],
Cell[389466, 7376, 690, 11, 72, "Text",ExpressionUUID->"1cffd746-c228-46d1-ac13-8063a97a8177"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390193, 7392, 424, 7, 67, "Subsection",ExpressionUUID->"010f35a0-98fb-47bc-a7ef-848324afa075",
 CounterAssignments->{{"Section", 2}, {"Subsection", 0}, {"Subsubsection", 0}, {"NumberedEquation", 0}}],
Cell[390620, 7401, 1172, 25, 187, "Text",ExpressionUUID->"f2c45d83-3c55-412a-8722-3886feb146a0"],
Cell[CellGroupData[{
Cell[391817, 7430, 4717, 118, 416, "Input",ExpressionUUID->"58532ff0-d532-41cf-93cf-2da5ac733938",
 CellTags->"labelBorders"],
Cell[396537, 7550, 14718, 268, 926, "Output",ExpressionUUID->"c75e5be9-5eae-46cb-9120-80fa354d9bbc",
 CellTags->"labelBorders"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411292, 7823, 160, 3, 35, "Input",ExpressionUUID->"1ddf71f8-f03d-4310-8eaa-6d7e50addab1"],
Cell[411455, 7828, 63643, 1148, 60, "Output",ExpressionUUID->"71e8e34e-00e6-4b9a-aa4b-871125d79aa1"]
}, Open  ]],
Cell[475113, 8979, 541, 9, 101, "Text",ExpressionUUID->"4e702c33-643f-44c4-80ae-518f3b10aa89"],
Cell[CellGroupData[{
Cell[475679, 8992, 6994, 162, 583, "Input",ExpressionUUID->"7c411ce2-054b-4095-95b8-651b88f0fa87",
 CellTags->"labelBordersBW"],
Cell[482676, 9156, 8685, 172, 198, "Output",ExpressionUUID->"cea20827-675c-444e-8d4f-dbc59f34e43f",
 CellTags->"labelBordersBW"],
Cell[491364, 9330, 455, 9, 35, "Message",ExpressionUUID->"d07f18c2-9cbe-4b89-b34f-0d008f2c8267",
 CellTags->"labelBordersBW"],
Cell[491822, 9341, 544, 10, 35, "Message",ExpressionUUID->"c5a89aa3-8ea2-4a04-a8e5-ad9b40c54a2a",
 CellTags->"labelBordersBW"],
Cell[492369, 9353, 588, 11, 35, "Message",ExpressionUUID->"e2e58fde-4858-42de-8d37-2543549d8ed1",
 CellTags->"labelBordersBW"],
Cell[492960, 9366, 672, 12, 35, "Message",ExpressionUUID->"462c9f1b-2244-4623-9058-f8168853eb46",
 CellTags->"labelBordersBW"],
Cell[493635, 9380, 585, 11, 35, "Message",ExpressionUUID->"9da168ec-8e37-471f-832a-87f6fc7abd65",
 CellTags->"labelBordersBW"],
Cell[494223, 9393, 574, 11, 35, "Message",ExpressionUUID->"0f89a7b1-ac0b-4faf-a3a7-59b4302b2fca",
 CellTags->"labelBordersBW"],
Cell[494800, 9406, 586, 11, 35, "Message",ExpressionUUID->"9fcbcd07-7756-4a51-a999-d7603d4a49b5",
 CellTags->"labelBordersBW"],
Cell[495389, 9419, 587, 11, 35, "Message",ExpressionUUID->"d2c33eab-6aac-4602-b210-b688d8aa7808",
 CellTags->"labelBordersBW"],
Cell[495979, 9432, 672, 12, 35, "Message",ExpressionUUID->"486f6e6d-c6d9-41cc-9bee-13101066ba49",
 CellTags->"labelBordersBW"],
Cell[496654, 9446, 456, 9, 35, "Message",ExpressionUUID->"24b0e96e-4140-4517-8307-cfd27a8083d3",
 CellTags->"labelBordersBW"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497147, 9460, 160, 3, 35, "Input",ExpressionUUID->"54a71009-b3f6-422b-9782-7996523e5b98"],
Cell[497310, 9465, 63643, 1148, 60, "Output",ExpressionUUID->"e83c1a1f-1702-463b-b3f7-da682e29ab8c"]
}, Open  ]],
Cell[560968, 10616, 862, 17, 101, "Text",ExpressionUUID->"c29087e3-ddad-4b5d-a67b-25ff5443ddfe"],
Cell[CellGroupData[{
Cell[561855, 10637, 6137, 160, 607, "Input",ExpressionUUID->"bc6f203e-bea7-4550-b765-078bf7ea2f0c",
 CellTags->{"morphological gradient", "labelBoundary1D"}],
Cell[567995, 10799, 27391, 473, 572, "Output",ExpressionUUID->"49582a19-a7b9-4813-adeb-3b1fd1951948",
 CellTags->{"morphological gradient", "labelBoundary1D"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[595435, 11278, 271, 4, 67, "Subsection",ExpressionUUID->"27ee1ae6-39fa-4490-832d-2fe328e62634"],
Cell[595709, 11284, 626, 13, 101, "Text",ExpressionUUID->"4ddd5934-f0cd-43ad-8181-d223a171dafb"],
Cell[CellGroupData[{
Cell[596360, 11301, 5226, 128, 488, "Input",ExpressionUUID->"44f8c23e-8b8a-4d74-9a56-f253e4acdbea",
 CellTags->"labelPeaks"],
Cell[601589, 11431, 7492, 148, 228, "Output",ExpressionUUID->"fb84783b-b07b-46cb-9e6a-54cd7fe170c4",
 CellTags->"labelPeaks"],
Cell[609084, 11581, 454, 9, 35, "Message",ExpressionUUID->"a4cb68f0-07b2-4837-9eb9-7c9c43b5d68c",
 CellTags->"labelPeaks"],
Cell[609541, 11592, 496, 10, 35, "Message",ExpressionUUID->"dcea3472-8b85-44bf-a933-d396eb85de7b",
 CellTags->"labelPeaks"],
Cell[610040, 11604, 471, 10, 35, "Message",ExpressionUUID->"fd247ef6-0ee3-4c9a-94fe-ce2b9378f186",
 CellTags->"labelPeaks"],
Cell[610514, 11616, 588, 11, 35, "Message",ExpressionUUID->"3aab116b-1df8-4bfb-9416-2063b422feba",
 CellTags->"labelPeaks"],
Cell[611105, 11629, 479, 10, 35, "Message",ExpressionUUID->"9c2e60aa-3653-4169-9b66-8c3f2d5bb7ec",
 CellTags->"labelPeaks"],
Cell[611587, 11641, 560, 12, 35, "Message",ExpressionUUID->"902162b1-a60e-4b13-b9ff-b3209ffc89a5",
 CellTags->"labelPeaks"],
Cell[612150, 11655, 653, 13, 35, "Message",ExpressionUUID->"b1c3c3a2-4f1e-44b3-98a7-e2b74443f837",
 CellTags->"labelPeaks"],
Cell[612806, 11670, 444, 9, 35, "Message",ExpressionUUID->"3ff13534-a591-4e2e-a452-209c0d310ace",
 CellTags->"labelPeaks"]
}, Open  ]],
Cell[613265, 11682, 364, 7, 72, "Text",ExpressionUUID->"a594f52e-a2d9-440d-b439-73528c93aaf1"],
Cell[CellGroupData[{
Cell[613654, 11693, 162, 3, 35, "Input",ExpressionUUID->"b5dd8a5c-ec62-4737-9c70-2f62043b405c"],
Cell[613819, 11698, 63643, 1148, 60, "Output",ExpressionUUID->"dc613cbf-b009-45f3-a8fd-95b4524c40c0"]
}, Open  ]],
Cell[677477, 12849, 582, 12, 72, "Text",ExpressionUUID->"1813f00c-0548-4bd3-beb3-f1a65b9f661e"],
Cell[CellGroupData[{
Cell[678084, 12865, 5341, 127, 488, "Input",ExpressionUUID->"c3ed62d6-2266-432d-9397-50e373ae12a7",
 CellTags->"labelBottomHat"],
Cell[683428, 12994, 7495, 148, 228, "Output",ExpressionUUID->"ad45eebb-174e-4181-a87c-6cc315aeedbc",
 CellTags->"labelBottomHat"],
Cell[690926, 13144, 456, 9, 35, "Message",ExpressionUUID->"c32a3887-1907-4a66-aec9-c76701cf3ab6",
 CellTags->"labelBottomHat"],
Cell[691385, 13155, 498, 10, 35, "Message",ExpressionUUID->"f6b1c4a5-ae8e-4c90-b65c-349c8e7c4e5e",
 CellTags->"labelBottomHat"],
Cell[691886, 13167, 477, 10, 35, "Message",ExpressionUUID->"a61d911b-5196-4017-b7bc-224db625df30",
 CellTags->"labelBottomHat"],
Cell[692366, 13179, 594, 11, 35, "Message",ExpressionUUID->"86e5aad4-4ba4-4069-83ed-125e786d88b5",
 CellTags->"labelBottomHat"],
Cell[692963, 13192, 486, 10, 35, "Message",ExpressionUUID->"60c4583b-970e-4b83-9912-747b12cd5a16",
 CellTags->"labelBottomHat"],
Cell[693452, 13204, 571, 12, 35, "Message",ExpressionUUID->"1558be04-df20-4e30-a372-f9216f214dbe",
 CellTags->"labelBottomHat"],
Cell[694026, 13218, 664, 13, 58, "Message",ExpressionUUID->"e3739383-0406-41ab-bcae-78aeb5267e41",
 CellTags->"labelBottomHat"],
Cell[694693, 13233, 450, 9, 35, "Message",ExpressionUUID->"47554f85-8ca8-483d-8b36-d5270f0be1da",
 CellTags->"labelBottomHat"]
}, Open  ]],
Cell[695158, 13245, 588, 12, 45, "Text",ExpressionUUID->"139b69aa-851c-499a-9f32-cd290064b40f"],
Cell[695749, 13259, 233, 6, 45, "Text",ExpressionUUID->"f1832f4a-7064-4e2d-b607-e1c36ac44c38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696019, 13270, 287, 5, 66, "Subsection",ExpressionUUID->"5c8ea418-a98c-4672-9f5a-8d3ab7a968f9",
 CellTags->"morphological skeletonization"],
Cell[696309, 13277, 683, 12, 81, "Text",ExpressionUUID->"7a71ce50-74c3-459f-9067-c600ad28dfc3"],
Cell[696995, 13291, 578, 16, 57, "Input",ExpressionUUID->"2bf91102-4007-4fe3-b41a-aac9521ed9e0",
 Evaluatable->False],
Cell[697576, 13309, 609, 11, 65, "Text",ExpressionUUID->"20f399fc-a077-4b3f-a450-8a009881d4ea"],
Cell[CellGroupData[{
Cell[698210, 13324, 4065, 101, 437, "Input",ExpressionUUID->"6b971e01-d456-493c-89d6-6f808cd10388",
 CellTags->"labelSkeletonBW"],
Cell[702278, 13427, 18485, 328, 236, "Output",ExpressionUUID->"b46a2eed-40d9-4a5a-8e22-8fe8020ba4cb",
 CellTags->"labelSkeletonBW"]
}, Open  ]],
Cell[CellGroupData[{
Cell[720800, 13760, 159, 3, 46, "Input",ExpressionUUID->"b0f107f0-ea4e-4609-997d-1266296d5f07"],
Cell[720962, 13765, 63643, 1148, 72, "Output",ExpressionUUID->"9b1f475d-5d2d-4ae1-a0a5-19f7d95b65f0"]
}, Open  ]],
Cell[784620, 14916, 390, 8, 36, "Text",ExpressionUUID->"f715cf3b-8083-4ee3-80f3-c0d3bab65461"],
Cell[CellGroupData[{
Cell[785035, 14928, 3191, 74, 347, "Input",ExpressionUUID->"4ef7e757-448f-4a3a-a9e9-34722dea70da",
 CellTags->"labelThinningBW"],
Cell[788229, 15004, 281787, 4660, 808, "Output",ExpressionUUID->"43feef37-51f0-4f52-a13e-2098587be657",
 CellTags->"labelThinningBW"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070053, 19669, 162, 3, 46, "Input",ExpressionUUID->"d5309fcb-93ba-4881-b97b-1e1f0867033b"],
Cell[1070218, 19674, 63643, 1148, 72, "Output",ExpressionUUID->"108186fd-ab12-4e81-90ca-2fe49827872e"]
}, Open  ]],
Cell[1133876, 20825, 518, 9, 36, "Text",ExpressionUUID->"7a6187b1-d05f-4e6e-8274-dcabc06513be"],
Cell[CellGroupData[{
Cell[1134419, 20838, 5693, 124, 497, "Input",ExpressionUUID->"e75bebd1-c5c8-4a15-b551-4300df0afdef",
 CellTags->"labelMorphSkelXRay"],
Cell[1140115, 20964, 6889, 136, 174, "Output",ExpressionUUID->"3f1b0c2f-5620-4f14-8b05-69869223b10d",
 CellTags->"labelMorphSkelXRay"],
Cell[1147007, 21102, 458, 9, 35, "Message",ExpressionUUID->"fbf6f8fb-3fb7-4438-8c6d-05081d4aa235",
 CellTags->"labelMorphSkelXRay"],
Cell[1147468, 21113, 492, 10, 35, "Message",ExpressionUUID->"842c3323-5112-42b4-a7f2-74d02943453d",
 CellTags->"labelMorphSkelXRay"],
Cell[1147963, 21125, 530, 10, 35, "Message",ExpressionUUID->"903ad1a3-468b-40ab-87d4-62b95f56ae66",
 CellTags->"labelMorphSkelXRay"],
Cell[1148496, 21137, 530, 10, 35, "Message",ExpressionUUID->"1c835024-59b4-4b3a-8936-c70fe8bcedb5",
 CellTags->"labelMorphSkelXRay"],
Cell[1149029, 21149, 617, 12, 35, "Message",ExpressionUUID->"6dc7377b-ae45-4759-acfd-bfcd90271ac7",
 CellTags->"labelMorphSkelXRay"],
Cell[1149649, 21163, 602, 12, 35, "Message",ExpressionUUID->"69b5edf6-350a-44d8-9532-57376a159b75",
 CellTags->"labelMorphSkelXRay"],
Cell[1150254, 21177, 1002, 17, 59, "Message",ExpressionUUID->"739d0eb5-4a8a-4d77-8f8e-7e986039ca13",
 CellTags->"labelMorphSkelXRay"],
Cell[1151259, 21196, 530, 10, 35, "Message",ExpressionUUID->"97eaa17e-c1a0-4642-8f1b-2767ef271e25",
 CellTags->"labelMorphSkelXRay"],
Cell[1151792, 21208, 452, 9, 35, "Message",ExpressionUUID->"3bbe6536-2776-4e2b-b126-5cc07597c67f",
 CellTags->"labelMorphSkelXRay"],
Cell[1152247, 21219, 617, 12, 35, "Message",ExpressionUUID->"280a9b28-aee5-476d-b2f7-efc51fcf088f",
 CellTags->"labelMorphSkelXRay"],
Cell[1152867, 21233, 600, 12, 35, "Message",ExpressionUUID->"e12b4f18-6052-441b-b345-b3663303e905",
 CellTags->"labelMorphSkelXRay"],
Cell[1153470, 21247, 1004, 17, 59, "Message",ExpressionUUID->"8bbcbafe-2a88-431b-826a-41dd133dfc59",
 CellTags->"labelMorphSkelXRay"],
Cell[1154477, 21266, 617, 12, 35, "Message",ExpressionUUID->"ac3fbe9c-2402-4c57-80f8-d8266c031b0d",
 CellTags->"labelMorphSkelXRay"],
Cell[1155097, 21280, 452, 9, 35, "Message",ExpressionUUID->"ed2368b4-c413-4f20-9358-82eb316897e2",
 CellTags->"labelMorphSkelXRay"],
Cell[1155552, 21291, 602, 12, 35, "Message",ExpressionUUID->"ef3458be-c9be-474e-9b8d-c57edb8919d5",
 CellTags->"labelMorphSkelXRay"],
Cell[1156157, 21305, 458, 9, 35, "Message",ExpressionUUID->"e1462e0a-7593-487c-9dba-6b2353ef1108",
 CellTags->"labelMorphSkelXRay"],
Cell[1156618, 21316, 1004, 17, 59, "Message",ExpressionUUID->"fde96047-1138-4db2-a6e6-d50d9b0f3666",
 CellTags->"labelMorphSkelXRay"],
Cell[1157625, 21335, 456, 9, 35, "Message",ExpressionUUID->"69c7ccaa-2b8d-49f6-8dec-5efa6f5e0bc7",
 CellTags->"labelMorphSkelXRay"],
Cell[1158084, 21346, 1130, 18, 59, "Message",ExpressionUUID->"34823032-0e29-4843-81f8-ca0f1394ec2a",
 CellTags->"labelMorphSkelXRay"],
Cell[1159217, 21366, 1156, 20, 59, "Message",ExpressionUUID->"03c7785e-472c-43eb-ae07-6bac0d25a61f",
 CellTags->"labelMorphSkelXRay"],
Cell[1160376, 21388, 511, 10, 35, "Message",ExpressionUUID->"ed481ceb-fc8f-443d-b9c8-b5da06d5187e",
 CellTags->"labelMorphSkelXRay"],
Cell[1160890, 21400, 629, 12, 35, "Message",ExpressionUUID->"3821aabe-222a-466f-b7f5-cf4f28caed81",
 CellTags->"labelMorphSkelXRay"],
Cell[1161522, 21414, 1155, 20, 59, "Message",ExpressionUUID->"57ca6d08-f42d-4503-9eb9-f07de7625760",
 CellTags->"labelMorphSkelXRay"],
Cell[1162680, 21436, 456, 9, 35, "Message",ExpressionUUID->"5ac8434b-3b4d-49aa-81ce-1c796b6c23fa",
 CellTags->"labelMorphSkelXRay"],
Cell[1163139, 21447, 457, 9, 35, "Message",ExpressionUUID->"aa7afabe-2b91-41c4-bef0-54122dc6e6d8",
 CellTags->"labelMorphSkelXRay"],
Cell[1163599, 21458, 490, 10, 35, "Message",ExpressionUUID->"97fd5a46-7071-47d5-80ec-65a60015dbef",
 CellTags->"labelMorphSkelXRay"],
Cell[1164092, 21470, 530, 10, 35, "Message",ExpressionUUID->"60ff7267-16ce-4ce8-bdb2-ba00fc59084c",
 CellTags->"labelMorphSkelXRay"],
Cell[1164625, 21482, 528, 10, 35, "Message",ExpressionUUID->"5f855773-e54b-4e47-a3a9-6921cddcc463",
 CellTags->"labelMorphSkelXRay"],
Cell[1165156, 21494, 617, 12, 35, "Message",ExpressionUUID->"7e07edc6-4a3e-4e2a-b674-a2d80bde9c41",
 CellTags->"labelMorphSkelXRay"],
Cell[1165776, 21508, 600, 12, 35, "Message",ExpressionUUID->"7094bf36-65a4-4386-be7b-c8f4754010f4",
 CellTags->"labelMorphSkelXRay"],
Cell[1166379, 21522, 1002, 17, 59, "Message",ExpressionUUID->"c8768578-736e-4df5-9c78-73a9a87daab2",
 CellTags->"labelMorphSkelXRay"],
Cell[1167384, 21541, 528, 10, 35, "Message",ExpressionUUID->"143b7646-838c-42b6-859c-63cda4700f16",
 CellTags->"labelMorphSkelXRay"],
Cell[1167915, 21553, 450, 9, 35, "Message",ExpressionUUID->"63d740a0-a7d0-4f9d-a3a5-954d78db4c19",
 CellTags->"labelMorphSkelXRay"],
Cell[1168368, 21564, 615, 12, 35, "Message",ExpressionUUID->"0db1bad3-f7a8-408e-a5e2-88bafb187ed4",
 CellTags->"labelMorphSkelXRay"],
Cell[1168986, 21578, 600, 12, 35, "Message",ExpressionUUID->"aa948827-e930-41b1-a281-22de37ab92a6",
 CellTags->"labelMorphSkelXRay"],
Cell[1169589, 21592, 1004, 17, 59, "Message",ExpressionUUID->"18f9f705-8881-424d-9d54-04979326c225",
 CellTags->"labelMorphSkelXRay"],
Cell[1170596, 21611, 617, 12, 35, "Message",ExpressionUUID->"3e23b6ca-a9b1-45c9-ac02-17754c408eed",
 CellTags->"labelMorphSkelXRay"],
Cell[1171216, 21625, 450, 9, 35, "Message",ExpressionUUID->"0017af7c-63c0-4002-a558-34eab9c23582",
 CellTags->"labelMorphSkelXRay"],
Cell[1171669, 21636, 602, 12, 35, "Message",ExpressionUUID->"9d9162ae-d3cd-4680-81f6-2f497eba38d9",
 CellTags->"labelMorphSkelXRay"],
Cell[1172274, 21650, 460, 9, 35, "Message",ExpressionUUID->"a529f28f-0222-428e-b9c6-cfcbc3b1f714",
 CellTags->"labelMorphSkelXRay"],
Cell[1172737, 21661, 1002, 17, 59, "Message",ExpressionUUID->"d7952f50-c45b-48db-b3e1-3abf55c1553a",
 CellTags->"labelMorphSkelXRay"],
Cell[1173742, 21680, 456, 9, 35, "Message",ExpressionUUID->"f7e03e3e-3b9d-437a-80c2-72d08f0171a2",
 CellTags->"labelMorphSkelXRay"],
Cell[1174201, 21691, 1130, 18, 59, "Message",ExpressionUUID->"828a8fe5-e352-45a1-9cc4-14246903cb23",
 CellTags->"labelMorphSkelXRay"],
Cell[1175334, 21711, 1156, 20, 59, "Message",ExpressionUUID->"32315df2-4511-460e-a3f6-4c596359471b",
 CellTags->"labelMorphSkelXRay"],
Cell[1176493, 21733, 511, 10, 35, "Message",ExpressionUUID->"37898cba-ea88-4047-b47c-754bb639608b",
 CellTags->"labelMorphSkelXRay"],
Cell[1177007, 21745, 629, 12, 35, "Message",ExpressionUUID->"0d9fdb8a-9dd2-4d1d-aa68-c74dd1efa54e",
 CellTags->"labelMorphSkelXRay"],
Cell[1177639, 21759, 1156, 20, 59, "Message",ExpressionUUID->"960cfe6f-f640-4bc1-8037-2d0111e95e4a",
 CellTags->"labelMorphSkelXRay"],
Cell[1178798, 21781, 456, 9, 35, "Message",ExpressionUUID->"8c09c86a-297b-4810-86d9-77a9e7ea6cbf",
 CellTags->"labelMorphSkelXRay"],
Cell[1179257, 21792, 461, 9, 35, "Message",ExpressionUUID->"a03565a4-e81c-4947-b6d1-3be8243cf130",
 CellTags->"labelMorphSkelXRay"],
Cell[1179721, 21803, 493, 10, 35, "Message",ExpressionUUID->"f816320e-77f7-4ef7-b0b0-2be6f148e1e0",
 CellTags->"labelMorphSkelXRay"],
Cell[1180217, 21815, 531, 10, 35, "Message",ExpressionUUID->"04f3e736-0a8b-4cfe-9976-61a18d3b2e9f",
 CellTags->"labelMorphSkelXRay"],
Cell[1180751, 21827, 531, 10, 35, "Message",ExpressionUUID->"cde432fa-bf30-4004-a227-8d7ce5438804",
 CellTags->"labelMorphSkelXRay"],
Cell[1181285, 21839, 616, 12, 35, "Message",ExpressionUUID->"de534c43-3e34-43fa-9818-937510c9c96f",
 CellTags->"labelMorphSkelXRay"],
Cell[1181904, 21853, 601, 12, 35, "Message",ExpressionUUID->"417c2595-abe7-4b66-b91b-96a8e54d9b5c",
 CellTags->"labelMorphSkelXRay"],
Cell[1182508, 21867, 1003, 17, 59, "Message",ExpressionUUID->"58dd0eda-db0d-415e-8553-4f0aa20d07c6",
 CellTags->"labelMorphSkelXRay"],
Cell[1183514, 21886, 529, 10, 35, "Message",ExpressionUUID->"ac4697b9-4866-4631-b0c8-24ea6b4fd347",
 CellTags->"labelMorphSkelXRay"],
Cell[1184046, 21898, 451, 9, 35, "Message",ExpressionUUID->"8f462f97-a893-4ee9-967b-9425112f425d",
 CellTags->"labelMorphSkelXRay"],
Cell[1184500, 21909, 616, 12, 35, "Message",ExpressionUUID->"ab1dd519-5eaa-44dd-b925-53e12bace8ad",
 CellTags->"labelMorphSkelXRay"],
Cell[1185119, 21923, 601, 12, 35, "Message",ExpressionUUID->"33f35e4c-aa7a-4d4d-8571-b3b2d9c797aa",
 CellTags->"labelMorphSkelXRay"],
Cell[1185723, 21937, 1005, 17, 59, "Message",ExpressionUUID->"dc478925-5176-4a6a-b84b-0c7c9eacdcca",
 CellTags->"labelMorphSkelXRay"],
Cell[1186731, 21956, 618, 12, 35, "Message",ExpressionUUID->"d797fc6e-17c4-46ce-ba02-84c29802bddf",
 CellTags->"labelMorphSkelXRay"],
Cell[1187352, 21970, 453, 9, 35, "Message",ExpressionUUID->"71bcf25e-f75e-4c25-938e-77c5d4e940c9",
 CellTags->"labelMorphSkelXRay"],
Cell[1187808, 21981, 604, 12, 35, "Message",ExpressionUUID->"3e4a2365-cd14-4ac6-a38d-952ef1c3bcaa",
 CellTags->"labelMorphSkelXRay"],
Cell[1188415, 21995, 460, 9, 35, "Message",ExpressionUUID->"59d17707-4bac-40b6-a930-2a20eccae968",
 CellTags->"labelMorphSkelXRay"],
Cell[1188878, 22006, 1004, 17, 59, "Message",ExpressionUUID->"3e067d41-77fa-40c2-934c-a51dc7357329",
 CellTags->"labelMorphSkelXRay"],
Cell[1189885, 22025, 456, 9, 35, "Message",ExpressionUUID->"f917d4b8-4891-4210-bba6-b179e45e94c1",
 CellTags->"labelMorphSkelXRay"],
Cell[1190344, 22036, 1132, 18, 59, "Message",ExpressionUUID->"44f44c4c-609c-4dad-9ec6-e49505b9116c",
 CellTags->"labelMorphSkelXRay"],
Cell[1191479, 22056, 1160, 20, 59, "Message",ExpressionUUID->"d6e2389d-3b3c-485c-9177-92cffb0e6f81",
 CellTags->"labelMorphSkelXRay"],
Cell[1192642, 22078, 513, 10, 35, "Message",ExpressionUUID->"6637ae1d-7973-4bed-bd64-2491a01b252f",
 CellTags->"labelMorphSkelXRay"],
Cell[1193158, 22090, 630, 12, 35, "Message",ExpressionUUID->"04846491-c87b-4ae2-8bf0-06852d87cc9a",
 CellTags->"labelMorphSkelXRay"],
Cell[1193791, 22104, 1158, 20, 59, "Message",ExpressionUUID->"d80a5e1b-b831-4404-853f-c4e308f4e6e6",
 CellTags->"labelMorphSkelXRay"],
Cell[1194952, 22126, 460, 9, 35, "Message",ExpressionUUID->"08f92fcc-5585-47d0-bfa6-948061a7106d",
 CellTags->"labelMorphSkelXRay"]
}, Open  ]],
Cell[1195427, 22138, 627, 13, 65, "Text",ExpressionUUID->"6a8863ff-9126-4641-80a1-4e100be56456"],
Cell[CellGroupData[{
Cell[1196079, 22155, 158, 3, 46, "Input",ExpressionUUID->"a0d8c5f4-af24-4aa5-b4c7-7d9d19b1c18a"],
Cell[1196240, 22160, 94039, 1573, 102, "Output",ExpressionUUID->"19ed27cb-2977-42f5-9669-1cb4d8285b7c"]
}, Open  ]],
Cell[1290294, 23736, 2871, 71, 167, "Input",ExpressionUUID->"ced7d747-03a4-473b-af2b-694e468bf287"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1293202, 23812, 193, 3, 66, "Subsection",ExpressionUUID->"aefcc26e-5944-4d17-9f05-28fcffec11d7",
 CellTags->"ultimate erosion"],
Cell[1293398, 23817, 1289, 23, 150, "Text",ExpressionUUID->"9bbb3912-6f09-4939-983c-31c4ec9b7c83"],
Cell[CellGroupData[{
Cell[1294712, 23844, 3797, 97, 347, "Input",ExpressionUUID->"ffd35b8d-3cc5-457e-8b5b-2100879d8d77",
 CellTags->"labelUltimateErosion"],
Cell[1298512, 23943, 15347, 277, 581, "Output",ExpressionUUID->"c194804a-44a6-4896-9afd-cb1fa59c1586",
 CellTags->"labelUltimateErosion"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

